{
  "channel": {
    "id": "schezokim",
    "name": "Austin Kim",
    "profile": "https://yt3.googleusercontent.com/ytc/APkrFKaHC6qrR60lgxivQzfn4HThd8qRF2zuKr3KsK-v=s176-c-k-c0x00ffffff-no-rj",
    "banner": "https://yt3.googleusercontent.com/cCAeKZfe8Yz9kR8UFXjWQBK7OocEhtsCL8g6m7e_J8eg6iJug9NW4TdAYDsVK1-M9fWgJAZ9zw=w1707-fcrop64=1,00005a57ffffa5a8-k-c0xffffffff-no-nd-rj"
  },
  "videos": [
    { "id": "oSQ6M-oaQJk", "title": "[9회 커널 개발자 모임] 1. kernel report (Part2) - 이현철 개발자님" },
    { "id": "cnkdD1-pPsI", "title": "[9회 커널 개발자 모임] 1. kernel report (Part3) - 이현철 개발자님" },
    { "id": "nXez0l1ylAM", "title": "[9회 커널 개발자 모임] 2. Realtime Application 성능 최적화를 위한 RT-Linux 환경 구성 (Part1) - 황재호 개발자님" },
    { "id": "GN3HezzYW8Y", "title": "[9회 커널 개발자 모임] 1. kernel report (Part1) - 이현철 개발자님" },
    { "id": "Zdqgi9pZTFA", "title": "[RISC-V] Logical operation 소개" },
    { "id": "3bv9oPy6Hog", "title": "[RISC-V] AND 명령어 실습 (TRACE32 디버깅)" },
    { "id": "OY2uYtxJdpM", "title": "[RISC-V] 어셈블리 명령어 포멧" },
    { "id": "dkunPslqcA0", "title": "[Armv8] Exception debugging - memory dump 1 - 커널 로그 분석" },
    { "id": "c6jT44MNM_E", "title": "[Armv8] Exception debugging - memory dump 1 - 덤프 분석 (TRACE32)" },
    { "id": "aMPBpcaoTr0", "title": "[Armv7-A] B와 BL 명령어 디버깅 TRACE32 실습 Part1" },
    { "id": "6nqnLtGnpWI", "title": "[RISC-V] 시스템 콜 번호 지정 (리눅스 커널)" },
    { "id": "tYHGXftxXBI", "title": "[리눅스커널] 실행 시간을 관리하는 방식을 왜 알아야 할까-Overview" },
    { "id": "JS40YalOnhg", "title": "[리눅스커널] 실행 시간을 관리하는 방식을 왜 알아야 할까-예외처리" },
    { "id": "83GJuCZZeYQ", "title": "[리눅스커널] 시스템에 부하가 걸리는 조건" },
    { "id": "gU6-YVgD_po", "title": "[RISC-V] RISC-V 아키텍처를 잘 배워야 하는 이유 (브링업을 잘하기 위해)" },
    { "id": "EKIQcy-bdXo", "title": "[RISC-V] 익셉션의 타입과 종류 소개" },
    { "id": "7g3Md9cNmYI", "title": "[RISC-V] Privilege mode usage 모델 소개" },
    { "id": "Z2gJU5Gqxno", "title": "[리눅스 커널] VFS (Virtual File system) 소개" },
    { "id": "i7Bvu2B-TME", "title": "[리눅스 커널] VFS (Virtual File System) 전체 실행 흐름" },
    { "id": "P_aBlxtP81Y", "title": "[리눅스 커널] 메모리 매니지먼트 소개" },
    { "id": "srtRRv_AAvw", "title": "[리눅스 커널] 메모리 매니지먼트 전체 구조" },
    { "id": "hRrJjNYbcbg", "title": "[리눅스 커널] 메모리 관리 디버깅" },
    { "id": "160mN9LmBY0", "title": "[리눅스 커널]  VFS(Virtual File system) 주요 객체 소개" },
    { "id": "dSG2T0PsMJI", "title": "[RISC-V] 임베디드 시스템: privilege mode usage 모델" },
    { "id": "2XZOe52pt1w", "title": "[공지] 9회 한국 리눅스 커널 개발자 모임 @9/5(목) - 2024년" },
    { "id": "0kaxTp-5gas", "title": "[RISC-V] 레지스터 소개 - TRACE32 디버깅" },
    { "id": "he4hVzJJga4", "title": "[RISC-V] 범용 레지스터 소개 - 커널 패닉 로그 분석" },
    { "id": "iGIWeRbMcPw", "title": "[RISC-V] RA 레지스터 사용 (Calling convention) - TRACE32 디버깅" },
    { "id": "bfZ-f0m4nqQ", "title": "[리눅스 커널] 시스템 콜 주요 개념 (11장 책 리뷰)" },
    { "id": "_vm-gMlClBw", "title": "[리눅스 커널] 시그널의 주요 개념 (12장 책 리뷰)" },
    { "id": "9EqLR64RToM", "title": "[리눅스 커널] 태스크 스케줄링: 컨텍스트 스위칭" },
    { "id": "WZHSyPIrebw", "title": "[리눅스 커널] 프로세스 디버깅 - top 명령어" },
    { "id": "VVWg7CbZwGM", "title": "[리눅스 커널] 시스템 콜을 잘 알아야 하는 이유" },
    { "id": "2D7Jw-fFG8E", "title": "[리눅스 커널] 시스템 콜의 전체 실행 흐름" },
    { "id": "g2hFzKqgm10", "title": "[리눅스 커널] 시스템 콜 디버깅 (TRACE32)" },
    { "id": "qXymZumigHM", "title": "[리눅스 커널] 시스템 콜 디버깅 - ftrace" },
    { "id": "ud_02pi8QK4", "title": "[리눅스 커널] 시그널의 처리 방식" },
    { "id": "8wGQuGFUTNw", "title": "[리눅스 커널] 시그널 디버깅 - ftrace" },
    { "id": "W_wFLlPrVhc", "title": "[리눅스 커널] 인터럽트 후반부 소개: 인터럽트 컨텍스트에서 유발된 커널 크래시 (케이스 스터디)" },
    { "id": "o59PLhxldjo", "title": "[리눅스 커널] 인터럽트 후반부 소개: Bottom half와 Top half란" },
    { "id": "An6dW6_3DOg", "title": "[리눅스 커널] 인터럽트 후반부: threaded IRQ - IRQ 스레드란" },
    { "id": "aJ8akCXLadU", "title": "[리눅스 커널] 워크큐(Workqueue)의 주요 내용 소개" },
    { "id": "Fjny7f6Au5s", "title": "[리눅스 커널] 워크큐(Workqueue)의 주요 개념" },
    { "id": "N-VgoKIIVzs", "title": "[리눅스 커널] 워크큐(Workqueue)를 사용해 인터럽트 후반부 설계하기" },
    { "id": "KhEOz4W7O1A", "title": "[리눅스 커널]  threaded IRQ 동작 분석을 위한 ftrace 설정 방법 소개" },
    { "id": "9QS7TQldpZE", "title": "[리눅스 커널] 커널 타이머(Kernel timer) 기법 소개" },
    { "id": "EcidHw2ADMA", "title": "[리눅스 커널] 타이머 관리: HZ와 jiffies의 개념" },
    { "id": "btclCk-Vzas", "title": "[리눅스 커널] 커널 동기화 기법을 알아야 하는 이유" },
    { "id": "VAUaeGsY-yA", "title": "[리눅스 커널] 커널 동기화: 레이스 컨디션 발생 이유" },
    { "id": "leSAYetcMBI", "title": "[리눅스 커널] ftrace 디버깅: threaded IRQ 동작 디버깅" },
    { "id": "du8dN8dF2QM", "title": "[리눅스 커널] Soft IRQ 소개" },
    { "id": "BgSW-mjh8v0", "title": "[리눅스 커널] ftrace 디버깅: Softirq 동작 관련 ftrace 이벤트 소개" },
    { "id": "tAtgLQFGusg", "title": "[리눅스 커널] 스핀락(Spinlock)의 특징" },
    { "id": "lhj8sbWjq4s", "title": "[리눅스 커널] 뮤텍스(Mutex) 소개" },
    { "id": "9LVYyTQxf1A", "title": "[리눅스 커널] 뮤텍스(Mutex)로 Critical Section 보호" },
    { "id": "yL7Saw2CwNo", "title": "[리눅스 커널] 프로세스 상태 관리" },
    { "id": "ADr32FLU6JI", "title": "[리눅스커널] 프로세스: Stack Corruption - TRACE32 디버깅(Part.2)" },
    { "id": "d1qDz5Tp1TE", "title": "[리눅스커널] 프로세스: Stack Corruption - TRACE32 디버깅(Part.3)" },
    { "id": "WZC-dHr4h0A", "title": "[리눅스커널] 프로세스 생성: kernel_clone() 디버깅 - Part.1" },
    { "id": "9MVU2qs9rK0", "title": "[리눅스커널] 프로세스 생성: kernel_clone() 디버깅 - Part.2" },
    { "id": "eFx9gtci1WM", "title": "[리눅스커널] 프로세스 생성: kernel_clone() 디버깅 - Part.3" },
    { "id": "RiUXx8gHM6M", "title": "[리눅스 커널] 인터럽트 - 커널 공간의 preemption 동작 디버깅(TRACE32)" },
    { "id": "SFEW7_GMSWk", "title": "[리눅스 커널] Multicore 시스템- 프로세스 자료 구조: thread_info.cpu" },
    { "id": "MirfPVlsUcs", "title": "[리눅스 커널] 인터럽트(Interrupt)를 잘 알아야 하는 이유- Part.1" },
    { "id": "AHYBUs23myI", "title": "[리눅스 커널] 디버깅으로 인터럽트의 기본 속성 정보 파악하기" },
    { "id": "pYxDnip9XMY", "title": "[리눅스 커널] 인터럽트 디스크립터(struct irq_desc) 디버깅하기-Crash utility" },
    { "id": "FSQ3w_DqnfQ", "title": "[리눅스 커널] 인터럽트 핸들러에 전달된 매개 인자 디버깅하기-TRACE32" },
    { "id": "IrcV1GsPyUw", "title": "[리눅스 커널] 인터럽트의 동작을 트레이싱하는 ftrace 트레이스 포인트 소개" },
    { "id": "2wCHMjfcd24", "title": "[리눅스 커널] ftrace 메시지로 인터럽트의 동작 분석하기(nop tracer)" },
    { "id": "rbFMhT9yGz8", "title": "[리눅스 커널] 인터럽트 소개: 하드웨어 관점으로 인터럽트란" },
    { "id": "uf640FtOpFY", "title": "[리눅스 커널] 인터럽트 소개: 소프트웨어 관점으로 인터럽트란" },
    { "id": "bW_-bFwR4pI", "title": "[리눅스 커널] 인터럽트 후반부 소개: 인터럽트 처리 흐름과 후반부 기법 소개" },
    { "id": "Kzd0qUG22Pw", "title": "[리눅스 커널] 인터럽트 후반부 소개: 인터럽트 후반부 기법을 적용해야 하는 이유" },
    { "id": "8KQG2EXCTCQ", "title": "[리눅스 커널] 인터럽트 후반부 소개: 인터럽트 컨텍스트에서 많은 일을 하면 어떻게 될까?" },
    { "id": "LsSCbsY37-g", "title": "[Arm 프로세서] 배리어 소개" },
    { "id": "2NsPajzpbPU", "title": "[Arm 프로세서] ISB 배리어" },
    { "id": "mMLaLWQtlMo", "title": "[Arm 프로세서] DMB 배리어" },
    { "id": "rsydQHQovKs", "title": "[Arm 프로세서] DSB 배리어" },
    { "id": "TcTzTr_lw9E", "title": "[리눅스 커널] 리눅스 시스템 3대 리소스" },
    { "id": "WyPHv4bkfxc", "title": "[Arm 프로세서] 어셈블리 명령어로 무엇을 할 수 있을까" },
    { "id": "vtOkUHV_tYw", "title": "[Arm 프로세서] 어셈블리 명령어가 어렵다고 느끼는 이유" },
    { "id": "OBBWmsXiY6A", "title": "인프런에 '리눅스 커널 Overview' 무료! 강의를 오픈했습니다." },
    { "id": "_2bj_uqiBF0", "title": "[리눅스 커널] 인터럽트 핸들링 (big picture)" },
    { "id": "BukMPWltMvk", "title": "[Arm 프로세서] 어셈블리 명령어 기본 포멧" },
    { "id": "ye5JCFrbOvs", "title": "[Arm 프로세서] 동작 모드를 잘 알아야 할까" },
    { "id": "m1CaEvtyi70", "title": "[리눅스커널] 덤프 디버깅 - TRACE32" },
    { "id": "Nr2BqrKC7eo", "title": "[리눅스 커널] Crash Utility 기본 명령어 사용 방법-2" },
    { "id": "Xf41osamWxY", "title": "[리눅스 커널] Crash Utility 기본 명령어 사용 방법-1" },
    { "id": "Dg26N8maAFo", "title": "[커널 디버깅] TRACE32- 주소를 구조체로 캐스팅하기" },
    { "id": "ADthBK4Xs6Q", "title": "[커널 디버깅] TRACE32- 전역 변수 확인하기" },
    { "id": "FACvy8uZfHU", "title": "[리눅스 커널] 주요 크래시 이슈 케이스 스터디 -  패닉" },
    { "id": "f3tD7ZI7AVQ", "title": "[커널 디버깅] Crash-utility: log, bt 명령어" },
    { "id": "XZfr6cSs4nY", "title": "[리눅스 커널] 프로세스: 인터럽트 컨텍스트와 preempt_count" },
    { "id": "8V7n7fiPXpM", "title": "[리눅스 커널] Crash-utility: ps 명령어로 프로세스 디버깅하기" },
    { "id": "cZtSgRLr4Cs", "title": "[Arm 프로세서] 인터럽트 콘트롤러 소개" },
    { "id": "0vLLSFzpbHo", "title": "[Arm 프로세서]  메모리 맵드 IO 기본 개념 소개" },
    { "id": "9fWOqQWRS6E", "title": "[Arm 프로세서] GIC 관점 인터럽트의 처리 흐름 Big picture" },
    { "id": "4bx14ogOLAo", "title": "[Arm프로세서] GIC: 프로그래머 모델" },
    { "id": "Ed7U0XLxFxQ", "title": "[Arm프로세서] GIC: 인터럽트 분류체계" },
    { "id": "IsAHeHlDqr8", "title": "[Arm프로세서] GIC: GIC 버전별 주요 기능" },
    { "id": "VhKPNfEIsrE", "title": "[Arm프로세서] GIC 인터럽트 분류체계" },
    { "id": "T3wx5QHFte0", "title": "[Arm프로세서] TrustZone: Armv7 -시큐어 월드로 실행 흐름이 변경되는 과정" },
    { "id": "n5xSvSsjPrI", "title": "[Arm프로세서] 메모리 맵드 IO 기본 개념 소개" },
    { "id": "HRcQ2YW6cZU", "title": "[Arm프로세서] 가상화-XEN 하이퍼바이저 익셉션 핸들러 코드 분석 Part 1" },
    { "id": "LSTdSewrEs4", "title": "[Arm프로세서] TrustZone: Armv8 - 트러스트존의 실행 흐름" },
    { "id": "XybfDzXtuDM", "title": "[RISC-V] Exception: 커널 크래시 처리 흐름" },
    { "id": "6eDGWnrV8Zs", "title": "[RISC-V] Privilege Mode와 Software Stack" },
    { "id": "9kOdb7w_PCU", "title": "[인프런-로드맵] 'Arm 아키텍처의 구조와 원리 저자 직강 강의'- 모두 업로드 완료!" },
    { "id": "HaCNsPL6LEQ", "title": "[Arm 프로세서] 캐시(Cache): 캐시 소개" },
    { "id": "Ls5O3GZT-Hs", "title": "[Arm 프로세서] CPU 캐시의 기본구조" },
    { "id": "BdY1ewl0T24", "title": "[Arm 프로세서] 메모리 모델은 왜 알아야 할까" },
    { "id": "2HtrNbALLzU", "title": "[Arm 프로세서] 멀티 캐시 구조" },
    { "id": "wv1gnXQTwGg", "title": "[Arm 프로세서] 메모리 매니지먼트 소개" },
    { "id": "rrUc5egB334", "title": "[Arm 프로세서] MMU란" },
    { "id": "mFimNth9NTQ", "title": "[Arm 프로세서] 3장 레지스터: 레지스터(Register)란" },
    { "id": "YL7K8O2g7f4", "title": "[Arm 프로세서] 3장 레지스터: 레지스터를 배우는 방법" },
    { "id": "-OwZXd7i2TQ", "title": "[Arm 프로세서] 3장 레지스터: Armv7 레지스터 Overview" },
    { "id": "iAFrHsdlXKU", "title": "[Arm 프로세서] 3장 레지스터: Armv8 레지스터 Overview" },
    { "id": "jWfJU2RWauk", "title": "[Arm 프로세서]  동작모드 소개" },
    { "id": "a_MWaVxUnp0", "title": "[Arm 프로세서] 가상 메모리 시스템: TRACE32 -   TCR EL1 레지스터 디버깅" },
    { "id": "7N6kL166CBc", "title": "[Arm 프로세서] 메모리 매니지먼트의 주요 기능" },
    { "id": "RtdwM_CEgxc", "title": "[Arm 프로세서] GIC 소개" },
    { "id": "l9vR74oPNoY", "title": "[Arm 프로세서] Armv8 익셉션 소개" },
    { "id": "nrsHL_WL2tM", "title": "[Arm 프로세서] Armv8 익셉션을 잘 알아야 하는 이유" },
    { "id": "mFnAv_YoCyc", "title": "[리눅스 커널의 구조와 원리] 1장. 리눅스 커널 버전에 대해" },
    { "id": "VksAZxOm0qI", "title": "[리눅스 커널의 구조와 원리] 1장. 리눅스 소개와 전망" },
    { "id": "6PXIm-o38WU", "title": "[리눅스 커널의 구조와 원리] 1장. [추가] 리눅스 BSP 개발 프로세스" },
    { "id": "PCC2f7KdFFQ", "title": "[리눅스 커널의 구조와 원리] 1장. 리눅스 커널 관련 개발 생태계" },
    { "id": "dBGLst_z0cA", "title": "[리눅스 커널의 구조와 원리] 2.2- 라즈베리 파이 설정" },
    { "id": "gLinojm_5OE", "title": "[Arm 프로세서] 하이퍼바이저와 Virtualization 소개" },
    { "id": "wn4SV5QjF3I", "title": "[Arm 프로세서] 하이퍼바이저는 왜 알아야 할까" },
    { "id": "9EAbY5zrGFA", "title": "[Arm 프로세서] 트러스트존(TrustZone) 소개" },
    { "id": "Iq6XKYLpM_E", "title": "[Arm 프로세서] AAPCS 소개" },
    { "id": "ib7etLIpYCw", "title": "[Arm 프로세서]  Armv7-AAPCS 관련 레지스터: SP LR" },
    { "id": "aJaUzgqvoxg", "title": "[Arm 프로세서] Armv8-AAPCS 관련 레지스터" },
    { "id": "-yKuKaJ0TeU", "title": "[Armv7 익셉션] Armv7 익셉션(Exception)의 종류" },
    { "id": "eGyEDdEP6dg", "title": "[Armv7 익셉션] Armv7-익셉션의 실행 흐름" },
    { "id": "Th6mbUN_Lwo", "title": "[Armv7 익셉션]: 메모리 어보트 타입 익셉션(Exception)의 실행 흐름" },
    { "id": "XnUfJLbu4hc", "title": "[리눅스 커널] crash utility:  크래시 덤프 분석 - 'log -m' 커널 로그 분석하기" },
    { "id": "HBJzJJ250bM", "title": "[Arm 프로세서] Armv8: 익셉션의 종류와 분류 체계" },
    { "id": "CD2Fe8seeoA", "title": "[8회 한국 리눅스 커널 개발자 모임] 1. 커널 리포트(v5.19~v6.4)" },
    { "id": "JIOnqDu6cvE", "title": "[ENG] Good material to learn Linux BSP: Crash dump Analysis" }    
  ]
}