{
  "channel": {
    "id": "uengine5309",
    "name": "uEngine",
    "profile": "https://yt3.googleusercontent.com/ytc/AIdro_lxbHESBvNwSRJVFGH_LNquQXSn5fspskrElEvi=s176-c-k-c0x00ffffff-no-rj",
    "banner": "https://yt3.googleusercontent.com/9FKk0zpfeOZLLb5PYO2Se-7F26WG9LE6mmQaQ2sQ0U3k9LFYqBgHnZ9bvLW--pz34_qbMBFO4uM=w1707-fcrop64=1,00005a57ffffa5a8-k-c0xffffffff-no-nd-rj"
  },
  "videos": [
    { "id": "B5s2z35-yMg", "title": "에이전트 지식의 자동 관리" },
    { "id": "IOhX6h9ox1Q", "title": "에이전트가 초안 생성" },
    { "id": "qYEpj1B3FmE", "title": "A2A 호출 & 서비스 노출" },
    { "id": "pNqZdzavOb4", "title": "조직 목표를 달성을 위한 자동화된 휴먼-에이전트 팀 프로세스 정의" },
    { "id": "aHMJW0llm5Q", "title": "바이브 코딩 웨비나 Part1 - 바이브 코딩의 이해와 최신 트렌드의 이해" },
    { "id": "E3aBlnCXg4U", "title": "바이브 코딩 웨비나 Part2 - 드림바이브 소개" },
    { "id": "TtrSVkwgDdI", "title": "바이브 코딩 웨비나 Part 3 - 드림바이브를 활용한 분석/설계" },
    { "id": "KFjiHCRhxpo", "title": "uEngine6 Demo - 프로세스 애니메이션" },
    { "id": "rvUB2aBK4HU", "title": "uEngine6 Demo - 타이머 이벤트" },
    { "id": "DI4vLwijsMs", "title": "[Process-GPT] AI를 이용한 비즈니스 프로세스 / 폼 자동 생성" },
    { "id": "4PX4CWrdGCg", "title": "[Full] AI/CNA Quick Understanding 2월 컨퍼런스" },
    { "id": "223-m5xOpkM", "title": "딥시크 R1을 활용한 마이크로서비스 분석설계 자동화부터 소스코드 생성, 구현까지!" },
    { "id": "rP6gqtLCceg", "title": "전자정부 표준 프레임워크 기반 CNA 설계 - DDD와 이벤트스토밍" },
    { "id": "xZlVQQ58wDg", "title": "[MSA Easy] AI 기반 마이크로서비스 설계 및 운용" },
    { "id": "Xoq8smok8RI", "title": "[Full] AI 기반 개발의 새로운 접근 : MSA Easy" },
    { "id": "fovVLZ1FZjw", "title": "[AI 기반 개발의 새로운 접근 : MSA Easy] 1. 생성형 AI 기반 코딩의 발전" },
    { "id": "d_Z3-9ELYiQ", "title": "[AI 기반 개발의 새로운 접근 : MSA Easy] 2. DDD와 바운디드 컨텍스트" },
    { "id": "VAJo_emHA6w", "title": "[AI 기반 개발의 새로운 접근 : MSA Easy] 3. 이벤트스토밍과 어그리거트 도출" },
    { "id": "M6vK9WtyLwQ", "title": "[AI 기반 개발의 새로운 접근 : MSA Easy] 5. AI 기반 설계 및 구현 데모" },
    { "id": "Spq7_fqCq3o", "title": "[AI 기반 개발의 새로운 접근 : MSA Easy] 6. PLSQL 2 JAVA 데모 설명" },
    { "id": "3BXHnb_tysI", "title": "[AI 기반 개발의 새로운 접근 : MSA Easy] 4. AI 기반 설계 및 구현 데모 설명" },
    { "id": "-cMP4bCkiFc", "title": "[AI 기반 개발의 새로운 접근 : MSA Easy] 7. PLSQL 2 JAVA 데모 시연" },
    { "id": "QvIl63st8y0", "title": "[AI 기반 개발의 새로운 접근 : MSA Easy] 8. 교육과정 및 컨설팅 안내 + 마무리" },
    { "id": "ZmytoLlvpMs", "title": "uEngine6 BPM 데모 (Full)" },
    { "id": "PNNX4_mNeH0", "title": "AI Agent Form Completion" },
    { "id": "pUiFodjImcc", "title": "ProcessGPT 1차 프로모션 영상" },
    { "id": "2wS2YbzH43Q", "title": "Process-GPT e2e Demo" },
    { "id": "U_21lPKoGOI", "title": "Process-GPT e2e 데모 수정본" },
    { "id": "_zdsOmyc55Y", "title": "[Full] 전자정부 표준 프레임워크 기반 클라우드 네이티브 애플리케이션 설계 Part 3 : 쿠버네티스 Patterns" },
    { "id": "G5fNv7HFS7I", "title": "[전자정부 표준 프레임워크 기반 CNA 설계 - 쿠버네티스 Patterns] 11. Cloud Native SRE 활용" },
    { "id": "a8rFJxSn6Go", "title": "[전자정부 표준 프레임워크 기반 CNA 설계 - 쿠버네티스 Patterns] 10. 서비스 메시의 활용 (옵저버빌리티&로그리게이션)" },
    { "id": "jhlKcHUx3NA", "title": "[전자정부 표준 프레임워크 기반 CNA 설계 - 쿠버네티스 Patterns] 9. AIOps 도구를 활용한 컨테이너 오케스트레이션" },
    { "id": "KQGcJBMf5EU", "title": "[전자정부 표준 프레임워크 기반 CNA 설계 - 쿠버네티스 Patterns] 8. ArgoCD를 활용한 파이프라인 구성" },
    { "id": "QRRXWjOkboQ", "title": "[전자정부 표준 프레임워크 기반 CNA 설계 - 쿠버네티스 Patterns] 7. Github Action 활용 파이프라인 배포" },
    { "id": "N7bfsPoWr-A", "title": "[전자정부 표준 프레임워크 기반 CNA 설계 - 쿠버네티스 Patterns] 6. MSA Easy를 활용한 쿠버네티스 배포 모델링" },
    { "id": "xujbvwDna3Y", "title": "[전자정부 표준 프레임워크 기반 CNA 설계 - 쿠버네티스 Patterns] 5. 마이크로서비스 배포 자동화 도구와 MSA Easy" },
    { "id": "Qq3OlxHFAaE", "title": "[전자정부 표준 프레임워크 기반 CNA 설계 - 쿠버네티스 Patterns] 4. 서비스 도커라이징&배포 모델 설계" },
    { "id": "R1uWyYCLYuE", "title": "[전자정부 표준 프레임워크 기반 CNA 설계 - 쿠버네티스 Patterns] 3. MSA의 배포와 운영" },
    { "id": "hIP7hKma7Jw", "title": "[전자정부 표준 프레임워크 기반 CNA 설계 - 쿠버네티스 Patterns] 2. 요구사항 도출 및 도메인 식별" },
    { "id": "3IYyXODIzns", "title": "[전자정부 표준 프레임워크 기반 CNA 설계 - 쿠버네티스 Patterns] 1. Intro" },
    { "id": "idgCzlfANW0", "title": "Stored Procedure to Java - MSA Easy 레거시 모더나이저 데모" },
    { "id": "bxkB-pkOpTQ", "title": "uEngine6 Demo - 메시지 기반 시스템 연동" },
    { "id": "E-tjj20-xxI", "title": "uEngine6 Demo - 이벤트 기반 시스템 연동" },
    { "id": "nhQCDfYa6Gk", "title": "uEngine6 Demo - 서브프로세스" },
    { "id": "J-xUC4WJ2C8", "title": "uEngine6 Demo - 조건 설정 분기" },
    { "id": "1tCKnzck2-c", "title": "uEngine6 Demo - 폼 매핑" },
    { "id": "fyoGZStLlVo", "title": "uEngine6 Demo - BPM 프로세스 기본" },
    { "id": "ZWWfvRw2h1A", "title": "이벤트스토밍으로 15분 안에 음식배달앱을?? | MSA Easy" },
    { "id": "UyiG2qMk26E", "title": "[Full] 전자정부 표준 프레임워크 기반의 클라우드 네이티브 애플리케이션 설계 Part 1. DDD와 이벤트스토밍" },
    { "id": "D6mJhlZe4IM", "title": "10. 마무리 + 무상 컨설팅 안내" },
    { "id": "WzFML246TuY", "title": "11. Q&A + Outro" },
    { "id": "CPY2XeKkN2s", "title": "8. 공공 사례 이벤트스토밍 실습 데모" },
    { "id": "OYUfxP5lhFY", "title": "9. 코드 자동생성 및 프론트엔드 운용" },
    { "id": "1WlilTdNwts", "title": "7. 공공 서비스의 도메인 분해 전략" },
    { "id": "fHTvmqP9_ng", "title": "6. 어그리거트Aggregate 도출 + 이벤트스토밍" },
    { "id": "FjIEhHlL8L0", "title": "5. 도메인을 어떻게 쪼갤 것인가?" },
    { "id": "1Y3KPP35f4g", "title": "4. Req/Res와 Pub/Sub" },
    { "id": "GBW9ZDReef8", "title": "3. 바운디드 컨텍스트 구분하기" },
    { "id": "kqABgc_G19M", "title": "2. 클라우드 네이티브 애플리케이션과 DDD" },
    { "id": "KrHRkCqFsl8", "title": "1. Intro" },
    { "id": "QlBbDmRCzoI", "title": "[전자정부 표준 프레임워크 기반 CNA 설계 - MSA의 구현] 8. MSA 구현 패턴(4) - 데이터 프로젝션 패턴" },
    { "id": "6SvdPBb1eZQ", "title": "[전자정부 표준 프레임워크 기반 CNA 설계 - MSA의 구현] 6. MSA 구현 패턴(2) - EDA & Kafka 패턴" },
    { "id": "6rBJv7ifdpI", "title": "[전자정부 표준 프레임워크 기반 CNA 설계 - MSA의 구현] 9. MSA 구현 패턴(5) - MSA 테스트 패턴" },
    { "id": "3zZoUm3bZgs", "title": "[전자정부 표준 프레임워크 기반 CNA 설계 - MSA의 구현] 12. 다음 웨비나 예고 + Q&A" },
    { "id": "ic6774l2kQo", "title": "[전자정부 표준 프레임워크 기반 CNA 설계 - MSA의 구현] 11. 컨테이너 패키징" },
    { "id": "60D0857VHvA", "title": "[전자정부 표준 프레임워크 기반 CNA 설계 - MSA의 구현] 10. MSA 구현 패턴(6) - 보안처리 패턴" },
    { "id": "0TsOt7IpWqY", "title": "[전자정부 표준 프레임워크 기반 CNA 설계 - MSA의 구현] 7. MSA 구현 패턴(3) - 서킷 브레이커 패턴" },
    { "id": "bnDvAgfe6Mg", "title": "[전자정부 표준 프레임워크 기반 CNA 설계 - MSA의 구현] 5. MSA 구현 패턴(1) - Saga 패턴" },
    { "id": "RocjPY036IQ", "title": "[전자정부 표준 프레임워크 기반 CNA 설계 - MSA의 구현] 4. MSA 구현 패턴과 전자정부 프레임워크" },
    { "id": "FHbOa9TVflg", "title": "[전자정부 표준 프레임워크 기반 CNA 설계 - MSA의 구현] 2. 요구사항 도출 및 설계" },
    { "id": "a26OPJEwm9A", "title": "[전자정부 표준 프레임워크 기반 CNA 설계 - MSA의 구현] 3. 산재신청 이벤트스토밍 모델" },
    { "id": "GJkXEzupb-I", "title": "[전자정부 표준 프레임워크 기반 CNA 설계 - MSA의 구현] 1. Intro + 대상 도메인 소개" },
    { "id": "IfzLrg6-fso", "title": "[Full] 전자정부 표준 프레임워크 기반 클라우드 네이티브 애플리케이션 설계 Part 2 : MSA의 구현" },
    { "id": "DijPwIpPnbU", "title": "process gpt demo e2e" },
    { "id": "FavFF5NIWxU", "title": "비즈니스가 복잡해? 이벤트로 풀어보자(EventStorming) | MSA Easy" },
    { "id": "oCKu8ZsGkjw", "title": "CloudIQ 사용 가이드 1" },
    { "id": "FeQEKhKXrmQ", "title": "영상 하나로 이벤트스토밍(Eventstorming) 마스터하기 | MSA Easy" },
    { "id": "K8jP9Zu-VAI", "title": "[Full] 생성형 AI를 이용한 SW아키텍처링과 마이크로서비스 구현" },
    { "id": "UA7kYEk4sAk", "title": "process-gpt 채팅 기능 데모" },
    { "id": "mRTGKSd8Jhg", "title": "process-gpt 인스턴스 실행 데모" },
    { "id": "MtvHmdES6eQ", "title": "[cursor ide] vision 인식을 통한 생성" },
    { "id": "Plo8Jffc91Y", "title": "[cursor ide] mention" },
    { "id": "PTJGMI64hcE", "title": "[ai-coding] GPT-Engineer 이용 생성" },
    { "id": "qUb1BWnyfkw", "title": "[LLM스쿨] CursorIDE를 활용한 분석-구현-리팩토링(디시전 테이블 활용)" }
  ],
  "playlists": [
    {
      "title": "2024년 5월 웨비나 - 전자정부 표준 프레임워크 기반 클라우드 네이티브 애플리케이션 설계 Part 2 : MSA의 구현",
      "videos": [
        { "id": "GJkXEzupb-I", "title": "[전자정부 표준 프레임워크 기반 CNA 설계 - MSA의 구현] 1. Intro + 대상 도메인 소개" },
        { "id": "FHbOa9TVflg", "title": "[전자정부 표준 프레임워크 기반 CNA 설계 - MSA의 구현] 2. 요구사항 도출 및 설계" },
        { "id": "a26OPJEwm9A", "title": "[전자정부 표준 프레임워크 기반 CNA 설계 - MSA의 구현] 3. 산재신청 이벤트스토밍 모델" },
        { "id": "RocjPY036IQ", "title": "[전자정부 표준 프레임워크 기반 CNA 설계 - MSA의 구현] 4. MSA 구현 패턴과 전자정부 프레임워크" },
        { "id": "bnDvAgfe6Mg", "title": "[전자정부 표준 프레임워크 기반 CNA 설계 - MSA의 구현] 5. MSA 구현 패턴(1) - Saga 패턴" },
        { "id": "6SvdPBb1eZQ", "title": "[전자정부 표준 프레임워크 기반 CNA 설계 - MSA의 구현] 6. MSA 구현 패턴(2) - EDA & Kafka 패턴" },
        { "id": "0TsOt7IpWqY", "title": "[전자정부 표준 프레임워크 기반 CNA 설계 - MSA의 구현] 7. MSA 구현 패턴(3) - 서킷 브레이커 패턴" },
        { "id": "QlBbDmRCzoI", "title": "[전자정부 표준 프레임워크 기반 CNA 설계 - MSA의 구현] 8. MSA 구현 패턴(4) - 데이터 프로젝션 패턴" },
        { "id": "6rBJv7ifdpI", "title": "[전자정부 표준 프레임워크 기반 CNA 설계 - MSA의 구현] 9. MSA 구현 패턴(5) - MSA 테스트 패턴" },
        { "id": "60D0857VHvA", "title": "[전자정부 표준 프레임워크 기반 CNA 설계 - MSA의 구현] 10. MSA 구현 패턴(6) - 보안처리 패턴" },
        { "id": "ic6774l2kQo", "title": "[전자정부 표준 프레임워크 기반 CNA 설계 - MSA의 구현] 11. 컨테이너 패키징" },
        { "id": "3zZoUm3bZgs", "title": "[전자정부 표준 프레임워크 기반 CNA 설계 - MSA의 구현] 12. 다음 웨비나 예고 + Q&A" },
        { "id": "IfzLrg6-fso", "title": "[Full] 전자정부 표준 프레임워크 기반 클라우드 네이티브 애플리케이션 설계 Part 2 : MSA의 구현" }
      ]
    }, {
      "title": "2024년 4월 웨비나 - 전자정부 표준 프레임워크 기반의 클라우드 네이티브 애플리케이션 설계 Part 1. DDD와 이벤트스토밍",
      "videos": [
        { "id": "KrHRkCqFsl8", "title": "[전자정부 표준 프레임워크 기반 CNA 설계 - DDD와 이벤트스토밍] 1. Intro" },
        { "id": "kqABgc_G19M", "title": "[전자정부 표준 프레임워크 기반 CNA 설계 - DDD와 이벤트스토밍] 2. CNA과 DDD" },
        { "id": "GBW9ZDReef8", "title": "[전자정부 표준 프레임워크 기반 CNA 설계 - DDD와 이벤트스토밍] 3. 바운디드 컨텍스트 구분" },
        { "id": "1Y3KPP35f4g", "title": "[전자정부 표준 프레임워크 기반 CNA 설계 - DDD와 이벤트스토밍] 4. Req/Res와 Pub/Sub" },
        { "id": "FjIEhHlL8L0", "title": "[전자정부 표준 프레임워크 기반 CNA 설계 - DDD와 이벤트스토밍] 5. 도메인을 어떻게 쪼갤 것인가?" },
        { "id": "fHTvmqP9_ng", "title": "[전자정부 표준 프레임워크 기반 CNA 설계 - DDD와 이벤트스토밍] 6. Aggregate 도출 + 이벤트스토밍" },
        { "id": "1WlilTdNwts", "title": "[전자정부 표준 프레임워크 기반 CNA 설계 - DDD와 이벤트스토밍] 7. 공공 서비스의 도메인 분해 전략" },
        { "id": "CPY2XeKkN2s", "title": "[전자정부 표준 프레임워크 기반 CNA 설계 - DDD와 이벤트스토밍] 8. 공공 사례 이벤트스토밍 실습" },
        { "id": "OYUfxP5lhFY", "title": "[전자정부 표준 프레임워크 기반 CNA 설계 - DDD와 이벤트스토밍] 9. 소스코드 및 프론트엔드 자동생성" },
        { "id": "D6mJhlZe4IM", "title": "[전자정부 표준 프레임워크 기반 CNA 설계 - DDD와 이벤트스토밍] 10. 마무리 + 무상 컨설팅 안내" },
        { "id": "WzFML246TuY", "title": "[전자정부 표준 프레임워크 기반 CNA 설계 - DDD와 이벤트스토밍] 11. Q&A + Outro" },
        { "id": "UyiG2qMk26E", "title": "[Full] 전자정부 표준 프레임워크 기반의 클라우드 네이티브 애플리케이션 설계 Part 1. DDD와 이벤트스토밍" }
      ]
    }
  ]
}