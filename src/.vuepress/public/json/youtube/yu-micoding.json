{
  "channel": {
    "id": "micoding",
    "name": "몰입코딩 아카이브",
    "profile": "https://yt3.googleusercontent.com/qMW9oBG7Z07wlJzIgLJ8f3pczKdrJf00f1s9MSMyGyEgHXYdHAoe_RgdPQPmZ1SpzCHogYLS=s176-c-k-c0x00ffffff-no-rj",
    "banner": "https://yt3.googleusercontent.com/vQbZsH3LkG4eg5JtH7UITwySa60UoQ_B3_0W-7R9uKrmBRhpiY19lzAj2pgzsUHNUUp3FYrfew=w1707-fcrop64=1,00005a57ffffa5a8-k-c0xffffffff-no-nd-rj"
  },
  "videos": [
    { "id": "fapnF9St1iA", "title": "25 01 27, p 14012, 5강, 프, 서버 컴포넌트에서 fetch를 사용하는 페이지 실행전에 무조건 middleware 에서 토큰체크 필수" },
    { "id": "46lFLP_e6Qc", "title": "25 01 27, p 14012, 6강, 프, 테일윈드의 `container mx-auto` 를 사용해서 글 리스트 페이지가 너무 넓어지지 않도록" },
    { "id": "UoVNI4RV73Q", "title": "25 01 27, p 14012, 7강, 프, 페이지네이션 컴포넌트 테스트" },
    { "id": "KMPxOeknTlA", "title": "25 01 27, p 14012, 8강, 프, 페이지네이션 컴포넌트를 Next.js 에 맞게 변경(a 대신 Link 사용)" },
    { "id": "yn0Jp2sHJ_s", "title": "25 01 27, p 14012, 9강, 프, 페이지네이션에서 일단 반복문으로 모든 페이지 버튼 출력" },
    { "id": "GMY65z4oj24", "title": "25 01 27, p 14012, 10강, 프, 현재 페이지 좌/우로 1개의 페이지버튼만 노출되도록" },
    { "id": "Q6IcjXMsAyc", "title": "25 01 27, p 14012, 11강, 프, ellipsis 버튼이 나와야 할 때만 나오게 하고, ellipsis 버튼에도 링크 걸기" },
    { "id": "XiThAVocNrI", "title": "25 01 27, p 14012, 12강, 프, PaginationType1 컴포넌트 구현 후 적용" },
    { "id": "BeY5SoL9aHw", "title": "25 01 27, p 14012, 13강, 프, PaginationType1 컴포넌트를 비지니스 컴포넌트로 승격" },
    { "id": "7IrbGjqZQ-A", "title": "25 01 27, p 14012, 14강, 프, PaginationType1 컴포넌트를 2개 렌더링해서 반응형 작업" },
    { "id": "dCshIR1aLjg", "title": "25 01 27, p 14012, 15강, 프, PaginationType1Responsive 컴포넌트를 구현" },
    { "id": "Kq-y-WlYino", "title": "25 01 27, p 14012, 16강, 프, 검색상자에, Input, Select, Button 적용" },
    { "id": "LuYSxVPMaNQ", "title": "25 01 27, p 14012, 17강, 프, 검색상자에 Card, 반응형 작업" },
    { "id": "odOu8eEwv9s", "title": "25 01 27, p 14012, 18강, 프, 게시물 목록 Card, Sperator, Badge, grid 반응형 적용" },
    { "id": "Xr1rCr2Pbg8", "title": "25 01 27, p 14012, 19강, 프, 로그인 폼 복사해서 게시물 작성 폼 구현" },
    { "id": "VWDXPwFYMuM", "title": "25 01 27, p 14012, 20강, 프, 글 작성의 내용입력상자에 Textarea 컴포넌트 적용" },
    { "id": "mEtDSVP2_uE", "title": "25 01 27, p 14012, 21강, 프, Checkbox 로 공개상태와 검색허용상태 입력" },
    { "id": "dae5JAvAaLc", "title": "25 01 27, p 14012, 22강, 백, db 재생성해도 카카오 계정정보 유지되도록" },
    { "id": "O1ycTRRXNC4", "title": "25 01 27, p 14012, 23강, 백, MemberDto에 authorProfimeImgUrl 추가" },
    { "id": "TT_J6NpS1Wo", "title": "25 01 27, p 14012, 24강, 프, 페이지 단위를 30, 60, 90으로 변경" },
    { "id": "ysecbtP8l7A", "title": "25 01 27, p 14012, 25강, 프, 공개글에서 작성자 프로필 이미지 노출" },
    { "id": "d7T46x5yyGE", "title": "25 01 27, p 14012, 27강, 프, 검색박스를 다이얼로그로 구현" },
    { "id": "RgZkwb757sQ", "title": "25 01 27, p 14012, 29강, 프, 글 삭제 모달을 패러럴 라우팅으로 구현" },
    { "id": "CIE2j5LD158", "title": "25 01 27, p 14012, 28강, 프, 글 상세보기 페이지 구현" },
    { "id": "USxpg3ErApo", "title": "25 01 27, p 14012, 30강, 프, 페이지네이션에서 `...` 으로 생략된 페이지 버튼이 1개 뿐이라면 `...` 대신 해당 페이지 버튼 노출" },
    { "id": "jMk3dAjbe4U", "title": "25 01 27, p 14012, 31강, 프, 내글 구현" },
    { "id": "ZxDqAshAwbQ", "title": "25 01 27, p 14012, 32강, 프, 내글과 공개글 페이지의 공통 로직을 PostList 비지니스 컴포넌트로 통합" },
    { "id": "4L7SWj4xqd8", "title": "25 01 27, p 14012, 33강, 프, PostList 비지니스 컴포넌트에서 글 id 노출" },
    { "id": "SpBJqAMXu4E", "title": "25 01 27, p 14012, 34강, 프, 글 수정 페이지 구현" },
    { "id": "NwpikgUmZ2g", "title": "25 01 27, p 14012, 35강, 프, 내 정보 페이지 꾸미기" },
    { "id": "lrcniOdKvXc", "title": "25 01 27, p 14012, 37강, 백, 글 검색조건에 전체(all), 작성자(author)를 추가" },
    { "id": "lgrgjuhen6E", "title": "25 01 27, p 14012, 36강, 백, 글 다건조회 기능을 QueryDSL로 구현" },
    { "id": "oHy9lWRRI90", "title": "25 01 27, p 14012, 38강, 프, 글 검색조건에 전체(all), 작성자(author)를 추가" },
    { "id": "yQERhRKj0_E", "title": "25 01 31, p 14012, 39강, 프, 글 description(META) 정보 구성시에 숫자 포함, 160자로 제한" },
    { "id": "hDmlTW6jsT8", "title": "25 01 31, p 14012, 40강, 글 상세페이지에서 글이 없는 경우와, 글 읽기에 대한 권한부족의 경우를 구분해서 처리" },
    { "id": "2lMUGEf5VZQ", "title": "25 01 31, p 14012, 41강, 프, 레이아웃에서 관리자 페이지인지 아닌지 구분하여 상황에 맞는 메뉴 표시" },
    { "id": "RkMFxQ-O4xw", "title": "25 01 31, p 14012, 42강, 프, 회원 목록 페이지 구현" },
    { "id": "-5_qfU4h_3Q", "title": "25 01 31, p 14012, 43강, 백, 회원 다건조회를 QueryDSL로 다시 구현, 검색조건에 all(전체) 추가" },
    { "id": "Pv2i1B_A4r0", "title": "25 01 31, p 14012, 44강, 프, 회원 다건조회 검색조건에 all(전체) 추가, 내글 다건조회에 all(전체) 추가" },
    { "id": "yq4TdVZNXJ0", "title": "25 01 31, p 14016, 12_40_10" },
    { "id": "R8KpZg8viuM", "title": "25 01 31, p 14016, 12_42_46" },
    { "id": "fTH9zVUHjwQ", "title": "25 01 31, p 14016, 12_48_24" },
    { "id": "WV2en0MvO80", "title": "25 01 31, p 14016, 16_22_20" },
    { "id": "wj6Ge6krvfs", "title": "25 01 31, p 14016, 17_03_33" },
    { "id": "WCbHaRcYHi0", "title": "25 02 03, p 14012, 6강, 백, PostGenFile 엔티티 클래스 추가, PostComment 엔티티 클래스와 크게 다르지 않다." },
    { "id": "Wxendo3OGQg", "title": "25 02 03, p 14012, 7강, 백, PostGenFile 에 메타정보(fileSize, fileExt 등) 추가" },
    { "id": "0SiU9RpYWG0", "title": "25 02 03, p 14012, 8강, 백, downloadByHttp 로 생성되는 파일이 유니크한 이름을 가질 수 있도록" },
    { "id": "3FhtIGR-xrM", "title": "25 02 03, p 14012, 9강, 백, 다운로드 받은 임시파일을 글 관련 GenFile 폴더로 이동" },
    { "id": "H6UgDkI3di0", "title": "25 02 03, p 14012, 10강, 백, GenFile 폴더를 모드별(dev/test)로 구분, 테스트 시잔하기 전에 폴더 삭제" },
    { "id": "hs085pGpDYg", "title": "25 02 03, p 14012, 11강, 백, GenFile 폴더에서 파일이 typeCode/yyyy_mm_dd 폴더 구조로 저장되도록 변경" },
    { "id": "Lh6c_iq9ivc", "title": "25 02 03, p 14012, 12강, 백, fileTypeCode, fileType2Code 칼럼을 추가" },
    { "id": "SL8rmsJ98P0", "title": "25 02 03, p 14012, 13강, 백, 이미지 파일의 경우 width, height 메타데이터를 추출하여 저장" },
    { "id": "PQ8klDb31kw", "title": "25 02 03, p 14012, 14강, 백, fileNo 추가, postId 와 typeCode 와 fileNo 의 조합은 유니크 해야 한다." },
    { "id": "MV2gCkFN6ts", "title": "25 02 03, p 14012, 15강, 백, genFile 폴더에 저장된 파일들을 /gen/** URL로 접근할 수 있도록" },
    { "id": "yFz7wa7g0AI", "title": "25 02 03, p 14012, 16강, 백, 첨부파일 다운로드 URL 구현" },
    { "id": "OgSXH6pgM4Q", "title": "25 02 04, p 14012, 17강, 백, 샘플 PostGenFile 로 썸네일 추가, fileNo 2번 첨부파일은 삭제" },
    { "id": "ktLQBMLVk5c", "title": "25 02 04, p 14012, 18강, 백, PostGenFile 에 equals 와 hashCode 오버라이드 하여 removeIf 대신 다시 remove 사용가능하도록 작업" },
    { "id": "ds6U7k7fsMQ", "title": "25 02 04, p 14012, 19강, 백, PostGenFile 엔티티에서 공통 필드를 뽑아서 GenFile 엔티티로 이동" },
    { "id": "HiDhvsCG0Rk", "title": "25 02 04, p 14012, 20강, 백, modifyGenFile" },
    { "id": "AwVm9LXF7kU", "title": "25 02 04, p 14012, 21강, 백, fileNo 를 직접 지정하는 방식의 putGenFile 메서드 구현" },
    { "id": "ZXeZd7LGdyM", "title": "25 02 04, p 14012, 22강, 백, 첨부파일 업로드 API 구현" },
    { "id": "B47RCa89brI", "title": "25 02 04, p 14012, 23강, 프, 글 수정시 첨부파일 업로드 API 사용" },
    { "id": "t8ONsiUB8uQ", "title": "25 02 04, p 14012, 24강, 백, 특정 글의 GenFile 목록 조회 API 구현" },
    { "id": "qgzCwLVFR6A", "title": "25 02 04, p 14012, 25강, 프, 글 상세페이지에서 첨부파일 목록" },
    { "id": "zMd9rMX7jC8", "title": "25 02 04, p 14012, 26강, 백, PostGenFile 에 publicUrl, downloadUrl 추가" },
    { "id": "A2UYQ-tAVmg", "title": "25 02 04, p 14012, 27강, 프, publicUrl, downloadUrl 사용" },
    { "id": "S6Xr2gmAhkE", "title": "25 02 04, p 14012, 28강, 백, 임시글 생성기능 구현" },
    { "id": "5Xs4nZMqhsU", "title": "25 02 04, p 14012, 29강, 프, WideHeaderContent의 작성버튼을 누르면 임시글이 생성 되도록" },
    { "id": "TQOSwT20xXA", "title": "25 02 04, p 14012, 30강, 프, PostWriteButton 비지니스 컴포넌트 만들어서 기존의 글 작성 버튼을 교체" },
    { "id": "KYxAOSfneE0", "title": "25 02 04, p 14012, 31강, 백/프, typeCode 를 String 대신 Enum 으로 정의" },
    { "id": "ZFpxc3qWdKQ", "title": "25 02 04, p 14012, 32강, 백, 파일 다운로드 테스트케이스 추가" },
    { "id": "z2ddyoDnPbw", "title": "25 02 04, p 14012, 33강, 백, 파일 업로드 관련해서 매번 필요한 파일을 다운로드 하지 않고 샘플 파일로 대체" },
    { "id": "ZRMjTo3jCWQ", "title": "25 02 05, p 14012, 34강, 프, 첨부파일 용량표시" },
    { "id": "tIxR_PiSeI4", "title": "25 02 05, p 14012, 35강, 프, 파일 미리보기 모달 레이아웃" },
    { "id": "gLeH5qmnj1Q", "title": "25 02 05, p 14012, 36강, 프, 비지니스 유틸에 공통함수 정의" },
    { "id": "rlE18J_ecQg", "title": "25 02 05, p 14012, 37강, 프, 파일 미리보기 모달 열때 fileId 넘김" },
    { "id": "RoHDIXjGfJY", "title": "25 02 05, p 14012, 38강, 프, 파일 미리보기 모달 열때 genFileId 넘김" },
    { "id": "FQsat4XGwGs", "title": "25 02 05, p 14012, 39강, 프, 파일 미리보기 모달 열때 Page.tsx 에서 파일 정보 fetch" },
    { "id": "oyDirQzdG6Q", "title": "25 02 05, p 14012, 40강, 프, 파일이 이미지일 때 보여주는 작업" },
    { "id": "bHsU3epsiy0", "title": "25 02 05, p 14012, 41강, 프, 미리보기 모달에서도 다운로드 가능하도록" },
    { "id": "y-J9JbxXAGc", "title": "25 02 05, p 14012, 42강, 백, 10번글에 오디오 파일과 비디오 파일을 첨부" },
    { "id": "zGOdw1tBB-s", "title": "25 02 05, p 14012, 43강, 프, 파일 다운로드 버튼의 텍스트가 화면을 넘어가지 않도록 br 엘리먼트 추가" },
    { "id": "fjSTHdaLrpM", "title": "25 02 05, p 14012, 44강, 프, 파일이 오디오와 비디오일 때도 미리보기" },
    { "id": "pxoeESAozno", "title": "25 02 05, p 14012, 45강, 백, 올바르지 않은 sample1.mp4 파일을 올바른 형식의 mp4 파일로 교체" },
    { "id": "Q80wQw_g-Cs", "title": "25 02 05, p 14012, 46강, 프, 프론트 수준에서 업로드할 때 개발자가 지정한 확장자의 파일만 가능하도록 제한" },
    { "id": "tjfogQ4e-2E", "title": "25 02 05, p 14012, 47강, 백, 임시글이 최초공개될 때를 기준으로 등록날짜와 수정날짜를 갱신" },
    { "id": "oetn0DMZ5Tw", "title": "25 02 05, p 14012, 48강, 백, 다중 파일 업로드로 변경, 업로드 용량 제한과 관련 예외처리" },
    { "id": "m_6In_R6jNA", "title": "25 02 05, p 14012, 49강, 프, 다중 파일 업로드가 가능하도록 변경, 다중 파일 드래그 앤 드롭도 가능" },
    { "id": "pkHw_HJi86w", "title": "25 02 06, p 14012, 50강, 백, SizeLimitExceededException 예외는 발생하지 않아서 해당 예외처리를 제거" },
    { "id": "NKuv7Uy8IGU", "title": "25 02 06, p 14012, 51강, 프, 토스트를 동시에 최대 4개까지 띄울 수 있도록 변경" },
    { "id": "G9ZfP1rM48Q", "title": "25 02 06, p 14012, 52강, 프, 글 수정에서 파일들 관리할 수 있는 listForEdit 구현" },
    { "id": "Dua6Rm7cFiM", "title": "25 02 06, p 14012, 53강, 백/프, 파일 삭제 구현" },
    { "id": "7JvkkqDUhF8", "title": "25 02 06, p 14012, 54강, 프, 파일 삭제 후 router.back() 으로 이동, 그리고 이전 페이지가 refresh 되도록" },
    { "id": "rVCYxey_tww", "title": "25 02 06, p 14012, 55강, 백/프, 파일 수정 구현" },
    { "id": "Z51P8HWUCYk", "title": "25 02 07, p 14016, 09_44_25" },
    { "id": "9_f6shfXXJY", "title": "25 02 07, p 14016, 09_51_47" },
    { "id": "NUe4fgQ_YxI", "title": "25 02 07, p 14016, 10_07_59" },
    { "id": "KanoC8mnn80", "title": "25 02 07, p 14016, 10_13_37" },
    { "id": "dOkFQhUkuu0", "title": "25 02 07, p 14016, 10_17_00" },
    { "id": "cUvXQVw-cRI", "title": "25 02 07, p 14016, 10_34_09" },
    { "id": "M9rc9rNt-HY", "title": "25 02 07, p 14016, 10_49_09" },
    { "id": "aQvZb4cDJUs", "title": "25 02 07, p 14016, 11_12_48" },
    { "id": "mPpQI8k9cm0", "title": "25 02 07, p 14016, 11_48_02" },
    { "id": "mSYCBpfL6d0", "title": "25 02 07, p 14016, 12_11_40" },
    { "id": "MeUueZ_gPzA", "title": "25 02 07, p 14016, 12_18_39" },
    { "id": "SvZV_BbC7cw", "title": "25 02 07, p 14016, 14_04_31" },
    { "id": "4LuJZN2P4l0", "title": "25 02 07, p 14016, 12_39_57" },
    { "id": "SGf4oakEDA0", "title": "25 02 07, p 14016, 16_43_07" },
    { "id": "tTLhZRLfeWM", "title": "25 02 07, p 14016, 17_02_23" },
    { "id": "oiydEPIA9EU", "title": "25 02 07, p 14016, 17_26_28" },
    { "id": "RBdLP70iRZo", "title": "25 02 07, p 14016, 17_46_29" },
    { "id": "pRSlw8NYbc8", "title": "25 02 08, p 14016, 04_20_33" },
    { "id": "ZVHvUErcFpA", "title": "25 02 10, p 14016, 10_35_14" },
    { "id": "KywC6KQNcy4", "title": "25 02 10, p 14016, 11_01_23" },
    { "id": "umT3-ydG1Qg", "title": "25 02 10, p 14016, 11_12_23" },
    { "id": "z549zLpq3A0", "title": "25 02 10, p 14016, 11_25_25" },
    { "id": "Um-HqANBpt4", "title": "25 02 10, p 14016, 12_06_42" },
    { "id": "M5dAa6emFiU", "title": "25 02 10, p 14016, 12_16_10" },
    { "id": "C2T6PGjaODY", "title": "25 02 10, p 14016, 12_38_44" },
    { "id": "2Lh22y3_JgA", "title": "25 02 10, p 14016, 14_33_45" },
    { "id": "_7tzrYtamOY", "title": "25 02 10, p 14016, 14_40_29" },
    { "id": "lCZa_KVBpZg", "title": "25 02 10, p 14016, 15_01_20" },
    { "id": "j2dyt31AYoo", "title": "25 02 10, p 14016, 15_05_24" },
    { "id": "jDwuBMDy7n8", "title": "25 02 10, p 14016, 15_20_58" },
    { "id": "6jGevIrKdjQ", "title": "25 02 11, p 14016, 17_47_28" },
    { "id": "2quaw7Zn8fs", "title": "25 02 11, p 14016, 17_47_52" },
    { "id": "L0aMT8adD-w", "title": "25 02 10, p 14012, 85강, 백/프, 글 상세페이지 주소에 #f 라는 해시가 붙으면 라이브리로드 모드 활성화" },
    { "id": "kAShIcdCzuo", "title": "25 02 13, p 14040, 1강, 코틀린 언어로 위 요구사항을 구현" },
    { "id": "Pj6jx-ZmdMA", "title": "25 02 13, p 14039, 1강, 코틀린 개발환경 세팅" },
    { "id": "e2Z141lxlHM", "title": "25 02 13, p 14039, 2강, 코틀린은 자바와 100% 호환되는 조금 더 진보된 언어이다." },
    { "id": "lQUBV4bFR4o", "title": "25 02 13, p 14039, 3강, 변수 선언과 기본 출력" },
    { "id": "Kk3NT7_0j5Y", "title": "25 02 13, p 14039, 4강, 조건문 (if-else)" },
    { "id": "33-L4FD_XDs", "title": "25 02 13, p 14039, 5강, 반복문 (for)" },
    { "id": "GZjtmRqa2q8", "title": "25 02 13, p 14039, 6강, 함수 선언과 호출" },
    { "id": "QHP9XAl-LA4", "title": "25 02 13, p 14039, 7강, 클래스와 객체" },
    { "id": "KPCvqoJPVN0", "title": "25 02 13, p 14039, 8강, 리스트(List) 사용" },
    { "id": "R1-z2GwVSTU", "title": "25 02 13, p 14039, 9강, 맵(Map) 사용" },
    { "id": "NWWnuOSuvq4", "title": "25 02 13, p 14039, 10강, 널(null) 처리" },
    { "id": "q9p7vsAWdb4", "title": "25 02 13, p 14039, 11강, 람다 표현식" },
    { "id": "W4sjn8mxjQY", "title": "25 02 13, p 14039, 12강, 데이터 클래스 (Data Class)" },
    { "id": "YIf1dE0vEZM", "title": "25 02 13, p 14039, 13강, 확장 함수 (Extension Function)" },
    { "id": "TUeH6KFeLeQ", "title": "25 02 14, p 14039, 14강, 기본 매개변수 (Default Parameter)" },
    { "id": "EPh2WQ6uX1Y", "title": "25 02 14, p 14039, 15강, 객체 싱글톤 (Singleton)" },
    { "id": "Ey8oKSkaAFQ", "title": "25 02 14, p 14039, 16강, 문자열 템플릿 (String Template)" },
    { "id": "jS5ueAF4jqc", "title": "25 02 14, p 14039, 17강, 예외 처리 (Try-Catch)" },
    { "id": "8Whh3X4wKj8", "title": "25 02 14, p 14039, 18강, when 문 (Switch 대체)" },
    { "id": "JbJ3n0oeCCI", "title": "25 02 14, p 14039, 19강, 컬렉션 필터링 (Filtering Collections)" },
    { "id": "Plcyqc27myE", "title": "25 02 14, p 14039, 20강, forEach와 map (리스트 변환)" },
    { "id": "WvKn66cyTf8", "title": "25 02 14, p 14039, 21강, 엘비스 연산자 (`?:`)" },
    { "id": "RSk1aWk6b0Q", "title": "25 02 14, p 14039, 22강, 타입 체크와 캐스팅 (`is` vs `instanceof`)" },
    { "id": "XN1QcKZjcg4", "title": "25 02 14, p 14039, 23강, apply, let, also, run, with (스코프 함수)" },
    { "id": "QTe8k-1bIRg", "title": "25 02 14, p 14039, 24강, `apply` - 객체 설정 후 반환" },
    { "id": "b-epR5hntfw", "title": "25 02 14, p 14039, 25강, `let` - 안전 호출과 변환" },
    { "id": "Ozb_KZ3S6GE", "title": "25 02 14, p 14039, 26강, `also` - 부가적인 로직 실행" },
    { "id": "L81Zff02vmw", "title": "25 02 14, p 14039, 27강, `run` - 블록 실행 후 반환" },
    { "id": "ZoqCuN0PtC4", "title": "25 02 14, p 14039, 28강, `with` - 객체 설정과 결과 반환" },
    { "id": "IOfJZfeqSKw", "title": "25 02 14, p 14039, 29강, `apply`, `let`, `also`, `run`, `with` 정리 표" },
    { "id": "W6Cphf9RAdQ", "title": "25 02 14, p 14039, 30강, `lateinit` - 나중에 초기화하는 변수" },
    { "id": "RAnfR8_b_XQ", "title": "25 02 14, p 14039, 31강, `lazy` - 최초 접근 시 초기화 (Lazy Initialization)" },
    { "id": "k-ubKasjqno", "title": "25 02 14, p 14039, 32강, `lateinit` vs `lazy` 비교" },
    { "id": "qvSrgaIwWWI", "title": "25 02 14, p 14039, 33강, 동반 객체 (`companion object`)" },
    { "id": "d2FnIg0z6wg", "title": "25 02 14, p 14039, 34강, `object` vs `companion object` 비교" },
    { "id": "b9UMSLmTkv0", "title": "25 02 14, p 14039, 35강, `open` 키워드 (클래스 & 메서드 상속 허용)" },
    { "id": "FIBGMo1onZ4", "title": "25 02 14, p 14039, 36강, 자바의 상속 & 인터페이스 vs 코틀린의 상속 & 인터페이스 비교" },
    { "id": "Wz2eVASiTVY", "title": "25 02 14, p 14039, 37강, object와 companion object가 클래스 상속을 받을 수 있음" },
    { "id": "LsQzedSsTB4", "title": "25 02 14, p 14039, 38강, 자바의 Getter, Setter가 없는 `private` vs 코틀린의 `private val`" },
    { "id": "aPKGSE95scY", "title": "25 02 14, p 14039, 40강, Setter만 있는 경우 (Getter 호출 시 예외 발생)" },
    { "id": "YTrCdEQ7rFs", "title": "25 02 14, p 14039, 41강, Getter와 Setter가 모두 있는 경우" },
    { "id": "yo6A9ST4a5s", "title": "25 02 14, p 14039, 42강, Getter와 Setter에 로직 추가 (가상 필드 활용)" },
    { "id": "vtKgIEz_c94", "title": "25 02 14, p 14039, 43강, 주 생성자 (Primary Constructor)" },
    { "id": "SSNpKfFd1qc", "title": "25 02 14, p 14039, 44강, 주 생성자와 init 블록" },
    { "id": "bBIVRzI4j-Q", "title": "25 02 14, p 14039, 45강, 부 생성자 (Secondary Constructor)" },
    { "id": "lwonQceSUDY", "title": "25 02 14, p 14039, 46강, 주 생성자 + 부 생성자 조합" },
    { "id": "7SYjugqSJ5w", "title": "25 02 14, p 14039, 47강, 생성자 정리 및 총정리" },
    { "id": "Pb9YIE8g-wU", "title": "25 02 14, p 14039, 48강, 생성자에서 `require()`와 `check()` 활용" },
    { "id": "F9fE5LVvgOY", "title": "25 02 14, p 14040, 2강, 프로젝트 세팅" },
    { "id": "l4LUz-8zJg4", "title": "25 02 14, p 14040, 3강, 1 단계 시작, `종료` 입력하면 break" },
    { "id": "hrMQZrDIaNk", "title": "25 02 14, p 14040, 4강, 입력받은 명령어에 trim 처리" },
    { "id": "ExkOCpom-LU", "title": "25 02 14, p 14040, 5강, input 변수에 nullable 인게 불가능하다는 것을 우리가 알기에 `!!` 사용" },
    { "id": "gbAVKGitU3k", "title": "25 02 14, p 14040, 6강, 2 단계 시작, 명언내용과 작가 입력" },
    { "id": "ndwFmjiCcuc", "title": "25 02 14, p 14040, 7강, 3 단계 시작, 등록시 생성된 명언번호 노출" },
    { "id": "ujSBa3JXj7s", "title": "25 02 14, p 14040, 8강, 4 단계 시작, 등록할때 마다 생성되는 명언번호가 증가" },
    { "id": "rTglCuamR5k", "title": "25 02 14, p 14040, 9강, 코틀린에서는 패키지와 폴더구조가 동일할 필요가 없지만 맞추는게 좋다" },
    { "id": "pcyLKKgfg50", "title": "25 02 14, p 14040, 10강, 5 단계 시작, 목록" },
    { "id": "3Y79OeSE2d8", "title": "25 02 14, p 14040, 11강, 6 단계 시작, Rq 도입해서 명령어 파싱" },
    { "id": "WO_jjVJA7Lo", "title": "25 02 14, p 14040, 12강, 명언 삭제" },
    { "id": "k11F_FfDz7g", "title": "25 02 14, p 14040, 13강, 7 단계 시작, 존재하지 않는 명언에 대한 예외처리" },
    { "id": "0pQkMDr7B_s", "title": "25 02 14, p 14040, 14강, removeIf 가 아닌 firstOrNull 사용" },
    { "id": "nbu7WojWsog", "title": "25 02 14, p 14040, 15강, SystemController, WiseSayingController 도입하여 App 클래스 간소화" },
    { "id": "Ka_neJw2Q8o", "title": "25 02 14, p 14040, 16강, 특정 변수가 nullable 이고 `값이 null 일경우 함수종료 코드` 이후에는 nullable 제거됨" },
    { "id": "LjFUuiX6-gM", "title": "25 02 14, p 14040, 17강, 8 단계 시작, 수정" },
    { "id": "pTKCoUSnhV4", "title": "25 02 14, p 14040, 18강, WiseSayingService 도입하여 WiseSayingController 간소화" },
    { "id": "NUoO8WnhWZA", "title": "25 02 14, p 14040, 19강, WiseSayingRepository 도입하여 WiseSayingService 간소화" },
    { "id": "EctErDklRZ4", "title": "25 02 17, p 14040, 20강, TestRunnder 도입, 명언 등록 테스트" },
    { "id": "vbRGCzwajrU", "title": "25 02 17, p 14040, 21강, use, finally 사용하여 close 와 중요한 코드가 무조건 실행되도록 보장" },
    { "id": "Z1ajTC2FohQ", "title": "25 02 17, p 14040, 22강, 명언 목록 테스트" },
    { "id": "CzkTyLDOJ_s", "title": "25 02 17, p 14040, 23강, assertThat 도입, 명언 삭제 테스트" },
    { "id": "Vp8d2C-qvks", "title": "25 02 17, p 14040, 24강, 명언 수정 테스트" },
    { "id": "cmHMw18WUaY", "title": "25 02 17, p 14040, 25강, Rq 를 올바른 위치로 이동, SystemControllerTest 와 WiseSayingControllerTest 로 분리" },
    { "id": "858CxxiMu4A", "title": "25 02 17, p 14040, 26강, 각종 빈을 싱글톤 스코프에서 관리, 매 테스트 마다 리포지터리 초기화" },
    { "id": "VLSRXotE7P0", "title": "25 02 17, p 14040, 27강, WiseSayingMemoryRepository 라는 구현체를 분리" },
    { "id": "jN55STmjlHk", "title": "25 02 17, p 14040, 28강, WiseSayingFileRepository 의 save 구현" },
    { "id": "xmoLMCJOoSs", "title": "25 02 17, p 14040, 29강, findById 구현, fromJsonStr 구현" },
    { "id": "rJCnMnlQgEA", "title": "25 02 17, p 14040, 30강, saveLastId, loadLastId 구현" },
    { "id": "Nx18MdkHTVM", "title": "25 02 17, p 14040, 31강, delete 구현" },
    { "id": "f3DTBs29ySM", "title": "25 02 17, p 14040, 32강, findAll 구현" },
    { "id": "H310jNqwaA8", "title": "25 02 17, p 14040, 33강, loadLastIdAndIncrease 함수의 버그 수정 후 genNextId 로 변경, 파일 리포지터리 적용, 9/11/12 단계 완료" },
    { "id": "FNuN2wwfbwU", "title": "25 02 17, p 14040, 34강, 10 단계 시작, 빌드" },
    { "id": "kfQlE2trgGE", "title": "25 02 17, p 14040, 35강, 13 단계 시작, 검색" },
    { "id": "pYr8VSVFLzs", "title": "25 02 17, p 14040, 36강, 14 단계 시작, 페이징을 위한 테스트케이스와 샘플 데이터 생성 기능 구현" },
    { "id": "OFA9PsINNls", "title": "25 02 17, p 14040, 37강, 최신 글 순으로 정렬, 페이징 처리, 페이지네이션 메뉴 출력" },
    { "id": "Om1-vM0ruDo", "title": "25 02 17, p 14012, 88강, 백/프, 새로운 환경에서 시작하는 방법" },
    { "id": "oNb_zXw8CF8", "title": "25 02 17, p 14012, 89강, 백, 이미지 메타데이터 라이브러리 관련 오류수정하여 그래들 디펜던스 에러표시 안뜨게 하기" },
    { "id": "k1pV7JmwEBc", "title": "25 02 17, p 14061, 1강, 기존 프로젝트에서 시작하기" },
    { "id": "WSi46MZKG20", "title": "25 02 17, p 14061, 2강, 프로젝트 실행" },
    { "id": "Y1DbUg2-J5Q", "title": "25 02 17, p 14061, 3강, 백/프, 백 : 프로젝트 이름 변경, 프 : 카카오 CDN 도메인 와일드 카드 처리" },
    { "id": "GL254zVDKf4", "title": "25 02 18, p 14061, 4강, 백, 코틀린 JVM, 코틀린 스프링 플러그인 활성화하여 코틀린 쓸 수 있도록" },
    { "id": "Qs-K5ck_yAg", "title": "25 02 18, p 14061, 5강, 백, 코프링을 위한 의존성 추가" },
    { "id": "Ukl0N3vCCCs", "title": "25 02 18, p 14061, 6강, 백, SpringApplication 을 코틀린으로 전환" },
    { "id": "fJDAI_-F6B8", "title": "25 02 18, p 14061, 7강, 백, 코틀린화 하기 전에 해당 클래스에 롬복 빌더가 적용되어 있다면 제거" },
    { "id": "hhp5PLgOgaM", "title": "25 02 18, p 14061, 8강, 백, Member.java 에서 빌더 제거" },
    { "id": "T0g7woSM2tM", "title": "25 02 18, p 14061, 9강, 백, PostComment.java 에서 빌더 제거" },
    { "id": "qBdpm5nYA2s", "title": "25 02 18, p 14061, 10강, 백, PostGenFile.java 에서 빌더 제거" },
    { "id": "n8RQIruUFrQ", "title": "25 02 18, p 14061, 11강, 백, 나머지 엔티티관련 클래스에서 빌더 제거" },
    { "id": "gBCRdQcQdPM", "title": "25 02 18, p 14061, 12강, 백, JPA를 위한 build.gradle.kts 설정" },
    { "id": "calQjfYDTDg", "title": "25 02 18, p 14061, 14강, 백, Member.java 코틀린으로 전환" },
    { "id": "tdQ-fnQEE6E", "title": "25 02 18, p 14061, 15강, 백, PostComment.java 코틀린으로 전환" },
    { "id": "xEjazH2XRr0", "title": "25 02 18, p 14061, 16강, 백, PostGenFile.java 코틀린으로 전환" },
    { "id": "g2GVQ557laE", "title": "25 02 18, p 14061, 17강, 백, GenFile.java 코틀린으로 전환" },
    { "id": "2QYtufP6aGA", "title": "25 02 18, p 14061, 18강, 백, GenFile.kt 에 누락된 equals, hashCode 구현" },
    { "id": "LKwZFxFu-Eo", "title": "25 02 18, p 14061, 19강, 백, Post.java 코틀린으로 전환" },
    { "id": "6TFJrSOSuE4", "title": "25 02 18, p 14061, 13강, 백, Q 클래스를 kapt 로 생성, 그 때문에 자바 21로 다운" },
    { "id": "g1-aWUp5gAU", "title": "25 02 19, p 14061, 20강, 백, BaseTime.java, BaseEntity.java 코틀린으로 전환" },
    { "id": "W5b6D3vF-rQ", "title": "25 02 19, p 14061, 10_01_36" },
    { "id": "yeA7C0zQnMc", "title": "25 02 19, p 14061, 10_15_28" },
    { "id": "ZLWD3MofLSM", "title": "25 02 19, p 14061, 10_21_17" },
    { "id": "WMrYkTM5m3M", "title": "25 02 19, p 14061, 10_24_54" },
    { "id": "ekphrXGLMAk", "title": "25 02 19, p 14061, 10_28_50" },
    { "id": "AN2N4ULtMCE", "title": "25 02 19, p 14061, 10_32_07" },
    { "id": "RjK3pb2MvEM", "title": "25 02 19, p 14061, 10_35_49" },
    { "id": "WglRtI6BmHA", "title": "25 02 19, p 14061, 10_37_53" },
    { "id": "C5adSTM3UOs", "title": "25 02 19, p 14061, 10_44_43" },
    { "id": "sJTlI0uc6vg", "title": "25 02 19, p 14061, 11_00_39" },
    { "id": "InSbQP9XNOo", "title": "25 02 19, p 14061, 11_06_48" },
    { "id": "IpQiJrFRiZc", "title": "25 02 19, p 14061, 11_10_18" },
    { "id": "sAmRwFi6Mf4", "title": "25 02 19, p 14061, 11_19_12" },
    { "id": "w54fIV8YULk", "title": "25 02 19, p 14061, 11_43_28" },
    { "id": "8K1TxzbjCik", "title": "25 02 19, p 14039, 49강, 게터/세터의 커스텀" },
    { "id": "ntrnWEUa5m0", "title": "25 02 19, p 14061, 10_41_55" },
    { "id": "Zc_eLZsbO9s", "title": "25 02 19, p 14061, 14_03_56" },
    { "id": "AghDuvu-h7E", "title": "25 02 19, p 14061, 14_05_59" },
    { "id": "ztZ0ZB1BHP0", "title": "25 02 19, p 14061, 14_11_22" },
    { "id": "k33jGFWH89I", "title": "25 02 19, p 14061, 14_19_49" },
    { "id": "--o_IXSnuFQ", "title": "25 02 19, p 14061, 14_23_55" },
    { "id": "LljdOxY3qzA", "title": "25 02 19, p 14061, 14_32_24" },
    { "id": "DrFrd4wmCUk", "title": "25 02 19, p 14061, 14_47_26" },
    { "id": "PLTzvGpugkw", "title": "25 02 19, p 14061, 15_01_39" },
    { "id": "YTy-jJuSSBA", "title": "25 02 19, p 14061, 15_10_17" },
    { "id": "uelikfcVQ28", "title": "25 02 19, p 14061, 15_16_00" },
    { "id": "0Zp9hjypeyM", "title": "25 02 19, p 14061, 15_20_45" },
    { "id": "wjIqFN63G1g", "title": "25 02 19, p 14061, 15_24_27" },
    { "id": "LkaXCwvJ2I8", "title": "25 02 19, p 14061, 15_36_36" },
    { "id": "2BC-6hHLqz4", "title": "25 02 19, p 14061, 15_39_04" },
    { "id": "1QS5Xms8N4I", "title": "25 02 19, p 14061, 15_46_07" },
    { "id": "2zahommXUzk", "title": "25 02 19, p 14061, 15_48_45" },
    { "id": "qf8oMq7gb9M", "title": "25 02 19, p 14061, 17_22_26" },
    { "id": "bJSREj3FazY", "title": "25 02 19, p 14061, 17_29_25" },
    { "id": "pHtv6sqvi_Q", "title": "25 02 19, p 14061, 17_35_13" },
    { "id": "Iih0DRNOoFE", "title": "25 02 19, p 14061, 17_41_37" },
    { "id": "i0lxNhHN8CM", "title": "25 02 20, p 14061, 56강, 백, ApiV1PostCommentController.java 코틀린으로 전환" },
    { "id": "IXSz2HFoTos", "title": "25 02 20, p 14061, 57강, 백, PostGenFileController.java 코틀린으로 전환" },
    { "id": "YAo8Tx-Iny0", "title": "25 02 20, p 14061, 58강, 백, ApiV1PostGenFileController.java 코틀린으로 전환" },
    { "id": "8FCTMKI6gPQ", "title": "25 02 20, p 14061, 59강, 백, AuthTokenService.java 코틀린으로 전환" },
    { "id": "RgciTFHpMpI", "title": "25 02 20, p 14061, 60강, 백, 모든 테스트 클래스들을 코틀린으로 전환, @JvmRecord 어노테이션 제거" },
    { "id": "I5LLkrphgZc", "title": "25 02 20, p 14061, 61강, 백, 소스코드 폴더명을 java 에서 kotlin 으로 변경" },
    { "id": "Y94fpwUVUx0", "title": "25 02 20, p 14061, 62강, 백, BaseEntity 끼리 비교할 때 대상이 프록시 객체일 수 있다는 것을 고려" },
    { "id": "DO3GC9R1FE0", "title": "25 02 20, p 14061, 63강, 백, 스트림 map 에서 최대한 it 을 사용하도록" },
    { "id": "9XeZWlhZ-4c", "title": "25 02 20, p 14061, 64강, 백/프, Dto를 통해서 엔티티 클래스가 스웨거 노출되지 않도록 작업" },
    { "id": "MsZygEzJmwY", "title": "25 02 20, p 14061, 65강, 프, 글 수정시 publisehd, listed에서 optional 제거" },
    { "id": "4o4XZxoBhE8", "title": "25 02 20, p 14061, 66강, 프, 글 수정시 파일 업로드 후 파일 Input 이 초기화 되도록" },
    { "id": "Vn0QI_EIpzs", "title": "25 02 20, p 14061, 67강, 프, 글 수정 후 post 상태를 업데이트 하여 똑같은 수정요청이 여러번 발생하지 않도록" },
    { "id": "Dmq5Jhbs1yU", "title": "25 02 20, p 14061, 68강, 백, 네이버 로그인" },
    { "id": "K7D8u0P9naI", "title": "25 02 20, p 14061, 69강, 프, 네이버 로그인" },
    { "id": "meEAiftnfk8", "title": "25 02 20, p 14061, 70강, 프, 네이버 로그인버튼을 메인화면에 노출" },
    { "id": "y53TqQ80kJI", "title": "25 02 20, p 14061, 71강, 프, 로그인 페이지(메인 페이지)를 따로 두고, 내비 메뉴에 로그인 페이지 버튼 노출" },
    { "id": "Wy4A0HZuwmc", "title": "25 02 20, p 14061, 72강, 백, 비밀번호 암호화" },
    { "id": "Si-BuIEN2wg", "title": "25 02 18, p 153, 60강, 구글 AI 스튜디오의 Stream Realtime 기능을 이용하시면 코딩에 도움이 됩니다." },
    { "id": "fedOmfUfmgU", "title": "25 02 20, p 14068, 1강, docker.com 에서 가입 후 docker desktop 설치해주세요." },
    { "id": "VKz7FUN-pzI", "title": "25 02 21, p 14069, 09_04_07" },
    { "id": "5mqr4YLgDZs", "title": "25 02 21, p 14069, 09_07_21" },
    { "id": "uWuUVpPJHpo", "title": "25 02 21, p 14069, 09_14_04" },
    { "id": "Xpa9Is0Pn6E", "title": "25 02 21, p 14069, 09_18_29" },
    { "id": "Bbz_5kLNyQk", "title": "25 02 21, p 14069, 09_22_30" },
    { "id": "dX-t2gYlinI", "title": "25 02 21, p 14069, 09_24_22" },
    { "id": "8tP4GfkK7rk", "title": "25 02 21, p 14069, 09_28_51" },
    { "id": "mkneWM_eqcI", "title": "25 02 21, p 14069, 09_36_33" },
    { "id": "oW1hHapoA2Q", "title": "25 02 21, p 14069, 09_43_17" },
    { "id": "xOsQcaoDsOA", "title": "25 02 21, p 14069, 09_47_44" },
    { "id": "rPlg_x-SGzc", "title": "25 02 21, p 14069, 10_02_06" },
    { "id": "xK56Yw2zwl8", "title": "25 02 21, p 14069, 10_06_25" },
    { "id": "K4Z4yilkxYk", "title": "25 02 21, p 14069, 10_11_33" },
    { "id": "FGhEICEatf4", "title": "25 02 21, p 14069, 10_19_50" },
    { "id": "tKyNkA-27oo", "title": "25 02 21, p 14069, 10_21_56" },
    { "id": "TLBECpAnoEo", "title": "25 02 21, p 14069, 10_29_51" },
    { "id": "Bs39tWS2jdc", "title": "25 02 21, p 14069, 10_32_48" },
    { "id": "b4UU4b6E1PU", "title": "25 02 21, p 14069, 10_43_53" },
    { "id": "jD1PSXpHWko", "title": "25 02 21, p 14069, 11_04_48" },
    { "id": "GeL5B7jqV5E", "title": "25 02 21, p 14069, 11_11_12" },
    { "id": "3rRyQOjZLsk", "title": "25 02 21, p 14069, 11_41_15" },
    { "id": "_57OGWM_4SE", "title": "25 02 21, p 14069, 14_01_06" },
    { "id": "TBO1Dt3MID0", "title": "25 02 21, p 14069, 14_11_17" },
    { "id": "XBn6awt9WOg", "title": "25 02 21, p 14069, 14_18_05" },
    { "id": "2IEO4T_Xg-A", "title": "25 02 21, p 14069, 14_27_17" },
    { "id": "QoGB2Dv1YNI", "title": "25 02 21, p 14069, 14_36_46" },
    { "id": "SRIwGMYg7dQ", "title": "25 02 21, p 14069, 15_11_11" },
    { "id": "DaNr9Guzk_k", "title": "25 02 21, p 14069, 15_14_25" },
    { "id": "Y-b1vHerg_I", "title": "25 02 21, p 14069, 15_25_48" },
    { "id": "w1-fzaMrZoY", "title": "25 02 21, p 14069, 15_40_44" },
    { "id": "_0iGLQzmQW8", "title": "25 02 21, p 13836, 23_50_37" },
    { "id": "6W5T1s7c9fQ", "title": "25 02 22, p 14069, 00_17_53" },
    { "id": "wFhfSmQoGEc", "title": "25 02 24, p 13836, 09_13_43" },
    { "id": "zjvjGoLEeVA", "title": "25 02 24, p 14078, 33강, `realpath` & `stat` (파일 경로 및 속성 확인)" },
    { "id": "Bs1Bf7sxPcc", "title": "25 02 24, p 14079, 34강, `locate` (빠른 파일 검색)" },
    { "id": "LonYh_3LpzQ", "title": "25 02 24, p 14080, 35강, `xargs` (명령어에 인자 전달)" },
    { "id": "Tq1EhgCsBP0", "title": "25 02 24, p 14081, 36강, `tree` (디렉토리 구조 트리 형태로 출력)" },
    { "id": "Jt2hQN0TmuQ", "title": "25 02 24, p 14082, 37강, `sort` (텍스트 정렬)" },
    { "id": "ixDaZfa_0wI", "title": "25 02 24, p 14083, 38강, `uniq` (중복 제거)" },
    { "id": "bw1s0peLDrM", "title": "25 02 24, p 14084, 39강, `wc` (단어, 줄, 문자 개수 세기)" },
    { "id": "I5DXjxf0fnY", "title": "25 02 24, p 14085, 40강, `tee` (출력 저장 및 전달)" },
    { "id": "4Cd2n79ylhc", "title": "25 02 24, p 14086, 41강, `jobs` & `bg` & `fg` (백그라운드 및 포그라운드 작업 관리)" },
    { "id": "SoywxqFbgMo", "title": "25 02 24, p 14087, 42강, `nohup` (터미널 종료 후에도 프로세스 실행 유지)" },
    { "id": "NUEcmve9ANU", "title": "25 02 24, p 14088, 43강, `top` & `htop` (실시간 시스템 모니터링)" },
    { "id": "NeL0yzyq62Q", "title": "25 02 24, p 14089, 44강, `watch` (명령어 주기적 실행)" },
    { "id": "bMetcoaTibU", "title": "25 02 24, p 14090, 45강, `free` (메모리 사용량 확인)" },
    { "id": "-nVLFZdHOhE", "title": "25 02 24, p 14068, 2강, 도커를 사용하지 않으면 의존성 충돌 문제들이 발생합니다." },
    { "id": "3ehhd2C35Js", "title": "25 02 24, p 14068, 3강, 도커 컨테이너에서의 프로그램 실행은 HOST OS 에서의 실행대비 성능저하가 없습니다." },
    { "id": "z4roZ4EPMbw", "title": "25 02 24, p 14068, 4강, 모든 도커 환경 초기화 하는 방법, 실습을 처음부터 하고 싶으시다면 이렇게 초기화 해주세요." },
    { "id": "DKQMYTYtPDY", "title": "25 02 24, p 14068, 5강, 도커 이미지" },
    { "id": "VuCoORpXpBE", "title": "25 02 24, p 14068, 6강, 도커 이미지 다운로드" },
    { "id": "uKuViiEZgcw", "title": "25 02 24, p 14068, 7강, 도커 컨테이너 실행 (Hello World)" },
    { "id": "6qNFcPU00cU", "title": "25 02 24, p 14068, 8강, 도커 컨테이너 실행 개념" },
    { "id": "IOxDeJoRrXs", "title": "25 02 24, p 14068, 9강, 도커 컨테이너 엔트리포인트 재지정" },
    { "id": "9PXmSU-AJ-A", "title": "25 02 24, p 14068, 10강, 엔트리포인트 재지정시 해당 엔트리포인트가 복잡한 명령인 경우" },
    { "id": "vuGDmw9wTlI", "title": "25 02 24, p 14068, 11강, 도커에서는 인터렉션이 필요할 때 `-it` 옵션을 사용하여 인터렉티브 모드로 실행해야 한다." },
    { "id": "EBY9a_d7N2k", "title": "25 02 24, p 14068, 12강, 도커 이미지의 정보를 확인하는 방법" },
    { "id": "YS049HnxzLg", "title": "25 02 24, p 14068, 13강, docker-entrypoint.sh 명령어의 역할" },
    { "id": "Q6ALtA_UuP4", "title": "25 02 24, p 14068, 14강, 각 docker run 명령어의 최종적인 모습" },
    { "id": "CiRtQ3ag5qI", "title": "25 02 25, p 14068, 15강, --rm 옵션" },
    { "id": "tmsBvic1JRs", "title": "25 02 25, p 14068, 16강, Detach 모드(-d 옵션), docker stop" },
    { "id": "fBPhYsR0zhg", "title": "25 02 25, p 14068, 17강, docker logs, --name 옵션" },
    { "id": "mJapT-7MkCY", "title": "25 02 25, p 14068, 18강, docker start와 -a 옵션 사용법" },
    { "id": "0ZRglwiB3F0", "title": "25 02 25, p 14068, 19강, docker kill와 강제 삭제 옵션 사용법" },
    { "id": "Y_H74_uK0Ww", "title": "25 02 25, p 14068, 20강, 환경변수" },
    { "id": "_JewMDAdxHw", "title": "25 02 25, p 14068, 21강, 포트" },
    { "id": "NWcVbqcSxJ0", "title": "25 02 25, p 14068, 22강, 도커 컨테이너의 정보를 확인하는 방법" },
    { "id": "exFD86zp2q8", "title": "25 02 25, p 14068, 23강, 기본적으로는 도커 컨테이너들이 같은 네트워크에 속합니다. 그들끼리는 제약없이 통신이 가능합니다." },
    { "id": "3w_Nr-o5bSs", "title": "25 02 25, p 14068, 24강, docker exec 로 특정 컨테이너에 추가명령어 실행" },
    { "id": "DUCXebTxMa4", "title": "25 02 25, p 14068, 25강, nginx 컨테이너의 웹루트 디렉토리를 찾아서 sub.html 추가" },
    { "id": "uw18CYkiNAw", "title": "25 02 25, p 14068, 26강, nginx 컨테이너의 웹루트 디렉토리를 찾아서 sub.html 추가, docker cp" },
    { "id": "B5GQqNjzSK8", "title": "25 02 25, p 14068, 27강, 볼륨 마운트를 이용해서 도커 호스트에서 편하게 html 파일을 관리" },
    { "id": "iaV1lIlU1sU", "title": "25 02 25, p 14068, 28강, 기본 네트워크인 브릿지 네트워크가 아닌 사용자 정의 네트워크를 생성" },
    { "id": "ZGwcD4gXCi0", "title": "25 02 25, p 14068, 29강, 도커 컨테이너끼리 컨테이너명으로 통신하기" },
    { "id": "UZEcm6BOZZE", "title": "25 02 25, p 14068, 30강, 도커 컨테이너끼리 HOST OS의 포트를 이용해서 통신" },
    { "id": "wiZWqEngjow", "title": "25 02 25, p 14068, 31강, 도커 컨테이너끼리 host.docker.internal 도메인을 이용해서 통신" },
    { "id": "1_0htweUUWY", "title": "25 02 25, p 14068, 32강, 도커 컨테이너 생명주기" },
    { "id": "1Tkdnv1-VOY", "title": "25 02 25, p 14068, 33강, 하나의 NGINX는 포트를 구분자로 하여 여러 사이트를 동시에 운영할 수 있습니다." },
    { "id": "l2-2E3PPXI4", "title": "25 02 25, p 14068, 34강, 하나의 NGINX로 여러개의 사이트를 운영" },
    { "id": "sHT_o_VEK9A", "title": "25 02 26, p 14068, 35강, 도커 이미지는 우리 앱의 실행파일뿐 아니라 그것이 실행되는 데 필요한 인프라까지 담을 수 있는 포장지이다." },
    { "id": "YHx7gbjhZ3Q", "title": "25 02 26, p 14068, 36강, 도커 이미지 만들기" },
    { "id": "Y_T2oDYD-m0", "title": "25 02 26, p 14068, 37강, 도커 이미지는 여러겹의 레이어러 구성되어 있고 레이어는 immutable 하다. 그래서 캐시가 쉽다." },
    { "id": "loeA7DZyX3I", "title": "25 02 26, p 14068, 38강, site1, site2, site3 웹 사이트를 포함하는 도커 이미지 만들기" },
    { "id": "7NDKXBGi_lo", "title": "25 02 26, p 14068, 39강, docker history 로 이미지의 레이어를 확인할 수 있다." },
    { "id": "LwqmsWHspi4", "title": "25 02 26, p 14068, 40강, Dockerfile은 각 단계에서 최대한 연산을 피하려 하고 캐시 우선사용 정책대로 작동한다." },
    { "id": "t87wWUNVChU", "title": "25 02 26, p 14068, 41강, Dockerfile의 특정 단계에서 캐시를 쓸 수 없는게 확인되면 해당 단계부터 끝까지 캐시를 쓰지 않고 정석대로 연산이 된다." },
    { "id": "v5yDRtq-Njk", "title": "25 02 26, p 14068, 42강, 도커 이미지 빌드 속도 향상을 위한 명령어 순서 변경작업" },
    { "id": "mwD65rBH4MY", "title": "25 02 26, p 14068, 43강, 도커 이미지 빌드시에 --no-cache 옵션을 붙이면 캐시가 작동하지 않습니다." },
    { "id": "Au6rJP2DH1I", "title": "25 02 26, p 14068, 44강, 오라클 11g 설치" },
    { "id": "ip1ZEDBlPfM", "title": "25 02 26, p 14068, 45강, 디비버로 오라클 접속" },
    { "id": "VK_3HubnOsw", "title": "25 02 26, p 14068, 46강, PostgreSQL 설치" },
    { "id": "lYYrkKN9FyQ", "title": "25 02 26, p 14068, 47강, redis 설치" },
    { "id": "WHjQ5dTpX_k", "title": "25 02 26, p 14068, 48강, 샘플 스프링부트 프로젝트 생성" },
    { "id": "nTkpzU79cE8", "title": "25 02 26, p 14068, 49강, javac 로 컴파일 한 후 실행" },
    { "id": "QUKt8n3YBkg", "title": "25 02 26, p 14068, 50강, jar 파일로 만들고 실행" },
    { "id": "3_gYdhIRgRk", "title": "25 02 26, p 14068, 51강, gradle로 jar 파일로 만들고 실행" },
    { "id": "ORcleqzCXoc", "title": "25 02 26, p 14068, 52강, JDK 21이 설치되어 있는 도커 이미지 실행, 코프링 소스코드 PULL/빌드/실행" },
    { "id": "XXQskykE08w", "title": "25 02 27, p 14068, 53강, 보통 빌드서버와 운영서버는 분리되어야 한다." },
    { "id": "kmTfHR74LWc", "title": "25 02 27, p 14068, 54강, 기본적으로 짧은 수명을 가지는 컨테이너의 수명을 무한히 길게 설정하는 방법" },
    { "id": "bAaLfYUx77o", "title": "25 02 27, p 14068, 55강, 빌드서버와 운영서버의 분리, docker cp 사용" },
    { "id": "ngVdJSQZ7TI", "title": "25 02 27, p 14068, 56강, 빌드서버와 운영서버의 분리, 바인드 마운트 사용" },
    { "id": "UT49qmSkjpQ", "title": "25 02 27, p 14068, 57강, 빌드서버와 운영서버의 분리, 볼륨 사용" },
    { "id": "LgiX8sfhFss", "title": "25 02 27, p 14068, 58강, 빌드서버에서 만든 jar 파일을 이용해서 어디서든 바로 실행가능한 도커이미지 만들기" },
    { "id": "N_ZopJy_w9k", "title": "25 02 27, p 14068, 59강, Dockerfile의 멀티 스테이지 빌드를 이용하면 빌드서버에서의 빌드 과정이 쉬워진다." },
    { "id": "byL_XcdvMoU", "title": "25 02 27, p 14068, 60강, 멀티 스테이지 빌드에 사용되는 Dockerfile" },
    { "id": "j7JrAfbT0yI", "title": "25 02 27, p 14068, 60강, 멀티 스테이지 빌드에 사용되는 DockerfileSingle" },
    { "id": "_jOqxGtCvck", "title": "25 02 27, p 14068, 62강, 멀티 스테이지 빌드에 사용되는 DockerfileSingle" },
    { "id": "WEOli0-Wqi8", "title": "25 02 27, p 14068, 63강, nslookup 명령어로 특정 도메인에 달려있는 A 레코드들을 볼 수 있다." },
    { "id": "CUIIVzeAILc", "title": "25 02 27, p 14068, 64강, A 레코드와 라운드 로빈" },
    { "id": "DlNWK5ypSBg", "title": "25 02 27, p 14068, 65강, 도메인이 네임서버로 임명한 서버가 해당 도메인의 A 레코드들을 편집할 수 있다." },
    { "id": "iXCrE_dfECY", "title": "25 02 27, p 14068, 66강, nip.io 의 서브 도메인을 통해서 특정 IP를 가리키는 도메인을 동적으로 만들 수 있다." },
    { "id": "iacYZKRF-x0", "title": "25 02 28, p 14068, 67강, nginx 에서는 포트가 아니라 도메인으로도 요청을 구분 할 수 있다." },
    { "id": "aaOc5yq4714", "title": "25 02 28, p 14068, 68강, nginx가 받은 요청을 스프링부트에게 토스한다." },
    { "id": "t16HK3FY8A8", "title": "25 02 28, p 14068, 69강, 도커 컴포즈를 사용해서 빌드 및 실행" },
    { "id": "5ViMtJBhBZ0", "title": "25 02 28, p 14068, 70강, 도커 컴포즈를 사용해서 2개 이상의 서비스를 NGINX로 서빙" },
    { "id": "_H2pxNG7Og4", "title": "25 02 28, p 14068, 71강, 도커 컴포즈를 사용해서 4개 이상의 서비스를 NGINX로 서빙" },
    { "id": "8rULw5zeEYk", "title": "25 02 28, p 14068, 72강, 도커 허브 가입" },
    { "id": "tAm6X1EEMvo", "title": "25 02 28, p 14068, 73강, jangka512/nginx:2 푸시, latest 태그 추가하기" },
    { "id": "5AEItJhdr9c", "title": "25 02 28, p 14070, 1강, 젠킨스 대신 GITHUB ACTIONS 를 사용해도 됩니다." },
    { "id": "Bxb7Ti5uNNk", "title": "25 02 28, p 14070, 2강, .github/workflows/work-1.yml 워크플로우 파일 추가" },
    { "id": "vrGvZDKBDNk", "title": "25 02 28, p 14070, 3강, 각각의 job 들은 독립적으로 실행됩니다." },
    { "id": "TPdM4Ppk9Y4", "title": "25 02 28, p 14070, 4강, 워크플로우가 해당 리포지터리에 대해서 쓰기 작업도 할 수 있도록 설정" },
    { "id": "aBPNGPBkWcQ", "title": "25 02 28, p 14070, 5강, actions/checkout@v4 와 mathieudutour/github-tag-action@v6.1 사용해서 커밋 마다 태그생성" },
    { "id": "3MveypyWpw8", "title": "25 02 28, p 14070, 6강, 태그와 함께 릴리즈도 만들어지도록 세팅" },
    { "id": "wnNROta4aOE", "title": "25 02 28, p 14070, 7강, 사소한 커밋들은 빌드로 이어지지 않도록" },
    { "id": "UBm97kv2two", "title": "25 02 28, p 14061, 73강, 백/프, 프로젝트 실행하는 방법" },
    { "id": "-pbE5heOG8Y", "title": "25 02 28, p 14070, 9강, index.html 을 수정해도 빌드가 되지 않는다." },
    { "id": "qwGLUg2JLIs", "title": "25 02 28, p 14070, 8강, Dockerfile 추가, 자동으로 도커 이미지 빌드 되어 ghcr.io 에 푸시 되도록" },
    { "id": "2GkhC_dU8IM", "title": "25 02 28, p 14070, 10강, index.html 을 수정해도 빌드가 되도록 세팅" },
    { "id": "F6UMQx-Z21g", "title": "제목: 25 02 20, p 14061, 73강, 프, VS CODE 모드에서 수정 후 뒤로가기 했을 때 글 내용이 갱신되지 않는 버그 수정" },
    { "id": "EFWnIdjxyfc", "title": "25 03 04, p 14072, 1강, 캐시, DB인덱스, WAS 스케일아웃으로도 해결이 안되면 DB 리플리케이션으로 성능향상" },
    { "id": "pi93ubGKQcw", "title": "25 03 04, p 14072, 2강, mysql-1, mysql-2, mysql-3 삭제 후 리플리케이션 세팅" },
    { "id": "9hzPu-B94-0", "title": "25 03 04, p 14072, 4강, 스프링부트 프로젝트 세팅" },
    { "id": "OYCL5lewh_8", "title": "25 03 04, p 14072, 5강, H2 DB 설정, Post 엔티티 추가 및 샘플 데이터 생성" },
    { "id": "7EjqG5iQm6g", "title": "25 03 04, p 14072, 6강, 기본적으로 prod 가 활성화 되게 하고, prod 에서 mysql 사용하도록" },
    { "id": "zqPn5S7jWvw", "title": "25 03 04, p 14072, 7강, prod 모드에서 DBCP를 3개 쓰도록, 1개는 소스, 2개는 리플리카" },
    { "id": "D3GxwJndiMo", "title": "25 03 05, p 14070, 11강, read:packages_only 토큰을 만들어서 로그인 후 도커 pull 하세요." },
    { "id": "ABraVnr_RNU", "title": "25 03 05, p 14070, 12강, 만들어진 도커 이미지 테스트" },
    { "id": "Ner2NFHx-4g", "title": "25 03 05, p 14070, 13강, 해당 패키지는 private 처리해주세요. 해당 도커 이미지안에는 API KEY 등 다양한 정보가 들어있는 경우가 많습니다." },
    { "id": "4fj9TKzzAyA", "title": "25 03 05, p 14070, 14강, index.html 을 src 폴더로 이동, 민감한 정보가 리포지터리에 들어가 버렸다." },
    { "id": "e3GHm6Rh8jg", "title": "25 03 05, p 14070, 15강, .gitignore 에 src/private.html 추가만으로는 src/private.html 이 사라지지 않는다." },
    { "id": "XDfT0Qique4", "title": "25 03 05, p 14070, 16강, src/private.html 제거, 안타깝게도 최종도커이미지에서도 제거됨" },
    { "id": "hgTfu-bNnS4", "title": "25 03 05, p 14070, 17강, src/private.html 의 내용을 담은 PRIVATE_HTML 시크릿 변수를 생성" },
    { "id": "_J2h5FhJ3r0", "title": "25 03 05, p 14070, 18강, 도커빌드 바로전 과정에서 no.html 이(가) 생기도록" },
    { "id": "4EuWK-PICZQ", "title": "25 03 05, p 14070, 19강, slog.gg 에서 GITHUB ACTIONS 활용하는 방법 설명" },
    { "id": "zaPCASIHThY", "title": "25 03 05, p 14070, 11_23_44" },
    { "id": "sq-9ihU71rU", "title": "25 03 05, p 14070, 11_29_19" },
    { "id": "BR2PLwOATRQ", "title": "25 03 05, p 14070, 11_33_27" },
    { "id": "K2xdb7q9-BM", "title": "25 03 05, p 14070, 11_38_02" },
    { "id": "WlQeu_hU58U", "title": "25 03 05, p 14070, 11_41_10" },
    { "id": "qdcy-oteXkI", "title": "25 03 05, p 14070, 12_08_08" },
    { "id": "zcJNVd4LYx4", "title": "25 03 05, p 14070, 12_24_50" },
    { "id": "PAdIIBe9TLM", "title": "25 03 05, p 14070, 12_40_26" },
    { "id": "kKGwrLs-Fi0", "title": "25 03 05, p 14070, 12_48_00" },
    { "id": "BenJoZJS_5g", "title": "25 03 05, p 14070, 14_02_35" },
    { "id": "-HhEZsrDWwg", "title": "25 03 05, p 14070, 14_11_09" },
    { "id": "urYi78HawtU", "title": "25 03 05, p 14070, 15_06_46" },
    { "id": "Rm9v_OxCfVw", "title": "25 03 05, p 14070, 15_21_46" },
    { "id": "WU-91MvzyyI", "title": "25 03 06, p 14071, 14강, fly deploy --remote-only, fly.io AccessToken, GITHUB ACTION 연동하여 무중단 CI/CD 구" },
    { "id": "toVP5H7wrKQ", "title": "25 03 05, p 14071, 15강, 단순한 코프링 프로젝트 생성" },
    { "id": "9yFcOOQPO5Q", "title": "25 03 05, p 14071, 16강, HomeController 와 테스트케이스 구현, 자동화된 CI/CD 환경에서는 자동화된 테스트가 필수" },
    { "id": "riwDA_cQ8wg", "title": "25 03 05, p 14071, 17강, Dockerfile 추가, 잘 되는지 테스트" },
    { "id": "_ETfIrc0t50", "title": "25 03 05, p 14071, 18강, fly launch 로 앱 생성 및 배포" },
    { "id": "XuaVZKX5yTs", "title": "25 03 05, p 14071, 19강, fly launch 를 하면 .github/workflows/fly-deploy.yml 파일이 자동으로 생성됨, FLY_API_TOKEN" },
    { "id": "s98irgtOv5Y", "title": "25 03 05, p 14071, 20강, FLY_API_TOKEN 시크릿 변수 생성한 후 다시 실행, 잘 됩니다." },
    { "id": "QkaM3koasC8", "title": "25 03 05, p 14071, 21강, debug 레벨의 로그는 운영환경에서 출력되지 않게 세팅하는게 맞다, println 대신 log.debug 를 이용하자." },
    { "id": "sY7LpdExWUM", "title": "25 03 05, p 14071, 22강, fly.io에 PostgreSQL 생성" },
    { "id": "Vyr389uRb-g", "title": "25 03 05, p 14071, 23강, 로컬에서 fly.io 에 있는 DB에 접속하는 방법" },
    { "id": "TZP7LgWNZ-E", "title": "25 03 05, p 14071, 24강, JPA 코프링 프로젝트 생성" },
    { "id": "nG1dHlMqh4k", "title": "25 03 05, p 14071, 25강, 개발모드, 테스트모드, 운영모드에 맞는 DB 설정, Post 엔티티 클래스 추가" },
    { "id": "n7jmFlKi4E8", "title": "25 03 05, p 14071, 26강, GET /, GET /api/v1/posts 구현, 샘플 글 2개 생성되도록 설정" },
    { "id": "FdiVUpDXfVs", "title": "25 03 05, p 14071, 27강, Dockerfile 생성, fly launch" },
    { "id": "7WemYWD-29s", "title": "25 03 05, p 14071, 28강, FLY_API_TOKEN 시크릿 변수 생성한 후 다시 실행, 잘 됩니다." },
    { "id": "wYDIbZGwZwg", "title": "25 03 05, p 14071, 29강, 만약에 postgres의 최소 스케일을 0으로 해놨다면 db가 꺼져있을 수 도 있습니다." },
    { "id": "F9dd_CWwAOs", "title": "25 03 05, p 14071, 30강, 도메인 구매는 어느 사이트를 이용하시던 크게 상관없습니다." },
    { "id": "0nz2pQjou94", "title": "25 03 05, p 14071, 31강, dnszi.com 에 가입 후 로그인, 구매한 도메인의 관리권한을 dnszi.com 에 위임" },
    { "id": "UQYvXeqicH4", "title": "25 03 05, p 14071, 32강, 프로젝트에 도메인 연결" },
    { "id": "P7yOEuuxmV8", "title": "25 03 05, p 14071, 33강, 프론트엔드 무중단 배포를 위해서 next.js 프로젝트 생성" },
    { "id": "vZudZhLXFTA", "title": "25 03 05, p 14071, 34강, GITHUB 계정으로 vercel 가입/로그인, 프로젝트 삭제하는 방법" },
    { "id": "B8Ooj1gc1Bs", "title": "25 03 05, p 14071, 35강, GITHUB REPOSITORY로 부터 프로젝트 생성하는 방법" },
    { "id": "dYnFPI9e07E", "title": "25 03 05, p 14071, 36강, 메인화면 변경 후 푸시, 자동으로 배포되는지 확인, 잘 됩니다." },
    { "id": "WjshIP2aIsM", "title": "25 03 05, p 14071, 37강, 도메인 연결" },
    { "id": "JNPmLDoQH1A", "title": "25 03 07, p 14071, 38강, 백/프론트 동시 배포를 위한 프로젝트 세팅" },
    { "id": "G8TjMjmlrKE", "title": "25 03 07, p 14071, 39강, 백, GET /api/v1/posts 구현" },
    { "id": "aLPAojJIRoE", "title": "25 03 07, p 14071, 40강, 프, Next.js 프로젝트 시작" },
    { "id": "97TsCswV354", "title": "25 03 07, p 14071, 42강, 백, 시큐리티 도입, CORS 허용" },
    { "id": "K9TK43imImw", "title": "25 03 07, p 14071, 43강, 백, API 테스트케이스 추가" },
    { "id": "0L0EV3iojms", "title": "25 03 07, p 14071, 44강, 백, 개발모드/운영모드에 따라서 그에 맞는 백엔드/프론트엔드 URL이 설정되도록" },
    { "id": "AtLJWAEXu1Q", "title": "25 03 07, p 14071, 45강, 프, 개발모드/운영모드에 따라서 그에 맞는 백엔드/프론트엔드 URL이 설정되도록" },
    { "id": "9JQwh2BsV1k", "title": "25 03 07, p 14071, 46강, 백, fly.io 에서 postgres 앱 생성" },
    { "id": "qUAQZcdZL9E", "title": "25 03 07, p 14071, 47강, 백, app_2025_03_07_prod DB 생성" },
    { "id": "sQI0YAhLfN0", "title": "25 03 07, p 14071, 48강, 백, .github/workflows/deploy.yml 생성, FLY_API_TOKEN 시크릿 변수 생성" },
    { "id": "UADGbosp9Bk", "title": "25 03 07, p 14071, 49강, 백, application-secret.yml 에 운영모드의 DB 비번 추가, APPLICATION_YML_SECRET 시크릿 변수 생성" },
    { "id": "b33J9SUff9w", "title": "25 03 07, p 14071, 50강, 백, 운영모드의 DB명을 수정 후 fly launch 로 앱 생성 및 배포" },
    { "id": "piJmOlVtT-0", "title": "25 03 07, p 14071, 52강, 백, api.app1.oa.gg 도메인 연결" },
    { "id": "n1EOM_g5adA", "title": "25 03 07, p 14071, 51강, 백, 메인 페이지 구현" },
    { "id": "bpJ4y6uBJCQ", "title": "25 03 07, p 14071, 16_40_17" },
    { "id": "odzu2paYBdU", "title": "25 03 07, p 14071, 16_43_11" },
    { "id": "h4SrHQdY5iI", "title": "25 03 10, p 14071, 55강, 백, 쿠키를 생성할 때 운영모드에서 공유가능한 쿠키를 생성" },
    { "id": "GPqzZDgtNJs", "title": "25 03 10, p 14071, 56강, 백, 백엔드 서버가 2대 이상일 때 파일저장에는 외부 스토리지가 필요하다." },
    { "id": "cOwC5BX7muc", "title": "25 03 10, p 14071, 57강, 백, `fly scale count 1` 을 통해서 파일 저장과 관련된 문제를 해결" },
    { "id": "Vg8mol4BIJw", "title": "25 03 10, p 14071, 58강, 백, 서버가 1대 더라도 여러가지 이유 때문에 볼륨은 필요하다. 볼륨 생성" },
    { "id": "LtoIh3TcK64", "title": "25 03 10, p 14071, 59강, 백, 생성된 볼륨을 연결" },
    { "id": "Ltn8AVieiqg", "title": "25 03 10, p 14071, 60강, 백, `fly ssh console -a jhs512-app-8 -C df` 명령으로 마운트가 잘 되었는지 확인가능" },
    { "id": "uV-sVA2X5lQ", "title": "25 03 10, p 14071, 61강, 백, 세션을 redis에 저장하기 위한 의존성 추가, 하지만 개발환경에 레디스가 없어서 실패" },
    { "id": "4xwCPFCOWTQ", "title": "25 03 10, p 14071, 62강, 백, 로컬에서는 redis 사용 안하도록하는 설정으로 성공" },
    { "id": "_5fEU8_vHpc", "title": "25 03 10, p 14071, 63강, 백, 로컬에서 redis 도커로 설치하여 성공" },
    { "id": "ZglRoqAHJ90", "title": "25 03 10, p 14071, 64강, 백, 로컬에서 embedded redis를 사용하여 성공" },
    { "id": "RY2LRAypUG0", "title": "25 03 10, p 14071, 65강, 백, fly redis create" },
    { "id": "d2gCQenYpGw", "title": "25 03 10, p 14071, 66강, 백, 운영환경에서 jhs512-redis-1 사용하도록 세팅" },
    { "id": "L7oO-PCmN54", "title": "25 03 10, p 14071, 67강, 백, 운영환경에서 jhs512-redis-1 를 사용하고 있는지 테스트" },
    { "id": "-PRdQNqSwX0", "title": "25 03 10, p 14071, 68강, 백, 자원해제" },
    { "id": "D_UuufNjkPA", "title": "25 03 10, p 14071, 69강, 프, 자원해제, DNSZI에서 도메인도 삭제" },
    { "id": "7Kk1th-cyzk", "title": "25 03 10, p 14076, 1강, 백/프, 프로젝트 세팅" },
    { "id": "PuHORSWC1E0", "title": "25 03 10, p 14076, 2강, 프, frontend-next 폴더에 최신 next.js 프로젝트 생성" },
    { "id": "kHVJhyHGLuU", "title": "25 03 11, p 14076, 3강, 프, 의존성 설치" },
    { "id": "IpVLdj4sMCc", "title": "25 03 11, p 14076, 4강, 프, 기존 설정 가져오기" },
    { "id": "UzDYG6RFXaY", "title": "25 03 11, p 14076, 5강, 프, src 가져오기, global.css 는 그대로 가져오지 않고 병합(중요)" },
    { "id": "BcWPbsJYAt0", "title": "25 03 11, p 14076, 6강, 프, 토스트를 써너(sonner)로 교체, 모든 타입스크립트 오류와 모든 린트 경고 해결" },
    { "id": "UFATP_tHxOI", "title": "25 03 11, p 14076, 7강, 프, html2canvas 를 html2canvas-pro 로 교체하여 문제해결" },
    { "id": "atlMnx6qES8", "title": "25 03 11, p 14076, 8강, 프, 썸네일 이미지안의 텍스트 폰트가 pretendard 로 적용 안되었던 문제 해결" },
    { "id": "WlfJIzraPfI", "title": "25 03 11, p 14076, 9강, 프, 써너의 폰트도 프리텐다드로 변경" },
    { "id": "2xe5Us7lDU0", "title": "25 03 11, p 14076, 10강, 프, 썸네일 이미지의 텍스트가 변경될 때만 썸네일 이미지 업로드" },
    { "id": "EGBvQvDpYMs", "title": "25 03 11, p 14076, 11강, 프, 각종 목록에서 제목이 너무 길어서 짤리는 문제를 줄바꿈으로 해결" },
    { "id": "34Z04bfunJQ", "title": "25 03 11, p 14076, 12강, 프, 기존 frontend 폴더 삭제, frontend-next 폴더의 이름을 frontend 로 교체" },
    { "id": "mJfZFdEb3jk", "title": "25 03 11, p 14076, 13강, 백, 쓸데없는 import 제거, 롬복 제거" },
    { "id": "5u8EC0CuByg", "title": "25 03 11, p 14077, 14_02_48" },
    { "id": "7yFZ8KRE_Fw", "title": "25 03 11, p 14077, 14_04_05" },
    { "id": "PRqxUcHcvDA", "title": "25 03 11, p 14077, 17_00_00" },
    { "id": "AcJtP8MUdw8", "title": "25 03 11, p 14077, 17_09_14" },
    { "id": "BHX4cWuWg5Y", "title": "25 03 11, p 14077, 17_14_48" },
    { "id": "JV-dNKBxm08", "title": "25 03 11, p 14077, 17_27_21" },
    { "id": "6lkQ2yGR8lI", "title": "25 03 11, p 14077, 17_28_55" },
    { "id": "Eg-Iipr4Do0", "title": "25 03 11, 14077, 12강, 백, `fly ssh console -a jhs512-app-8 -C df` 명령으로 마운트가 잘 되었는지 확인가능" },
    { "id": "KAzY8B7nDHU", "title": "25 03 11, 14077, 13강, 프, vercel에 프로젝트 생성" },
    { "id": "Hl7SwmVrNpM", "title": "25 03 12, 14077, 14강, 프, 환경변수파일 생성, 실수로 Promise 누락한 부분 고침" },
    { "id": "aeBX5UnIdis", "title": "25 03 12, 14077, 15강, 프, 도메인 연결" },
    { "id": "25LV03TEyaw", "title": "25 03 12, 14077, 16강, 백, 네이버/카카오 개발자 도구에서 실제 도메인 추가" },
    { "id": "_Uq-vTRCQvU", "title": "25 03 12, 14077, 17강, 백, 쿠키 생성할 때 도메인 지정하여 운영모드의 프론트와 백에서 쿠키공유 가능하도록" },
    { "id": "m4vTQZl7Xyw", "title": "25 03 12, 14077, 18강, 프, NextImage가 운영백엔드 도메인을 허용하도록" },
    { "id": "Yp_iBmJSFJk", "title": "25 03 12, 14077, 19강, 백, 운영환경에서 파일명이 한글이면 오류가 발생하기 때문에 originFileName 에 base64Encode 적용" },
    { "id": "j0UXNExLp5A", "title": "25 03 13, p 14080, 1강, AWS 계정생성" },
    { "id": "Cx6cKTlRjqs", "title": "25 03 13, p 14080, 2강, 테라폼 개요" },
    { "id": "Ts8qOILXUSk", "title": "25 03 13, p 14080, 3강, EC2 100개 생성하는 방식 비교 : AWS 콘솔 vs 테라폼" },
    { "id": "97bYF6wIHSU", "title": "25 03 13, p 14080, 4강, AWS는 다수의 서비스를 제공하고 그 중 계정에 관련된 서비스는 IAM 입니다. admin 계정 생성" },
    { "id": "LCZXzQ76BVM", "title": "25 03 13, p 14080, 5강, 루트계정의 별칭 생성, 별칭을 이용해서 admin IAM 계정 로그인" },
    { "id": "X1Wroc2vqjQ", "title": "25 03 13, p 14080, 6강, 권한과 정책" },
    { "id": "ASvc4nmkQ6A", "title": "25 03 13, p 14080, 7강, IAM 을 제외한 거의 모든 서비스는 특정 리전에 귀속됩니다." },
    { "id": "xIaf9Dk9ICA", "title": "25 03 13, p 14080, 8강, 글로벌 서비스(IAM, ROUTE 53 등)을 제외한 서비스의 주소(URL)는 ap-northeast-2(아시아 태평양(서울))으로 시작해" },
    { "id": "Bv7Uh4n-91g", "title": "25 03 13, p 14080, 9강, 하나의 리전은 여러개의 가용영역으로 구성된다 가용영역은 물리적으로 떨어져 있다." },
    { "id": "0Zpti5WhWGE", "title": "25 03 13, p 14080, 10강, 우리가 뭔가를 돌리려면 무조건 먼저 VPC를 만들고, VPC 안에 그것을 넣어야 한다." },
    { "id": "xMQ5zv53TRc", "title": "25 03 13, p 14080, 11강, 기본 VPC 제거" },
    { "id": "pLDZ2Kjgsd0", "title": "25 03 13, p 14080, 12강, 새 VPC 생성" },
    { "id": "Ckd1DoqF7l4", "title": "25 03 13, p 14080, 13강, 10.0.0.0/16 는 IP를 65,536개 쓸 수 있는 사설 네트워크라는 의미 입니다." },
    { "id": "ngbYxnVmEUc", "title": "25 03 13, p 14080, 14강,  AWS CLI 설치" },
    { "id": "zTfV6CfhkW8", "title": "25 03 13, p 14080, 15강, AWS CLI에 로그인하기 위해서 admin 계정의 엑세스 키 생성" },
    { "id": "-tXkhH6ZEng", "title": "25 03 13, p 14080, 16강, 테라폼 설치" },
    { "id": "VKCFrT4jaPo", "title": "25 03 13, p 14080, 17강, 테라폼 프로젝트 생성, 인텔리제이로 열기" },
    { "id": "9TE_VDVapS4", "title": "25 03 13, p 14080, 18강, 테라폼 프로젝트 푸시" },
    { "id": "vsCmJKExDiM", "title": "25 03 13, p 14080, 19강, 테라폼으로 서브넷 1(가용영역 a와 연결), 서브넷 2(가용영역 b와 연결) 생성" },
    { "id": "we98o88IF-A", "title": "25 03 13, p 14080, 20강, 요금폭탄을 피하려면 실습이 끝난 후 항상 terraform destroy 필수" },
    { "id": "YBOhYo1zlcI", "title": "25 03 13, p 14080, 21강, 인터넷 게이트웨이 생성, 각 서브넷과 연결" },
    { "id": "wOjK6WSpUy0", "title": "25 03 13, p 14080, 22강, 모든 것을 허용하는 보안그룹 생성, 추후 EC2에 연결하여 사용할 예정" },
    { "id": "hHO4JXj5XGc", "title": "25 03 13, p 14080, 23강, ec2 인스턴스 2개 추가, AmazonEC2RoleforSSM 정책과 AmazonS3FullAccess 정책이 설정된 권한과 연결" },
    { "id": "uCDitYQkitM", "title": "25 03 13, p 14080, 24강, EC2에 AmazonEC2RoleforSSM 정책과 AmazonS3FullAccess 정책을 연결한 이유" },
    { "id": "GhZSlaM134Y", "title": "25 03 13, p 14080, 25강, AWS 콘솔에서 쉽게 EC2 인스턴스에 접속하는 방법(SSM 방식)" },
    { "id": "QMdn9DsdgVM", "title": "25 03 14, p 13836, 09_08_56" },
    { "id": "kbpGVQD8bl8", "title": "25 03 14, p 14080, 26강, 스왑 파일 생성하여 가상 메모리 4GB 추가" },
    { "id": "s_pOcixi9Kw", "title": "25 03 14, p 14080, 27강, 가용영역별로 지원하는 OS와 인스턴스 유형이 다를 수 있습니다. ap-northeast-2b 에서는 t2.micro 가 안됨" },
    { "id": "yPEz87RD0CE", "title": "25 03 14, p 14080, 28강, ap-northeast-2b 에서는 t3.micro 가 가능하고 프리티어로 인정됩니다." },
    { "id": "TPHWX_0WV7Y", "title": "25 03 14, p 14080, 29강, SSD 용량을 12GB로 늘리고, EC2 인스턴스 초기화 스크립트로 도커설치/가상메모리 설정 자동화" },
    { "id": "L-kw-e6XfoU", "title": "25 03 14, p 14080, 30강, 스프링부트 프로젝트 1 생성" },
    { "id": "vxliOwG9pBY", "title": "25 03 14, p 14080, 31강, io.awspring.cloud:spring-cloud-aws-starter-s3:3.3.0 라이브러리를 통해서 s3 버킷 리스트 출력" },
    { "id": "mXzQb9uKXCY", "title": "25 03 14, p 14080, 32강, AWS 인증 정보를 찾는 우선순위" },
    { "id": "_udkJslb-g0", "title": "25 03 14, p 14080, 33강, EC2 인스턴스에서 직접 스프링부트 실행, IAM ROLE의 S3 접근권한이 잘 작동합니다." },
    { "id": "83kZS7pPusU", "title": "25 03 14, p 14080, 34강, Dockerfile 추가, 도커 빌드 과정에서 실행되는 테스트가 실패 : 해당 환경에서는 aws 인증정보가 없음" },
    { "id": "oh3oOU-Sews", "title": "25 03 14, p 14080, 35강, 도커 빌드 과정에서의 그래들 빌드는 테스트 없이 진행하도록 하여서 통과, doker push" },
    { "id": "NFUF963QWdA", "title": "25 03 14, p 14080, 36강, 서버에서 기존 스프링부트 프로세스 삭제, 도커 이미지로 실행" },
    { "id": "pKLLmYaQ_dQ", "title": "25 03 14, p 14080, 37강, S3Service 도입, 테스트 환경용 S3ServiceImpl 도 추가, S3를 이용할 수 없는 환경에서도 테스트가 성공" },
    { "id": "VaxoRnqur8U", "title": "25 03 14, p 14080, 38강, 도커 빌드, push, 서버에서 새로운 도커 이미지 실행" },
    { "id": "21k9oUZoiqI", "title": "25 03 14, p 14080, 39강, 도커 이미지 빌드, 도커 이미지 푸시를 자동화 하기" },
    { "id": "EG7q0-sdqjc", "title": "25 03 14, p 14080, 45강, https 활성화, http 로 접속해도 https 로 리다이렉트 하도록 설정" },
    { "id": "-eRiOwKV4wM", "title": "25 03 14, p 14080, 46강, NPM 콘솔 접속시에도 https 적용하기 위해서 npm.vpc-1-ec2-1.oa.gg 도메인에 A 레코드 설정" },
    { "id": "e4_kxpuaFRE", "title": "25 03 14, p 14080, 47강, NPM 콘솔 접속시에도 https 적용하기 위한 설정 마무리, npm 에서 npm.vpc-1-ec2-1.oa.gg 도메인에 대한 처리" },
    { "id": "H2xZzwJoZDw", "title": "25 03 17, p 14080, 48강, NPC의 대략적인 사용법, NCP와 Azure는 AWS와 상단히 유사합니다." },
    { "id": "_zc0xbZcJcI", "title": "25 03 17, p 14080, 49강, NPC 자원 해제 방법" },
    { "id": "larqdeDUB54", "title": "25 03 17, p 14080, 50강, nginx proxy manager, redis, mysql, mysql 설정까지 한방에 끝내는 테라폼 프로젝트" },
    { "id": "4T2pkzpBWIo", "title": "25 03 17, p 14080, 51강, 운영환경까지 고려한 스프링부트 프로젝트 생성" },
    { "id": "iMo7q2AD9bY", "title": "25 03 17, p 14080, 52강, MySQL에 대해서 개발, 운영, 테스트환경별 설정파일 세팅" },
    { "id": "5f0YHbzlQVo", "title": "25 03 17, p 14080, 53강, Redis에 대해서 개발, 운영, 테스트환경별 설정파일 세팅, 자동으로 admin 계정 생성되도록" },
    { "id": "8NqUr8ehOM8", "title": "25 03 17, p 14080, 54강, 자동으로 redis 캐시 데이터 생성" },
    { "id": "RATBDgf3l6Q", "title": "25 03 17, p 14080, 55강, GITHUB ACTION을 이용한 CI/CD, 하지만 app1 컨테이너를 common 네트워크에 연결하지 않아서 실패" },
    { "id": "rQUmEqZInuI", "title": "25 03 17, p 14080, 56강, app1 컨테이너를 common 네트워크에 연결하여 성공" },
    { "id": "NSKCrLznbgI", "title": "25 03 17, p 14080, 57강, CI/CD 잘 되는지 테스트, 메인 페이지에 전체 회원수 출력" },
    { "id": "twY07YvOhBE", "title": "25 03 17, p 14080, 58강, api.glog.oa.gg 도메인 연결을 위한 작업" },
    { "id": "KDrQI0Kh4N8", "title": "25 03 17, p 14080, 59강, https 활성화를 위한 작업" },
    { "id": "6LP-9CG_mT8", "title": "25 03 17, p 14080, 60강, deploy.yml 에서 EC2 INSTANCE ID 를 하드코딩하지 않는 방식으로 수정(더 유연해 짐)" },
    { "id": "N4o-Q7LIsQo", "title": "25 03 17, p 14080, 61강, AMI를 하드코딩하지 않고 검색해서 사용" },
    { "id": "1rwockl0XdA", "title": "25 03 17, p 14080, 62강, jhs512 라는 GITHUB 사용자 하드코딩을 변수로 변경" },
    { "id": "EpZJLFhR3II", "title": "25 03 17, p 14081, 1강, 기존 프로젝트 클론" },
    { "id": "lU1DIpUKzN0", "title": "25 03 17, p 14081, 2강, application-secret.yml 복원, 스프링부트 버전 업데이트, 백/프론트 프로젝트 세팅" },
    { "id": "aMX1CG-PvUo", "title": "25 03 17, p 14081, 3강, 운영환경에서 PostgreSQL이 아닌 MySQL 사용하도록 설정" },
    { "id": "AS-gL06-LtE", "title": "25 03 18, p 14081, 4강, 수동으로 인프라 자원 제거방법, infra 폴더에 테라폼 스크립트 추가 및 실행" },
    { "id": "YQYZWFr1EZc", "title": "25 03 18, p 14081, 5강, .github/workflows/deploy.yml 파일내용을 fly.io 방식에서 aws 방식으로 교체" },
    { "id": "jZd8dHXnOEs", "title": "25 03 18, p 14081, 6강, 홈 컨트롤러의 main 함수 변경 작업 후 PUSH 만으로 CI/CD가 완벽히 돌아가는지 테스트, 잘 됩니다." },
    { "id": "VG-9V94dhB0", "title": "25 03 18, p 14081, 7강, DNSZI 에서 A 레코드 작업, NPM을 통해서 리버스 프록시/HTTPS 설정" },
    { "id": "qjMfmZAq73c", "title": "25 03 18, p 14081, 8강, vercel에 프로젝트 생성" },
    { "id": "YP-YukFw8bI", "title": "25 03 18, p 14081, 9강, 도메인 연결" },
    { "id": "DkE79Fs61XQ", "title": "25 03 18, p 14081, 10강, 도커 컨테이너가 교체되어도 사용자가 업로드한 파일이 유지되도록 마운트 설정 추가" },
    { "id": "IssLmWUwQno", "title": "25 03 17, p 13836, 10강, NPC의 대략적인 사용법, NCP와 Azure는 AWS와 상단히 유사합니다." },
    { "id": "fugxfE0XdE8", "title": "25 03 19, p 14082, 11_21_23" },
    { "id": "NHecwrOSbW8", "title": "25 03 19, p 14082, 11_21_46" },
    { "id": "NnVDt6iKAkU", "title": "25 03 19, p 14082, 11_22_37" },
    { "id": "KMVixxXyVeo", "title": "25 03 19, p 14082, 11_24_43" },
    { "id": "wRv9g097Uhw", "title": "25 03 19, p 14082, 11_31_22" },
    { "id": "rGClc2a72T8", "title": "25 03 19, p 14082, 11_40_56" },
    { "id": "nAV4Ea-cFBI", "title": "25 03 19, p 14082, 12_03_33" },
    { "id": "rCXOXYfYT1E", "title": "25 03 19, p 14082, 12_07_03" },
    { "id": "WrO3V62zjJU", "title": "25 03 19, p 14082, 12_17_30" },
    { "id": "PtEA6ps-mm0", "title": "25 03 19, p 14082, 12_30_42" },
    { "id": "oPDxnjLT3Ak", "title": "25 03 19, p 14082, 12_38_20" },
    { "id": "hcwTeFNMF5Y", "title": "25 03 19, p 14082, 15_14_42" },
    { "id": "I_NtIQhHEwQ", "title": "25 03 19, p 14082, 15_22_14" },
    { "id": "8RmGcPkCjRE", "title": "25 03 19, p 14082, 15_26_37" },
    { "id": "78Rizzsgzuk", "title": "25 03 21, p 14081, 11강, 모든 AWS 자원 삭제 후 HA PROXY 까지 포함하여 자원 재생성, deploy.yml 에서 ha-proxy 적용" },
    { "id": "K4jqxaDyrEc", "title": "24 12 05, p 13848, 14강, 수정모드 토글" },
    { "id": "AcL5TUDiJLw", "title": "24 12 05, p 13869, 17강, selectBoolean 2nd 함수 꼼수로 구현" },
    { "id": "JIsnmR-Zivk", "title": "24 12 05, p 13869, 18강, selectBoolean 3rd 함수 구현" },
    { "id": "64kqrOuQUGw", "title": "24 12 05, p 13869, 19강, SimpleDb 클래스의 run 메서드와 selectBoolean 메서드의 중복을 해결" },
    { "id": "xMuOg_IyWpo", "title": "24 12 05, p 13869, 20강, selectString 을 실제로 구현" },
    { "id": "O6vK4k-3x2U", "title": "24 12 05, p 13869, 21강, 리턴타입 제너릭 처리로 _run 함수 호출 마다 필요로 했던 형변환을 안해도 됨" },
    { "id": "BKSpwM9T7UA", "title": "24 12 05, p 13869, 22강, selectLong 을 실제로 구현" },
    { "id": "DeZyVG2cYmU", "title": "24 12 05, p 13869, 23강, selectDatetime 을 실제로 구현" },
    { "id": "bFxn-bNioAA", "title": "24 12 05, p 13869, 24강, selectRow 를 실제로 구현" },
    { "id": "nmOTPlKeFgw", "title": "24 12 05, p 13869, 25강, selectRow 와 관련된 코드를 범용적으로 변경, 이제는 article 테이블 뿐 아니라 다른 테이블에도 적용 가능" },
    { "id": "gGEky92AwLU", "title": "24 12 05, p 13869, 26강, selectRows 를 실제로 구현" },
    { "id": "3jyq9sVF_zU", "title": "24 12 05, p 13869, 27강, parseResultSetToMap 도입하여 row 를 Map 으로 변환하는 코드가 중복되는 것을 막음" },
    { "id": "YU_9HOWVzig", "title": "24 12 05, p 13869, 30강, update 를 실제로 구현" },
    { "id": "qlXT97dci3I", "title": "24 12 05, p 13869, 31강, insert 를 실제로 구현" },
    { "id": "2CTRFBTARUQ", "title": "24 12 05, p 13869, 32강, 운영모드가 아닐 때(개발모드/테스트모드 일 때) simpleDb 에 의해 실행되는 SQL이 출력" },
    { "id": "bknj20y8vjE", "title": "24 12 05, p 13869, 33강, SQL 출력할 때 파라미터가 바인드" },
    { "id": "lbcHzKId8hU", "title": "24 12 05, p 13869, 34강, SimpleDb 클래스 리팩토링" },
    { "id": "ZMzlsgPoaNg", "title": "24 12 05, p 13869, 37강, selectLongs 구현" },
    { "id": "LquFPDv0yJc", "title": "24 12 05, p 13869, 38강, selectRows(Article.class) 구현" },
    { "id": "sS-8Fp3qACw", "title": "24 12 05, p 13869, 39강, Sql 클래스에서 Article 제거, 조금 더 범용적인 로직을 이용해서 맵을 객체로 변환" },
    { "id": "9LvaZBfR4eo", "title": "24 12 05, p 13869, 40강, 맵을 객체로 바꾸는 작업을 전문 라이브러리인 잭슨을 이용해서 수행" },
    { "id": "Ttuc6O0vSjE", "title": "24 12 05, p 13869, 41강, Article 클래스가 39강 작업 이후로는 더 이상 main 에 있을 필요가 없기 때문에 test 로 옮김" },
    { "id": "gTQqUDAdOPQ", "title": "24 12 05, p 13869, 42강, 데이터를 변환하는 로직은 Sql 클래스가 수행할게 아니라는 생각에 SimpleDb 로 로직 이동" },
    { "id": "23nS7XtvUXY", "title": "24 12 05, p 13869, 43강, selectRow(Article.class) 구현" },
    { "id": "5NFj_i-yv6g", "title": "24 12 06, p 13869, 45강, 보통 쓰레드가 다르면 사로 다른 커넥션을 이용하는게 보통입니다. 즉 쓰레드당 커넥션 1개라고 생각하시면 됩니다." },
    { "id": "SX9TMswQxoA", "title": "24 12 06, p 13867, 4강, 제너럴 로그 켜고, 로그 확인하는 방법" },
    { "id": "SCdsYYi81IU", "title": "24 12 06, p 13867, 4강, 제너럴 로그 끄는 방법" },
    { "id": "gck7a7m6hf0", "title": "24 12 06, p 13869, 46강, 이전 강의(44강)의 작업이 잘 되었는지 확인하기 위해서 MySQL 제너럴 로그 확인" },
    { "id": "3uNczQKohZw", "title": "24 12 06, p 13869, 47강, 트랜잭션, 롤백 구현" },
    { "id": "NX-zDMSI4rk", "title": "24 12 06, p 13869, 48강, 트랜잭션, 커밋 구현" },
    { "id": "Z6BnmlWUOKU", "title": "24 12 06, p 13859, 54강, slog.gg/p/13869 수업의 결과물인 SimpleDb 객체를 사용하여 파일 대신 DB에 명언을 저장하기로 결정" },
    { "id": "J350yJRShkk", "title": "24 12 06, p 13859, 55강, simpleDb 프로젝트에서 필요한 소스코드만 가져와서 우리 프로젝트 상황에 맞게 적용" },
    { "id": "IgC5vZe9uh8", "title": "24 12 06, p 13859, 56강, dropTable, createTable, truncateTable" },
    { "id": "3a1oeNdv0sk", "title": "24 12 06, p 13859, 57강, save, findById" },
    { "id": "1_YmoOkh5VQ", "title": "24 12 06, p 13859, 58강, deleteById" },
    { "id": "WgtIzvD9svI", "title": "24 12 06, p 13859, 59강, findAll" },
    { "id": "DrI0sEh6f_w", "title": "24 12 06, p 13859, 59강, save(update)" },
    { "id": "T5tL2mIZES4", "title": "24 12 06, p 13859, 60강, archive" },
    { "id": "lVK8sra1He8", "title": "24 12 06, p 13859, 61강, count" },
    { "id": "ugUpTwXjsNY", "title": "24 12 06, p 13859, 61강, pageable" },
    { "id": "qpFBP5aAZQE", "title": "24 12 06, p 13859, 62강, count with search" },
    { "id": "N2I2H-dmsz0", "title": "24 12 06, p 13859, 63강, pageable with search" },
    { "id": "2jfTj7R7_44", "title": "24 12 06, p 13859, 64강, WiseSayingDbRepository 에 WiseSayingRepository 인터페이스 구현" },
    { "id": "aVK7N6B_kHw", "title": "24 12 06, p 13859, 65강, FileRepository 대신 DbRepository 로 변경" },
    { "id": "-LTiW7rQ89Q", "title": "24 12 06, p 13859, 66강, 실제로 앱 실행해보면서 SQL이 적절히 잘 실행되는지 확인" },
    { "id": "ZIO_TQy3MBQ", "title": "24 12 06, p 13858, 7강, 곱하기" },
    { "id": "CWROyCjAAN0", "title": "24 12 06, p 13858, 6강, 다항식 더하기" },
    { "id": "Oz0LYjxY8OI", "title": "24 12 06, p 13858, 8강, 더하기와 곱하기가 섞여있는 식" },
    { "id": "ZBh8XIdVeaw", "title": "24 12 06, p 13858, 9강, 쓸데없는 괄호 제거" },
    { "id": "9NCfxEHK4qw", "title": "24 12 06, p 13858, 10강, 괄호와 섞여있는 식, `+` 기준으로 식을 2등분" },
    { "id": "BaXOfzNeu_8", "title": "24 12 06, p 13858, 11강, 괄호와 섞여있는 식, `+` 기준으로 식을 2등분하고 안되면 `*` 기준으로 식을 2등분" },
    { "id": "_0kd0x_VZCM", "title": "24 12 06, p 13858, 12강, 식이 어떻게 변환되고 나눠지는지, 또 어떠한 재귀구조를 가지는지 파악하기 위한 디버그 모드 도입" },
    { "id": "o7XElqnTTTk", "title": "24 12 06, p 13858, 13강, 각 재귀함수가 끝날 때 어떠한 값이 리턴되는지 출력(디버그 모드 에서만)" },
    { "id": "kMkv5ZXhQrM", "title": "24 12 06, p 13858, 14강, 음수 괄호를 양수 괄호로 치환하여 식을 단순화" },
    { "id": "pRsIhmodBt0", "title": "24 12 06, p 13858, 15강, 불필요한 외곽괄호 제거로직의 버그 수정" },
    { "id": "FOqxOfltqaE", "title": "24 12 10, p 13885, 1강, JSB 공부하는 방법" },
    { "id": "sN0ybxmVzdg", "title": "24 12 10, p 13885, 2강, 스프링 이니셜라이저에서 프로젝트 생성을 위한 세팅" },
    { "id": "V5CUFFwnUGs", "title": "24 12 10, p 13885, 3강, GITHUB 저장소 생성" },
    { "id": "kF7WnzdAzIM", "title": "24 12 10, p 13885, 4강, 스프링 이니셜라이저에서 세팅된 프로젝트 다운로드 후 압축해제, 인텔리제이로 열기" },
    { "id": "C9_2S_abBaQ", "title": "24 12 10, p 13885, 5강, 스프링부트 프로젝트를 인텔리제이로 연 후 로딩이 완료될 때 까지 대기 후 세팅" },
    { "id": "q68VEbZR7CQ", "title": "24 12 10, p 153, 34강, 선행자를 포함한 모든 훈련생들은 JSB의 2장, 3장(추가기능 구현 포함)을 완료해주세요." },
    { "id": "CVK5ca7_mF4", "title": "24 12 10, p 13885, 6강, SBB 프로젝트를 GITHUB에 푸시" },
    { "id": "fZU2K5DEeq8", "title": "24 12 10, p 13885, 7강, 스프링부트 개요" },
    { "id": "mjXkPEi44OE", "title": "24 12 10, p 13885, 9강, @Controller 로 컨트롤러 만들고 @GetMapping 액션 메서드 정의하기" },
    { "id": "fyQxiuT3BbI", "title": "24 12 10, p 13885, 8강, 스프링부트의 주요 폴더와 파일설명" },
    { "id": "Erk8XlabsmM", "title": "24 12 10, p 13885, 10강, 액션 메서드와 달리 일반 메서드는 이름이 가독성있어야 하고 고객이 직접 호출할 수 없다." },
    { "id": "AWkPnS4qQhk", "title": "24 12 10, p 13885, 11강, @ResponseBody 를 사용하여 액션메서드의 리턴값이 응답의 본문이 되도록 설정" },
    { "id": "NRaEg1vaPL8", "title": "24 12 10, p 13885, 12강, h2 드라이버 의존성 추가, h2 설정, h2-console 접속" },
    { "id": "ewdn3liZz88", "title": "24 12 10, p 13886, 10강, 브라우저에는 자바가 없기 때문에 자바의 다양한 자료형이 JSON 이라는 규격으로 변형됨" },
    { "id": "Tnw7WrdJaVQ", "title": "24 12 10, p 13886, 1강, 스프링 이니셜라이저에서 프로젝트 생성 후 인텔리제이로 열기" },
    { "id": "ljjsemfKxEc", "title": "24 12 10, p 13886, 3강, 인텔리제이 세팅 후 실행" },
    { "id": "ba63z-mN6i4", "title": "24 12 10, p 13886, 4강, 특정 포트 사용중인 프로세스 킬" },
    { "id": "4U91xxjQMQs", "title": "24 12 10, p 13886, 5강, 스프링부트는 프레임워크이기 때문에 초심자는 원리보다 사용법에 집중해주세요." },
    { "id": "gL7luRu9trg", "title": "24 12 10, p 13886, 6강, GIT PUSH" },
    { "id": "sBQr8rbFTHI", "title": "24 12 10, p 13886, 7강, HomeController, @Controller, @GetMapping, @ResponseBody" },
    { "id": "g8qQT4YNhdk", "title": "24 12 10, p 13886, 8강, GET /about, 매핑과 컨트롤러 객체생성 등과 같은 뻔한 일들은 프레임워크가 알아서 해준다." },
    { "id": "RrnKfwDYbCs", "title": "24 12 10, p 13886, 9강, GET /ageUp, 컨트롤러 객체는 스프링부트 시작시에 딱 한번 만들어진다." },
    { "id": "tEkB-s2eWRQ", "title": "24 12 10, p 13886, 11강, JSON Viewer 설치" },
    { "id": "qE0s5quJHBs", "title": "24 12 10, p 13886, 13강, GET /articleList, GET /articleMap" },
    { "id": "aFVpY8n9xLA", "title": "24 12 10, p 13886, 12강, Article 객체를 JSON 으로 변환" },
    { "id": "g9jVvFxukls", "title": "24 12 10, p 13886, 14강, 고객이 리액트라면 JSON 데이터로 응답하고, 사람이라면 HTML 데이터로 응답하는 것이 보통이다." },
    { "id": "p0A_wrR5UK4", "title": "24 12 10, p 13886, 15강, WiseSayingController, WiseSayingService, GET /wiseSayings" },
    { "id": "AjDf2iKx1vE", "title": "24 12 10, p 13886, 16강, @Component, @Service, @Autowired, @RestController, @RequriedArgsConstructor" },
    { "id": "9BXG1YSxcLg", "title": "24 12 10, p 13886, 17강, 명언 등록, @RequestParam, GET /wiseSayings/write?content=내용&author=작가" },
    { "id": "1ROaxyYAL6o", "title": "24 12 11, p 13885, 14강, ddl-auto=update 설정 때문에 엔티티 클래스의 구조대로 테이블이 생성/변경, Question 엔티티클래스 추가" },
    { "id": "U3x-RlEvt54", "title": "24 12 11, p 13885, 13강, 가장 유명한 DB ORM 라이브러리인 JPA 의존성 추가, ddl-auto=update 설정" },
    { "id": "ydLsHQ6d1wA", "title": "24 12 11, p 13886, 19강, 명언 삭제, GET /wiseSayings/{id}/delete" },
    { "id": "YymAZcNcAjA", "title": "24 12 11, p 13886, 18강, 명언 단건조회, @PathVariable, GET /wiseSayings/{id}" },
    { "id": "SrVB-fXFpO8", "title": "24 12 11, p 13886, 22강, 직접 만든 클래스가 아니라면 @Bean 을 통해서 스프링 IoC 컨테이너에 등록해줘야 한다." },
    { "id": "V13PvQzQsjk", "title": "24 12 11, p 13886, 21강, 명언 수정, GET /wiseSayings/{id}/modify?author=작가&content=내용" },
    { "id": "FmaPCRZX0cc", "title": "24 12 11, p 13886, 20강, 명언 리포지터리 도입, 이제 단순 데이터관련 작업은 리포지터리에서 해주면 된다." },
    { "id": "V-BRlTnBOpw", "title": "24 12 11, p 13886, 23강, 클래스 레벨에 @RequestMapping 을 붙이면 메서드 레벨에서 반복되는 접두어를 생략 가능" },
    { "id": "LRkDH-241oE", "title": "24 12 11, p 13886, 24강, 빈 이름은 중복되면 안된다." },
    { "id": "tKA10E28iqo", "title": "24 12 11, p 13886, 25강, ApplicationRunner 타입의 빈은 스프링부트가 해당 빈을 수집하자마자 바로 실행한다." },
    { "id": "d5WE_PNHxXs", "title": "24 12 11, p 13888, 2강, 프로젝트 생성 후 GIT PUSH" },
    { "id": "j8Ah9XKcOB8", "title": "24 12 11, p 13888, 3강, datasource 설정, 콘솔출력 컬러풀하게 설정, 1부 : 설정" },
    { "id": "U_QYig1ilNw", "title": "24 12 11, p 13888, 3강, datasource 설정, 콘솔출력 컬러풀하게 설정, 2부 : .gitignore 에 db 파일 추가" },
    { "id": "x-FZG26aNXI", "title": "24 12 11, p 13888, 4강, ddl-auto: update 로 설정하여 엔티티 클래스의 변경사항이 바로바로 DB에 반영됨" },
    { "id": "sBK-eaLcznY", "title": "24 12 11, p 13888, 5강, PostRepository, ApplicationRunner 로 샘플 Post 데이터 생성되도록" },
    { "id": "ijvt3hwls2I", "title": "24 12 11, p 13888, 6강, 샘플 글이 이미 존재한다면 더 이상 만들지 않도록" },
    { "id": "ZgfJtH-SEo8", "title": "24 12 11, p 13888, 7강, JPA에 의해서 실행되는 쿼리와 그것의 결과를 자세히 출력하도록" },
    { "id": "iEoq9pcGYjg", "title": "24 12 11, p 13888, 8강, 엔티티 클래스에 @Builder 를 붙이려면 @AllArgsConstructor, @NoArgsConstructor 가 필수" },
    { "id": "XqVgO1RNQ0U", "title": "24 12 11, p 13888, 10강, JPA 는 save 메서드에서 실제로 바뀐게 없다면 UPDATE 쿼리를 실행하지 않는다." },
    { "id": "xzdywDec70E", "title": "24 12 11, p 13888, 11강, 하나의 @Transactional 내에서 SELECT 로 조회된 엔티티 객체의 수정은 자동으로 UPDATE 를 통해서 DB에 반영" },
    { "id": "noRPE2Y3eWg", "title": "24 12 11, p 13888, 9강, @CreatedDate 와 @LastModifiedDate 로 날짜 관련 필드가 자동으로 채워지도록" },
    { "id": "JCIAnHVqIik", "title": "24 12 11, p 153, 35강, 점프 투 스프링부트 2장, 3장을 완료하신 후 PR 해주세요." },
    { "id": "d2ERRlZy1Qo", "title": "24 12 11, p 153, 36강, 점프 투 스프링부트 3장 14섹션의 SBB 추가 기능 구현하기를 모두 완료하신 후 PR 해주세요." },
    { "id": "8SWjJvZ9QBc", "title": "24 12 12, p 13888, 16강, 강사의 리포지터리를 기반으로 프로젝트를 한방에 만드는 방법, 추가로 강사의 최신소스코드 반영하는 방법" },
    { "id": "eTjOlMD4KJU", "title": "24 12 12, p 13888, 12강, ORM 개념" },
    { "id": "DpmDo5V8s1Y", "title": "24 12 12, p 13888, 13강, 영속성 컨텍스트에는 엔티티 객체의 복사본이 있고, 그걸 기반으로 끝날때 더티체킹을 통해서 UPDATE 쿼리가 발생" },
    { "id": "EPIienfs0Zc", "title": "24 12 12, p 13888, 14강, MySQL 드라이버로 변경 후 트랜잭션 실험, 다시 H2 드라이버로 변경" },
    { "id": "rwXK-JfLB50", "title": "24 12 12, p 13888, 15강, postRepository.delete" },
    { "id": "TaxP_r1LhOw", "title": "[24 12 11, p 153, 37강, 수업페이지 최상단에 날짜별 링크 추가했습니다." },
    { "id": "_YyVnfcbSAQ", "title": "24 12 11, p 153, 38강, 강사와 FT의 간단한 자기소개를 진행하겠습니다." },
    { "id": "hnv_ikHgmw0", "title": "24 12 11, p 153, 39강, 코드리뷰를 받으신 분은 다른 분들도 코드리뷰 2명이상 해주세요." },
    { "id": "VowVIykC-NI", "title": "24 12 12, p 13888, 17강, domain 패키지 구조 설명, domain.post.comment.entity.PostComment.java" },
    { "id": "aRgGYwwaD5A", "title": "24 12 12, p 13888, 18강, 댓글(PostComment) 엔티티 클래스 정의, 샘플 댓글 3개 생성" },
    { "id": "IICwpUzT0i4", "title": "24 12 12, p 13888, 19강, Spring Data JPA를 사용할 때 실제 DB의 구조적 한계에 얽매이지 말고 객체지향적으로 사용하면 된다, JPA가 알아서 해결해줌" },
    { "id": "PkEm6Fn2VhA", "title": "24 12 12, p 13888, 20강, PostComment 클래스에서 조금 더 객체지향 적인 코드로 변경(long postId → Post post), @ManyToOne" },
    { "id": "sy5q2W9pxCo", "title": "24 12 12, p 13888, 21강, @ManyToOne 필드는 기본적으로 EAGER 로 동작한다. 즉 JOIN 이 발생한다." },
    { "id": "2nTXdv9SpBs", "title": "24 12 12, p 13888, 22강, @ManyToOne(fetch = FetchType.LAZY) 로 하면 필요할 만큼의 데이터만 가져오게 된다." },
    { "id": "07IX9auM-qM", "title": "24 12 12, p 13888, 23강, 객체가 Lazy하게 로딩된다는 의미" },
    { "id": "NfsKP9Hor-k", "title": "24 12 12, p 13888, 24강, 엔티티 객체의 LAZY 변수에는 프록시 객체가 연결된다." },
    { "id": "hX9a4tu3KLE", "title": "24 12 12, p 13888, 25강, @Transactional 을 붙인 메서드를 가진 빈은 가짜(프록시) 객체로 조종하게 되고 그럴 수밖에 없다." },
    { "id": "cJyKrXBf5mc", "title": "24 12 12, p 13888, 26강, @Transactional 붙은 메서드라도 this 를 통한 호출은 트랜잭션이 작동하지 않는다." },
    { "id": "OS4aQf_FzAI", "title": "24 12 12, p 13888, 27강, @Transactional 붙은 메서드를 내부 호출 하려면 self 를 통해서 호출해야 한다." },
    { "id": "d9FbO-LfSnE", "title": "24 12 12, p 13888, 28강, self 의 진정한 목적 : @Transactional 붙은 메서드를 내부적으로 호출" },
    { "id": "9sxGH49b5fM", "title": "24 12 13, p 13888, 29강, JPA 는 우리에게 객체지향적인 방법으로 DB를 다룰 수 있게 해준다." },
    { "id": "abpsYp80nLY", "title": "24 12 13, p 13888, 30강, 조금 더 객체지향적인 방법으로 댓글을 추가하도록 변경" },
    { "id": "FzJDO5QOGgs", "title": "24 12 13, p 13888, 31강, OneToMany 를 통한 DB 작업은 해당 트랜잭션이 끝날 때 반영된다." },
    { "id": "GCqMMA_h9YI", "title": "24 12 13, p 13888, 32강, postRepository.save(post); 를 하는 순간 영속성 컨텍스트의 스냅샷이 생성된다." },
    { "id": "vACA9KvPoIs", "title": "24 12 13, p 13888, 33강, @OneToMany 와 @ManyToOne 의 차이점, 2부" },
    { "id": "QqgIEGCTBqc", "title": "24 12 13, p 13888, 33강, @OneToMany 와 @ManyToOne 의 차이점, 1부" },
    { "id": "ADXrGjSYF5M", "title": "24 12 13, p 13888, 34강, OneToMany 를 활용하면 관련된 데이터 SELECT 를 쉽게할 수 있다, 1부 : 작업" },
    { "id": "rf0zaR5BLUs", "title": "24 12 13, p 13888, 35강, CascadeType.ALL 의 의미" },
    { "id": "U7L8vS7l7DA", "title": "24 12 13, p 13888, 36강, 부모가 이미 영속(PERSIST)상태 이고 자식들 중 비영속 상태가 있다면 해당 자식들을 생성(INSERT) 한다." },
    { "id": "fjV3Wu3Y_fU", "title": "24 12 13, p 13888, 37강, OneToMany 필드가 List 라면 추가(INSERT) 전에 SELECT 가 필요없다." },
    { "id": "YTLk83nokEU", "title": "24 12 13, p 13888, 38강, PERSIST == 자식 엔티티들 INSERT, 더티체킹 == 엔티티들 UPDATE" },
    { "id": "zFyG_fYYleg", "title": "24 12 13, p 13888, 39강, 외래키 제약이 있다면 글을 삭제할 때는 먼저 관련 댓글들 먼저 삭제해야 한다." },
    { "id": "kq7I7A8QkKA", "title": "24 12 13, p 13888, 40강, orphanRemoval = true 를 통해서 comments 리스트에서 제거된 객체를 DB 에서도 제거" },
    { "id": "w1aLqn56AqQ", "title": "24 12 13, p 13888, 43강, 언제 특정 도메인을 oneToMany 만으로 관리해도 될까?" },
    { "id": "2NlT9KH69Jc", "title": "24 12 13, p 13888, 41강, 지금 상황에 꼭 필요하지는 않지만, 스펙이 동일한 두 객체의 동등성을 체크를 위해서 equals, hashCode 를 재정의해야 한다." },
    { "id": "YSEuyBleSRA", "title": "24 12 16, p 13885, 15강, Answer 엔티티 클래스 추가, Question 엔티티 클래스와의 관계 설정, @ManyToOne, @OneToMany" },
    { "id": "ltDpaezX4p4", "title": "24 12 13, p 13888, 42강, 롬복을 통해서 equals, hashCode 를 재정의하는 방법" },
    { "id": "o354z243k3Q", "title": "24 12 16, p 13888, 44강, 파일 DB는 2개 이상의 프로세스에서 동시에 접근할 수 없다." },
    { "id": "Y9TUE8SA6Nk", "title": "24 12 16, p 13888, 45강, 기본적으로는 dev 모드, 테스트 시에는 test 모드가 되도록 설정, 작업" },
    { "id": "x2ftEKiWmg0", "title": "24 12 16, p 13888, 45강, 기본적으로는 dev 모드, 테스트 시에는 test 모드가 되도록 설정, 정리" },
    { "id": "OFtx3vsnioA", "title": "24 12 16, p 13888, 46강, PostServiceTest 에서 글 작성하는 테스트케이스 추가" },
    { "id": "5wxShVn4JnM", "title": "24 12 16, p 13888, 47강, @Transactional과 @Rollback을 추가하여 롤백 되도록, @Rollback은 생략가능" },
    { "id": "N2LRJDAaFyc", "title": "24 12 16, p 13888, 48강, findAll, findById, findByTitle 테스트" },
    { "id": "3AJhrS84qD8", "title": "24 12 16, p 13888, 49강, findByTitleAndContent, LIMIT" },
    { "id": "9nY6q77Lkm4", "title": "24 12 16, p 13888, 50강, Pageable(페이징 정보), Page(페이징 결과)를 도입하여 더욱 복잡한 SQL 수행" },
    { "id": "DpHtnyP_aIU", "title": "24 12 16, p 13888, 51강, 샘플 회원이 5명 생기도록" },
    { "id": "JZbpqdD_uhc", "title": "24 12 16, p 13888, 52강, 글 쓰기, 댓글 쓰기에 작성자 추가" },
    { "id": "l2gvFSYFtaU", "title": "24 12 16, p 13888, 53강, 테스트 케이스에서 글 작성할 때도 작성자 추가" },
    { "id": "g6bQMJIPw3w", "title": "24 12 16, p 13888, 55강, findByCommentsAuthorNickname, LEFT JOIN 발생" },
    { "id": "QtiYgtzBMzg", "title": "24 12 16, p 13888, 54강, findByAuthorNickname, LEFT JOIN 발생" },
    { "id": "-A7Nu0C4B8Q", "title": "24 12 16, p 13888, 56강, BaseEntity 를 상속받아서 엔티티 클래스의 중복을 제거" },
    { "id": "s_n1BzVcP4k", "title": "24 12 16, p 13888, 57강, PostTag 추가, PostTag 에는 날자 필드가 없도록" },
    { "id": "Z0v8H9p9E4E", "title": "24 12 17, p 13888, 58강, PostTag가 중복생성되지 않도록 처리" },
    { "id": "6jJh_S8WIxU", "title": "24 12 17, p 13888, 59강, tags 를 Set 으로 변경, PostTag 에 equals, hashCode 재정의" },
    { "id": "UciiktNxaiA", "title": "24 12 17, p 13888, 60강, PostTag 에 id 필드 제거, @IdClass 추가하여 복합키 처리" },
    { "id": "LOXVbwjrixM", "title": "24 12 17, p 13888, 61강, 테스트가 끝나면 영속성을 유지할 필요가 없으니 파일DB모드 보다 속도가 훨씬 더 빠른 메모리DB 모드로 변경" },
    { "id": "TZHumU9w8uU", "title": "24 12 17, p 13899, 2강, GET postswrite, 글 쓰기 폼" },
    { "id": "hkWGor_ndoM", "title": "24 12 17, p 13899, 3강, GET postsdoWrite, 글 쓰기 처리" },
    { "id": "ExoJbNbIAFM", "title": "24 12 17, p 13899, 4강, HTTP 메소드 소개, GET 은 조회, POST 는 생성, PUT 은 수정, DELETE 는 삭제" },
    { "id": "tcFxaXDjm8k", "title": "24 12 17, p 13899, 5강, 등록을 GET으로 해도 되지만 추천되지 않는다. POST 로 변경" },
    { "id": "ZJUUkb3vUCE", "title": "24 12 17, p 13899, 6강, HTTP 메서드가 다르면 액션 Path(경로)가 같아도 된다." },
    { "id": "woJalP_8crs", "title": "24 12 17, p 13899, 8강, private String getFormHtml 메서드로 폼 템플릿 중복을 제거" },
    { "id": "loL6miiHNV4", "title": "24 12 17, p 13899, 9강, @Validated 로 유효성 검사 활성화, @NotBlank, @Length 로 유효성 검사 추가" },
    { "id": "FOS9i5ulfA0", "title": "24 12 17, p 13899, 11강, BindingResult 추가하면 유효성검사가 실패해도 요청이 중단되지 않는다." },
    { "id": "AMFzh59gcXc", "title": "24 12 17, p 13899, 12강, PostWriteForm 을 record 로 변경" },
    { "id": "DmMYNVvR5QI", "title": "24 12 17, p 13899, 13강, 리스트 페이지 추가, 임시로 엔티티 클래스 추가, 글 쓰기가 완료되면 post 엔티티 객체가 posts 에 추가" },
    { "id": "mkZo57KgBVQ", "title": "24 12 17, p 13899, 14강, HTML 을 자바 클래스로 부터 분리하기 위해서 타임리프 의존성 추가, 타임리프 캐시 끄기" },
    { "id": "YJKovy9Mulo", "title": "24 12 17, p 13899, 15강, POST /posts/write 에서 폼 데이터 유효성 검사 실패시 write.html 이 보여지도록" },
    { "id": "hSavswi_Dtw", "title": "24 12 17, p 13899, 16강, /POST /posts/write 에서 폼 데이터 유효성 검사 실패시 보여지는 폼에 고객 데이터를 유지하도록" },
    { "id": "GDsPI8fOanI", "title": "24 12 17, p 13899, 17강, @ModelAttribute 매개변수는 model 작업 없이 바로 타임리프에서 사용 가능" },
    { "id": "7Akn_NjBXWg", "title": "24 12 17, p 13899, 18강, 인텔리제이에서 `Namespace 'th' is not bound` 라는 타임리프 관련 오류 해결법" },
    { "id": "UsHoRBrxZh4", "title": "24 12 17, p 13900, 1강, 스프링부트 IoC 컨테이너 클론코딩 시작합니다." },
    { "id": "wfzzTHGT76s", "title": "24 12 17, p 13900, 2강, 태초에 ApplicationContext 가 있었다." },
    { "id": "GKj2osd5neE", "title": "24 12 17, p 13900, 3강, TestPostService testPostService = applicationContext.genBean" },
    { "id": "FKefXQZhHf0", "title": "24 12 17, p 13900, 4강, applicationContext.genBean(\"testPostService\"); 를 2번 이상 호출했을 때 같은 객체가 리턴" },
    { "id": "Zk4lnZi0ZBA", "title": "24 12 17, p 13900, 5강, TestPostRepository testPostRepository = applicationContext.genBean 작동" },
    { "id": "SPiilE0jmSw", "title": "24 12 17, p 13900, 6강, testPostService has testPostRepository" },
    { "id": "ncVB7bi7Wpo", "title": "24 12 17, p 13900, 7강, testFacadePostService has testPostService, testPostRepository" },
    { "id": "hJcKkzwuv5o", "title": "24 12 18, p 13899, 20강, 컨트롤러 클래스 안에서 2줄 띄워쓰기 기준으로 그룹화, @ModelAttribute 생략" },
    { "id": "hBSruoKDoH8", "title": "24 12 18, p 13899, 19강, 여태까지의 내용 정리" },
    { "id": "_iP_BslV0oE", "title": "24 12 18, p 13899, 21강, th:object, th:field 로 HTML 코드량 줄이기, label 엘리먼트 도입" },
    { "id": "Vg2ayzqsnWQ", "title": "24 12 18, p 13899, 22강, `${#fields.allErrors()}` 를 통해서 th:object 안에서 관련 오류 출력" },
    { "id": "w_TQipAX-go", "title": "24 12 18, p 13899, 23강, 글 리스트의 뷰를 list.html 으로 구현" },
    { "id": "B3GRMvS6PhA", "title": "24 12 18, p 13899, 24강, 글 상세페이지 구현" },
    { "id": "B7n7sBmAY-s", "title": "24 12 18, p 13899, 25강, JPA 도입" },
    { "id": "rD6BmlSK8_g", "title": "24 12 18, p 13899, 26강, 글이 없다면 샘플 데이터(글 3개) 생성되도록" },
    { "id": "t8z3kwSxBNs", "title": "24 12 18, p 13899, 27강, 글 리스트와 상세페이지에 날짜 노출" },
    { "id": "_TP75gXrmGI", "title": "24 12 18, p 13902, 1강, REST API 프로젝트 생성 후 GIT PUSH" },
    { "id": "amBq_bSdkcs", "title": "24 12 18, p 13902, 2강, JPA 설정, JPA를 위한 기본 엔티티들 생성, 샘플데이터 생성기 추가" },
    { "id": "9bLPdc3qQwA", "title": "24 12 18, p 13902, 3강, Post 엔티티 생성, 샘플 데이터로 글 3개 생성" },
    { "id": "Aumz8K8JMM8", "title": "24 12 18, p 13902, 5강, 백엔드 로직은 프론트엔드의 종류에 영향받지 않는다." },
    { "id": "ewSuDIV6lT4", "title": "24 12 18, p 13902, 6강, GET /api/v1/posts, REST API 서버는 데이터를 꾸밀 필요가 없다." },
    { "id": "9PeL7PLNQlU", "title": "24 12 18, p 13902, 9강, 조금 더 명확한 응답을 위해서 결과코드와 메세지를 함께 전달(응답)" },
    { "id": "sDHmBWYo3Hg", "title": "24 12 18, p 13902, 8강, DELETE /api/v1/posts/{id}, HTTP 메서드 : GET(조회), POST(생성), PUT(수정), DELETE(삭제)" },
    { "id": "Ho8T4j3qI5s", "title": "24 12 18, p 13902, 10강, 글 수정, POSTMAN 으로 API 호출" },
    { "id": "zbhPBo-9dTM", "title": "24 12 18, p 13902, 11강, RsData 클래스 도입하여 응답 양식을 통일" },
    { "id": "3-EtNW6d3qQ", "title": "24 12 18, p 13902, 12강, ReqBody 클래스를 레코드로 변형하여 코드량을 줄임" },
    { "id": "59Td5VVAbnM", "title": "24 12 18, p 13902, 13강, 글 수정시 입력되는 데이터의 유효성 체크, @Valid" },
    { "id": "P8O-zROJEWk", "title": "24 12 18, p 13902, 14강, POST /api/v1/posts, 글 작성" },
    { "id": "mXS4D8ImZtU", "title": "24 12 18, p 13902, 15강, @RequestBody 는 스프링부트 입장에서 받은편지(요청, Request)의 본문에 해당한다." },
    { "id": "pLg_uLkqAWU", "title": "24 12 18, p 13902, 16강, Postman 사용법, 요청들 정리, 변경했으면 Ctrl + S 눌러서 저장 필수" },
    { "id": "nOLb4p3HixY", "title": "24 12 18, p 13902, 17강, 엔티티의 날짜 필드명을 수정, 프론트엔드 개발자가 싫어함" },
    { "id": "c4E9ofsmtwg", "title": "24 12 19, p 13848, 15강, 수정모드에서 새 내용 입력 후 저장 누르면 기존 리스트에 반영" },
    { "id": "bPpFm0BX1tM", "title": "24 12 19, p 153, 44강, slog.gg 로 접속이 안된다면 www.slog.gg 로 접속해주세요." },
    { "id": "gFiQsa-QHp4", "title": "24 12 19, p 13902, 18강, Post 클래스와 똑같은 구조의 PostDto 클래스 생성, 단건조회에 적용" },
    { "id": "DM-2_h2WK-Y", "title": "24 12 19, p 13902, 19강, PostDto 클래스를 다건조회에 적용" },
    { "id": "SGorQI4Lcnk", "title": "24 12 19, p 13902, 20강, 날짜 필드명을 createdDatetime 으로 바꾸라는 요청을 DTO 변경만으로 깔끔하게 처리" },
    { "id": "kLpIUW0Yv58", "title": "24 12 19, p 13902, 21강, @JsonIgnore, 게터 메서드의 결과는 자동으로 JSON 화 할때 포함됨" },
    { "id": "ggOvfOVrJhU", "title": "24 12 19, p 13902, 22강, @JsonProperty 를 사용하여 게터 메서드 제거" },
    { "id": "VIjSaifMGqY", "title": "24 12 19, p 13902, 23강, 글 작성시에만 data 라는 추가필드가 필요하다." },
    { "id": "A2dt_MTXN2Q", "title": "24 12 19, p 13902, 24강, data 변수를 Object 타입으로 지정" },
    { "id": "xmtNOXqTssY", "title": "24 12 19, p 13902, 25강, Object 타입은 데이터를 넣을 때는 편하지만, 데이터를 꺼낼때는 타입을 지정해줘야 한다." },
    { "id": "StEysxb-K4o", "title": "24 12 19, p 13902, 26강, 제너릭 타입의 List는 데이터를 넣을 때 실수를 방지해주고, 데이터를 꺼낼때도 편하다." },
    { "id": "FiZKMxdKw7A", "title": "24 12 19, p 13902, 27강, RsData 의 data 필드에 Object 대신 제너릭 적용하여 각 상황에 맞는 제약사항을 부여, 더 안정적인 코드로 변함" },
    { "id": "ediCLRnJPW0", "title": "24 12 19, p 13902, 28강, 조회(GET)를 제외한 모든 액션 메서드의 리턴타입에 RsData는 필수" },
    { "id": "VptTwMfitUY", "title": "24 12 19, p 13902, 29강, 삭제 액션 메서드의 결과 data 는 null 이어야 한다는 것을 명시(java.lang.Void)" },
    { "id": "PRLp57JjRxk", "title": "24 12 19, p 13902, 30강, 작성 액션 메서드의 결과 data 는 item과 totalCount 로 구성되어야 한다는 요구사항에 대응하는 방법" },
    { "id": "D-7H1moWQw4", "title": "24 12 19, p 13902, 31강, HTTP 응답에는 상태코드를 넣는게 FM 이고, FM대로 따라야 하는 경우도 있다." },
    { "id": "VD2NEcCX96I", "title": "24 12 19, p 13902, 32강, HTTP 상태코드가 있다고 하더라도 그걸로는 각 앱의 다양한 상태를 모두 커버할 수 없다." },
    { "id": "KBFs_zu5dQk", "title": "24 12 19, p 13902, 33강, 기본적으로 액션 메서드는 상태코드를 200(성공)으로 응답한다." },
    { "id": "gs1xY7dG8xI", "title": "24 12 19, p 13902, 34강, ResponseEntity 클래스를 사용하여 상태코드를 200이 아닌 다른 상태코드로 응답할 수 있다." },
    { "id": "mm4X4zGfDE8", "title": "24 12 19, p 13902, 35강, 글 수정 액션 메서드는 이미 200으로 응답하고 있었다." },
    { "id": "DM0DCC5nkH0", "title": "24 12 19, p 13902, 36강, 삭제에 해당하는 응답코드는 없다. 그럴 때는 200이나 204 중에서 택1" },
    { "id": "vj9GlzGkqAU", "title": "24 12 19, p 13902, 37강, 팀장님이 삭제 후 204가 아닌 200으로 응답하라고 다시 번복하심" },
    { "id": "2G_cdO0LjmU", "title": "24 12 19, p 13902, 38강, @RestController 안의 액션 메서드이거나 @ResponseBody 가 붙은 메서드에 전/후 처리 코드 작동하는지 테스트" },
    { "id": "Mjbk543KBAc", "title": "24 12 19, p 13902, 39강, AOP를 활용하여 resultCode의 앞부분을 HTTP 응답코드로 설정 되도록" },
    { "id": "Ah3y_C__dGQ", "title": "24 12 19, p 13902, 40강, AOP 덕분에 ResponseEntity 클래스를 사용하지 않아도 된다." },
    { "id": "uVjoViW3rKw", "title": "24 12 19, p 13902, 41강, 유지보수/이해가 필요없는 유용한 코드의 양이 많은 것은 문제가 되지 않는다." },
    { "id": "I-tvcUEYwB4", "title": "24 12 19, p 13902, 42강, NoSuchElementException 예외를 예외처리기에서 우아하게 처리하는 방법" },
    { "id": "eSDqVTHlnLo", "title": "24 12 20, p 13902, 44강, NoSuchElementException 은 400보다 404에 가 적당하다." },
    { "id": "xOYmCD36QHk", "title": "24 12 20, p 13902, 45강, MethodArgumentNotValidException 은 400 이 적당하다." },
    { "id": "RcfyzXFH5ZY", "title": "24 12 20, p 13902, 43강, @ControllerAdvice 이용하면 룰을 설정하듯이 선언적으로 예외를 처리할 수 있습니다." },
    { "id": "I0xjfal2_8w", "title": "24 12 20, p 13902, 48강, 회원 샘플 데이터 하도록" },
    { "id": "vlOUAfB8ezY", "title": "24 12 20, p 13902, 47강, 기존에 나오던 자세한 오류의 스택 트레이스 정보를 printStackTrace()로 콘솔에 출력" },
    { "id": "CJTG9y4mriY", "title": "24 12 20, p 13902, 46강, 필드에러가 여러개 일 수 있으니 메세지에 필드에러들을 통합해서 담는다." },
    { "id": "eYkeGlE2mwo", "title": "24 12 20, p 13902, 49강, 글 쓰기 코드를 복사해서 회원 가입을 쉽게 구현, 이런식으로 개발하시면 좋습니다, 특히 초심자에게 강추" },
    { "id": "AC_M7d-CxMY", "title": "24 12 20, p 13902, 50강, 응답 바디에 totalCount 제거, API 주소에 `/join` 추가" },
    { "id": "Hs3Vrd2gOmo", "title": "24 12 20, p 13902, 51강, 회원가입 시 DataIntegrityViolationException 예외발생에 대한 우아한 처리" },
    { "id": "5CQeLzZBf18", "title": "24 12 20, p 13902, 52강, 회원가입 시 username 중복체크하고 중복이면 IllegalArgumentException를 직접 발생시킴, 바람직한 처리" },
    { "id": "97B-oEHwufI", "title": "24 12 20, p 13902, 53강, 회원가입 시 예외처리기에서 예외를 우아하게 처리하는 방법" },
    { "id": "ipYo9YRFf44", "title": "24 12 20, p 13902, 54강, 수 많은 예외를 다 다루기 어렵다면 RuntimeException로 예외를 처리해도 된다." },
    { "id": "UdFzZiJ-gzE", "title": "24 12 20, p 13902, 55강, msg 뿐 아니라 resultCode 까지 받는 ServiceException 도입, 편리함" },
    { "id": "9QrFPbx2cyU", "title": "24 12 20, p 13902, 56강, Post 가 author 필드를 가지도록, 글 쓰기 API 에서는 일단 작성자를 user3 으로 설정" },
    { "id": "GFi_M51FouE", "title": "24 12 20, p 13902, 57강, PostDto 가 author 필드(MemberDto)를 가지도록" },
    { "id": "azNr-VylXNM", "title": "24 12 20, p 13902, 58강, Post 클래스의 author 필드에 @ManyToOne(fetch = FetchType.LAZY) 를 통해서 지연로딩 설정" },
    { "id": "Py6FGbTN5M0", "title": "24 12 20, p 13902, 59강, 글 3개를 보여주려면 1개의 쿼리에 추가로 3개의 쿼리(각 작성자를 가져오는)가 발생한다, N + 1 문제 발생함" },
    { "id": "iwJClG5ofBI", "title": "24 12 20, p 13902, 60강, JPA는 findById 를 통해서 SELECT 를 하기 전에 영속성 컨텍스트를 먼저 찾아본다." },
    { "id": "MVz17DIrEpU", "title": "24 12 20, p 13902, 61강, default_batch_fetch_size 를 통해서 N + 1 문제를 해결할 수 있다." },
    { "id": "MYJSvxgIg_I", "title": "24 12 20, p 13902, 62강, username 과 password 는 절대 노출되면 안됩니다. MemberDto 수준에서 노출되지 않도록 처리" },
    { "id": "UOo5OdgwS28", "title": "24 12 20, p 13902, 63강, PostDto 에서 MemberDto 를 제거하고 authorId, authorName 을 추가" },
    { "id": "55sSzNtgcQg", "title": "24 12 20, p 13885, 16강, 책과 달리 우리는 BaseInitData 를 통해서 샘플 질문 2개 생성" },
    { "id": "R_Yg7dauJwQ", "title": "24 12 20, p 13885, 17강, 테스트에서는 test 프로파일 활성화로 인해서 메로리 DB가 사용됨" },
    { "id": "W5hOrU8oE3Y", "title": "24 12 20, p 13885, 18강, SQL 로깅 설정, 책과 달리 우리는 모든 테스트케이스를 추가하면서 진행" },
    { "id": "uLNHq3-LvWk", "title": "24 12 20, p 13885, 19강, 2-06 도메인별로 분류하기" },
    { "id": "TO_cXXTosVY", "title": "24 12 20, p 13885, 20강, 2-07 질문 목록 만들기" },
    { "id": "lQRmT88HfDQ", "title": "24 12 20, p 13885, 21강, 2-08 루트 URL 사용하기" },
    { "id": "ne7DplkrxSU", "title": "24 12 20, p 13885, 22강, 2-09 서비스 활용하기" },
    { "id": "nB3XwjPhBss", "title": "24 12 20, p 13885, 23강, 2-10 상세 페이지 만들기" },
    { "id": "PVM-y_wKoY4", "title": "24 12 20, p 13885, 24강, 2-11 URL 프리픽스 알아 두기" },
    { "id": "yTB6ptEicko", "title": "24 12 20, p 13885, 25강, 2-12 답변 기능 만들기" },
    { "id": "w2Z_N9NHqv8", "title": "24 12 20, p 13885, 26강, 2-13 웹 페이지 디자인하기" },
    { "id": "yAMJ908BCi8", "title": "24 12 20, p 13885, 27강, 2-14 부트스트랩으로 화면 꾸미기" },
    { "id": "7GMyEsA5nOg", "title": "24 12 20, p 13885, 28강, 2-15 표준 HTML 구조로 변경하기" },
    { "id": "apIqXHNGNyY", "title": "24 12 20, p 13885, 29강, 2-16 질문 등록 기능 추가하기" },
    { "id": "V6vy4WR1TdE", "title": "24 12 22, p 13909, 1강, 유튜브 비디오 스마트 업로더, 개요" },
    { "id": "jPPN1TZ0DPM", "title": "24 12 22, p 13909, 2강, 프로그램 다운로드, 파이썬 3.13 이상 버전이 설치되어 있어야 합니다." },
    { "id": "Eze8a-xYMzs", "title": "24 12 22, p 13909, 3강, 파이썬 가상환경 생성 활성화, 라이브러리 인스톨" },
    { "id": "q-kc8n5QClw", "title": "24 12 22, p 13909, 4강, 구글 클라우드에서 프로젝트 생성, YouTube Data API v3 활성화, 구글 API 키 발급" },
    { "id": "UJr78uwzKc4", "title": "24 12 22, p 13909, 5강, 설정 파일 생성, 각 sh 파일에 실행권한 부여, 실행, 종료 방법 설명" },
    { "id": "q6ixKlczPcs", "title": "24 12 22, p 13909, 6강, 프로그램 실행 후 mp4 파일의 접두어로 `r_`를 붙여서 자동으로 업로드 되는지 확인" },
    { "id": "rsIc0eAqYF0", "title": "24_12_23, p 13915, 1강, 프로젝트 생성, GIT PUSH" },
    { "id": "oAQp-Pj8h54", "title": "24 12 23, p 13915, 2강, slog 13902 수업의 63강 소스코드를 복사해서 프로젝트에 적용, POSTMAN 요청도 복사" },
    { "id": "LUgCs8-tHrY", "title": "24 12 23, p 13915, 3강, 글쓰기에서 고객에게 입력받은 authorId 를 작성자로 지정하도록" },
    { "id": "CYxNh3Rhblc", "title": "24 12 23, p 13915, 4강, 지금과 같은 방식이라면 3번 회원이 다른 회원인척 글을 작성하는 `사칭`이 가능" },
    { "id": "cJGo6Alb4Xg", "title": "24 12 23, p 13915, 5강, 신원확인 후 인증까지 해야 안심하고 일을 처리할 수 있습니다." },
    { "id": "0TEEkuelBSA", "title": "24 12 23, p 13915, 6강, 이제는 글쓰기시에 작성자 식별을 위해 회원 인증이 필요합니다.(비밀번호)" },
    { "id": "g3IRGrl7A6g", "title": "24 12 23, p 13915, 7강, 글수정시에는 인증 뿐 아니라 인가까지 필요합니다." },
    { "id": "kmN9co47ebQ", "title": "24 12 23, p 13915, 8강, 글삭제시에는 인증 뿐 아니라 인가까지 필요합니다" },
    { "id": "P9GWRZJjCLU", "title": "24 12 23, p 13915, 9강, 클라이언트는 인증정보를 URL, 헤더, 바디 중 어느곳이던 넣을 수 있습니다" },
    { "id": "7fE0OxGwnh4", "title": "24 12 23, p 13915, 10강, 보통 인증정보는 헤더에 담는게 맞습니다" },
    { "id": "eW7e1ftUIhQ", "title": "24 12 23, p 13915, 11강, 모든 액션 메서드에서 인증정보를 헤더에서 가져오도록" },
    { "id": "HaGHOQ0OvLU", "title": "24 12 23, p 13915, 12강, 인증정보 헤더 2개를 1개로 줄임, 인증을 처리하는 함수를 도입" },
    { "id": "CiHTX2bxSZw", "title": "24 12 23, p 13915, 13강, POSTMAN 의 요청들을 폴더로 구분, 콜렉션 변수 credentials 를 추가하여 적용, 이제는 사용자 변경을 쉽게" },
    { "id": "EZPYsNKl07Y", "title": "24 12 23, p 13915, 14강, 관례상 헤더명을 credentials 에서 Authorization 로 변경" },
    { "id": "7R558Aqhdqw", "title": "24 12 23, p 13915, 15강, POSTMAN 에서 요청에서 Authorization 탭에서 인증용 헤더 쉽게 추가" },
    { "id": "VRtUyOYvqH4", "title": "24 12 23, p 13915, 16강, POSTMAN 에서 Authorization 탭의 설정은 기본적으로 자식에게 연쇄적으로 상속된다" },
    { "id": "GGZHL4jdmVk", "title": "24 12 23, p 13915, 17강, Request Scope Bean 방식으로 request 객체를 주입받으면 편합니다" },
    { "id": "DOdeQ-fyRn8", "title": "24 12 23, p 13915, 18강, 리퀘스트 스코프 빈은 일종의 프록시로 요청자에 따라 실제 객체를 매핑해줍니다." },
    { "id": "gZk1WlhHDbw", "title": "24 12 23, p 13915, 19강, 비밀번호 원문이 DB 이외의 장소에 저장되는게 찜찜해서 가입시 password2 값을 랜덤하게 생성" },
    { "id": "xaenjqJfX6o", "title": "24 12 23, p 13915, 20강, password2를 유니크하게 만들면 그 정보 하나로 신원조회와 인증이 가능합니다" },
    { "id": "Nv_Oz546po8", "title": "24 12 23, p 13915, 21강, member 테이블에서 id, username, password2 는 식별자, password2는 쉽게 유추할 수 없어서 보안성이 좋다." },
    { "id": "Ar3eJXz-O2A", "title": "24 12 23, p 13915, 22강, password2 같은 필드를 관례상 apiKey 라고 한다. password2 대신 apiKey 로 이름변경" },
    { "id": "gLa4DRSlnaU", "title": "24 12 23, p 13915, 23강, 개발테스트 환경에서만 1번 부터 7번 회원까지는 편의상 apiKey 를 username 과 동일하게 설정" },
    { "id": "kpw9xMjKN9o", "title": "24 12 23, p 13915, 24강, 로그인 API 구현" },
    { "id": "8W-vfZfxGgo", "title": "24 12 23, p 13915, 25강, 주민등록증을 분실하는 것 보다 사원증을 분실하는게 덜 위험합니다" },
    { "id": "2x1tzIkP-po", "title": "24 12 23, p 13915, 26강, 현재 로그인 한 회원의 정보를 조회하는 API 구현" },
    { "id": "apP2-xxSxzs", "title": "24 12 23, p 13915, 27강, Rq 클래스는 도메인에 종속되지 않는 공통 Request & Response 관련 로직을 모아두는 클래스" },
    { "id": "UI_mALl14ag", "title": "24 12 24, p 13915, 28강, 댓글 작성 API 설계" },
    { "id": "jAD_DHzH4E8", "title": "24 12 24, p 13915, 29강, 샘플 데이터(댓글 3개) 생성" },
    { "id": "uG8rDabn880", "title": "24 12 24, p 13915, 30강, GET http://localhost:8080/api/v1/posts/{postId}/comments" },
    { "id": "EyKm8MC6XS0", "title": "24 12 24, p 13915, 31강, GET http://localhost:8080/api/v1/posts/{postId}/comments/{id}" },
    { "id": "nrIVfK7zL6o", "title": "24 12 24, p 13915, 32강, POST http://localhost:8080/api/v1/posts/{postId}/comments" },
    { "id": "JfDrvCZZ9iU", "title": "24 12 24, p 13915, 33강, 댓글 작성 결과 메세지가 `null번 댓글이 작성되었습니다.` 라고 나오는 이유" },
    { "id": "dSDjwhWiTIo", "title": "24 12 24, p 13915, 34강, 별도의 함수를 만들고 그 함수에 @Transactional 어노테이션을 붙여서 해결, self 사용 필수" },
    { "id": "avDUfwpEG80", "title": "24 12 24, p 13915, 35강, 컨트롤러에서 직접 entityManager.flush() 로 return 하기 전에 INSERT 쿼리 강제수행하도록" },
    { "id": "DmOU_bepBoE", "title": "24 12 24, p 13915, 36강, 컨트롤러에서 서비스의 flush 메서드 호출, 서비스는 리포지터리의 flush 메서드 호출" },
    { "id": "LxB4UvAuWyQ", "title": "24 12 24, p 13915, 37강, PUT" },
    { "id": "I176S0qaSiU", "title": "24 12 24, p 13915, 38강, DELETE http://localhost:8080/api/v1/posts/{postId}/comments/{id}" },
    { "id": "hWh6XQGqJcM", "title": "24 12 24, p 13915, 39강, 관리자는 타인의 글과 댓글을 삭제할 수 있다" },
    { "id": "6D2E0tbz9d0", "title": "24 12 24, p 13915, 40강, Post 클래스에 checkActorCanDelete, checkActorCanModify" },
    { "id": "9OVHLIsh4z8", "title": "24 12 24, p 13915, 41강, PostComment 클래스에 checkActorCanDelete, checkActorCanModify" },
    { "id": "JQsJ3ZOygjI", "title": "24 12 24, p 13916, 1강, 프로젝트 생성, GIT PUSH" },
    { "id": "E5AUaVMh0yU", "title": "24 12 24, p 13916, 2강, application.yml 세팅, 테스트 모드에서는 test 프로파일 활성화 되도록 @ActiveProfiles" },
    { "id": "IUkgqf1RRAk", "title": "24 12 24, p 13916, 3강, baseInitDataApplicationRunner 빈 생성되도록" },
    { "id": "U1tedGziy9o", "title": "24 12 24, p 13916, 4강, slog 13915 수업의 41강 소스코드를 복사해서 프로젝트에 적용" },
    { "id": "xNvWt4o7iq8", "title": "24 12 24, p 13916, 5강, TC 회원가입, RED" },
    { "id": "4Lxi1qcok3M", "title": "24 12 24, p 13916, 6강, TC 회원가입, GREEN, 꼼수" },
    { "id": "u4kQasual3c", "title": "24 12 24, p 13916, 7강, TC 회원가입, 핸들러 클래스와 메서드까지 지정" },
    { "id": "XooHV8gQNO0", "title": "24 12 24, p 13916, 8강, TC 회원가입, 입력한 닉네임을 기반으로한 성공메세지가 나와야 한다" },
    { "id": "1-vthlTbBdI", "title": "24 12 24, p 13916, 8강, TC 회원가입, 입력한 회원정보 기반으로 DB에 저장이 되었는지 테스트" },
    { "id": "-3-Tw_qxL90", "title": "24 12 24, p 13916, 10강, TC 회원가입, 완료 후 DTO 반환" },
    { "id": "IQEGw1Jg4p0", "title": "24 12 24, p 13916, 11강, TC 로그인, 꼼수없이 구현" },
    { "id": "Fh33BoIqn44", "title": "24 12 24, p 13900, 8강, 클래스 관련 유틸리티 테스트 시작, ClsUtil.loadClass" },
    { "id": "7HmEWo6dfi0", "title": "24 12 24, p 13900, 9강, ClsUtil.construct 로 객체생성시 타입을 동적으로 결정" },
    { "id": "PCin9HSI0XE", "title": "24 12 24, p 13900, 10강, ClsUtil.getParameters 로 생성자 매개변수들의 정보를 얻기" },
    { "id": "RmCTUuGQ4Kg", "title": "24 12 24, p 13900, 11강, ClsUtil.getParameterNames 로 생성자 매개변수들의 이름들 얻기" },
    { "id": "cqniWoCNMX8", "title": "24 11 18, p 13842, 13강, 자바 비주얼라이저 소개" },
    { "id": "JoR__0l61uA", "title": "24 12 31, p 13900, 12강, 여러 생성자 메서드 중 입력된 인자들의 타입에 맞는 생성자 메서드 리턴하도록 변경" },
    { "id": "Jdb4I7DQ3wA", "title": "25 01 01, p 13909, 7강, userConfig.json 파일의 내용 심화설명" },
    { "id": "mbJxJwsCwNI", "title": "25 01 01, p 13900, 13강, 테스트케이스 보강, 특정 함수의 파라미터 정보들을 얻을 때 파라미터 타입들로도 조회할 수 있도록 변경" },
    { "id": "NncE1ncPfBo", "title": "25 01 02, p 153, 53강, 공지사항을 포함한 모든 세부수업에 유튜브 재생목록이 있습니다." },
    { "id": "WSm_-oXLQKs", "title": "25 01 02, p 153, 54강, 가끔 슬로그에서 링크되는 유튜브 영상이 안나올 수 있습니다. 3분캐시전략 때문, 재생목록을 이용해주세요." },
    { "id": "MSBG_XFdNeo", "title": "25 01 02, p 13916, 12강, 회원가입 시 username 중복으로 인한 실패는 400 보다 409 가 더 적절하다." },
    { "id": "R0lG0EC5IdQ", "title": "25 01 02, p 13916, 13강, 회원가입 시 username 중복체크에 대한 테스트케이스 추가" },
    { "id": "eWbQIzcO5x8", "title": "25 01 02, p 13916, 14강, 로그인 테스트케이스를 조금 더 엄격하게 변경, 사실 처음부터 이렇게 엄격하게 할 필요는 없다." },
    { "id": "ItniP4cORS0", "title": "25 01 02, p 13916, 15강, 내 정보 조회 API 구현" },
    { "id": "kI3IXeixTgs", "title": "25 01 02, p 13916, 16강, 테스트케이스들을 전체적으로 리팩토링, 날짜관련 테스트 강화" },
    { "id": "RnAigZikA1s", "title": "25 01 02, p 13916, 17강, 로그인 시 username 누락" },
    { "id": "XUxBV0oIh2o", "title": "25 01 02, p 13916, 18강, 로그인 시 password 누락" },
    { "id": "_iOPdGF-mi8", "title": "25 01 02, p 13916, 19강, @Valid 를 이용해서 유효성검사" },
    { "id": "WlrfK8uFXpU", "title": "25 01 02, p 13916, 20강, 회원가입 시 username, password, nickname 누락" },
    { "id": "gOz3CmhezXs", "title": "25 01 02, p 13916, 21강, 내 정보 조회 with 잘못된 API KEY" },
    { "id": "wP1K5DANGSk", "title": "25 01 02, p 13916, 22강, 글 조회" },
    { "id": "AWInylsPXxk", "title": "25 01 02, p 13916, 23강, 존재하지 않는 글 조회, 404" },
    { "id": "TAvOVvGeODo", "title": "25 01 02, p 13916, 24강, 글 작성" },
    { "id": "HJ71B7PEyQA", "title": "25 01 02, p 13916, 25강, 글 작성, with no input data" },
    { "id": "LM01InFqpG4", "title": "25 01 02, p 13916, 26강, 글 작성, with no actor" },
    { "id": "uSVWQOVUJ-U", "title": "25 01 02, p 13916, 27강, 글 수정" },
    { "id": "TPMRxCq1d4g", "title": "25 01 02, p 13916, 28강, 글 수정시 날짜가 바뀌는 것도 확인, flush 사용" },
    { "id": "VyvCWbo-4Q8", "title": "25 01 02, p 13916, 29강, 글 수정, with no input data" },
    { "id": "jlwBs4qasto", "title": "25 01 02, p 13916, 30강, 글 수정, with no actor" },
    { "id": "M-3JYRMyBXY", "title": "25 01 02, p 13916, 31강, 글 수정, with no permission" },
    { "id": "_oewvN5udwY", "title": "25 01 03, p 13916, 32강, 글 삭제" },
    { "id": "XDn4-rvcrho", "title": "25 01 03, p 13916, 33강, 글 삭제, with not existing post id" },
    { "id": "Ppa0cZ9pjvM", "title": "25 01 03, p 13916, 34강, 글 삭제, with no actor" },
    { "id": "ibGVPo_XlTE", "title": "25 01 03, p 13916, 35강, 글 삭제, with no permission" },
    { "id": "hF8FbI_KNgw", "title": "25 01 03, p 13916, 36강, Post 에 published 필드 추가" },
    { "id": "2Dw9CfsFgt4", "title": "25 01 03, p 13916, 37강, 비공개글은 본인 혹은 관리자만 볼 수 있습니다." },
    { "id": "zO3ADkJlLGM", "title": "25 01 03, p 13916, 38강, Post 에 listed 필드 추가" },
    { "id": "60DBD5ep9ns", "title": "25 01 03, p 13916, 39강, 글 등록, 글 수정시에 published, listed 처리" },
    { "id": "3bnLVzecFnY", "title": "25 01 03, p 13916, 40강, published, listed 필드 추가에 따른 테스트케이스 강화" },
    { "id": "OsPyuXMepO4", "title": "25 01 03, p 13916, 41강, PostDto 에는 content 제거, PostWithContentDto 에는 content 추가" },
    { "id": "18ysr2TOwZo", "title": "25 01 03, p 13916, 42강, GET /api/v1/posts 에서 listed 허용 글만 조회, 페이징 추가" },
    { "id": "c4iZSiZs62A", "title": "25 01 03, p 13916, 43강, findByListedPaged 가 Page＜Post＞를 리턴하도록" },
    { "id": "v4UdliDNGm0", "title": "25 01 03, p 13916, 44강, GET /api/v1/posts 가 totalItems 도 같이 응답하도록" },
    { "id": "voDGq5PoXek", "title": "25 01 03, p 13916, 45강, GET /api/v1/posts 에 totalPages, currentPageNumber, pageSize 도 같이 응답하도록" },
    { "id": "2rXW0bhMrMc", "title": "25 01 03, p 13916, 46강, PageDto 도입하여 Map 을 대체" },
    { "id": "PdXYauB53y0", "title": "25 01 03, p 13916, 47강, 제목으로 검색, 내용으로 검색" },
    { "id": "TEJ2WC3TdOQ", "title": "25 01 03, p 13916, 48강, 내글 다건 조회, 검색" },
    { "id": "lbR9-2BOQMA", "title": "25 01 03, p 13916, 49강, 댓글 다건 조회, 댓글 관련 테스트케이스는 간소하게 만들 예정입니다." },
    { "id": "f-2UbzU94T4", "title": "25 01 03, p 13916, 50강, 댓글 삭제" },
    { "id": "oXQ4kvgH5Xs", "title": "25 01 03, p 13916, 51강, 댓글 수정" },
    { "id": "UwHr3VeGT-c", "title": "25 01 03, p 13916, 52강, 댓글 작성" },
    { "id": "0qpZHdiCT9Y", "title": "25 01 03, p 13900, 14강, 클래스의 대표 생성자를 찾고 그것의 파마미터 정보들을 얻을 수 있다." },
    { "id": "OMfLc_9sTm4", "title": "25 01 03, p 13900, 15강, ApplicationContext 에 ClsUtil 을 적용하여 하드코딩 부분을 줄이기" },
    { "id": "qMsnOx_PWxI", "title": "25 01 03, p 13900, 16강, com.ll.domain.testPost.testPost 패키지를 테스트 폴더로 옮길 수 있게 되어서 옮김" },
    { "id": "yTTMWvS8NNA", "title": "25 01 05, p 13900, 17강, org.reflections:reflections 라이브러리 추가, @Component 계열 어노테이션 3개 등록" },
    { "id": "TcoodIyO4FU", "title": "25 01 05, p 13900, 18강, org.reflections:reflections 라이브러리의 사용법" },
    { "id": "7J14bbkiy_8", "title": "25 01 05, p 13900, 19강, 특정 패키지 하위의 모든 클래스들 중 특정 어노테이션을 가진 클래스들 수집하는 함수 구현" },
    { "id": "GGn2gBXeWso", "title": "25 01 05, p 13900, 20강, ApplicationContext 에서 더 이상 하드코딩 방식이 아닌 동적으로 빈을 검색해서 찾도록 변경" },
    { "id": "VhwuaQGzpAo", "title": "25 01 06, p 13916, 53강, osiv 를 끄면 댓글들 조회하는 API 에서 오류가 발생한다, @Transactional 이 없어서 오류발생" },
    { "id": "IOlUjat7HyA", "title": "25 01 06, p 13916, 54강, 모든 액션 메서드에 @Transactional 혹은 @Transactional(readOnly = true) 추가" },
    { "id": "yBACIUL9jK8", "title": "25 01 06, p 13916, 55강, @Transactional 을 붙이지 않으면 개별 트랜잭션들이 발생할 수 있다." },
    { "id": "7I8rzpAM4FY", "title": "25 01 06, p 13916, 56강, spring.datasource.hikari.auto-commit=false 를 통해서 매 요청마다 발생하는 쓸데없는 쿼리 2건을 제거" },
    { "id": "mIKq8hX48CA", "title": "25 01 06, p 13916, 57강, 개발모드에서 다시 H2(파일DB)를 사용하도록" },
    { "id": "J3kt3fu8Rmk", "title": "25 01 06, p 13940, 1강, 프로젝트 생성, GIT PUSH" },
    { "id": "egFyh7liNaA", "title": "25 01 06, p 13940, 2강, slog 13916 수업의 57강 소스코드를 복사해서 프로젝트에 적용" },
    { "id": "f8CLwLnIV6A", "title": "25 01 06, p 13940, 3강, 스프링 시큐리티/시큐리티 테스트 의존성 추가, 모든 요청이 스프링 시큐리티에 의해서 막힌다." },
    { "id": "YPIx2ZuLP5I", "title": "25 01 06, p 13940, 4강, 스프링 시큐리티는 쓸데없는 요청에 대해서 입구컷을 해준다." },
    { "id": "pXPKFIRxgF0", "title": "25 01 06, p 13940, 5강, 스프링 시큐리티는 우리 시스템을 이해하지 못한다." },
    { "id": "4cgvwuln1EY", "title": "25 01 06, p 13940, 6강, SecurityFilterChain 타입의 빈을 등록하면 스프링 시큐리티가 기존 설정을 버리고 해당 설정을 사용한다." },
    { "id": "N8k7Jt33uBw", "title": "25 01 06, p 13940, 7강, SecurityFilterChain 타입의 빈을 등록하면 스프링 시큐리티는 기존 설정을 100% 다 버리고 오직 우리가 해당 빈에 설정한" },
    { "id": "i4LcLm4rQKY", "title": "25 01 06, p 13916, 58강, test 디렉토리의 잘못된 패키지명 수정" },
    { "id": "XW1iZr653gA", "title": "25 01 06, p 13940, 8강, /h2-console/** 에 대해서 접속허용, csrf 보호 비활성화" },
    { "id": "0N9coX4M2Ng", "title": "25 01 06, p 13940, 9강, 스프링 시큐리티에서 접속허용 룰이 충돌한다면 상위룰이 우선시 된다." },
    { "id": "AT0Q3KVmV2k", "title": "25 01 06, p 13940, 10강, @WithUserDetails(\"user3\") 은 안되고 @WithUserDetails(\"user\") 은 된다." },
    { "id": "_Vo23nbGZW4", "title": "25 01 06, p 13940, 11강, @WithUserDetails(\"user3\") 이 작동하도록 CustomUserDetailsService 빈 등록" },
    { "id": "SP30dhNEf1A", "title": "25 01 06, p 13940, 12강, 현재 @WithUserDetails(\"user3\") 은 입구컷 방지용으로만 쓰이고 실제 글의 작성자로는 이어지지 않는다." },
    { "id": "hp_tbvVEuQ4", "title": "25 01 06, p 13940, 13강, 글 작성시 @WithUserDetails(\"user1\") 로 지정한 회원이 작성자로 설정 되도록" },
    { "id": "tV4WW5i_eZw", "title": "25 01 06, p 13940, 14강, Principal 객체로 부터 UserDetaills 객체 얻는 방법" },
    { "id": "A6lPpSPSIXE", "title": "25 01 06, p 13940, 15강, `@AuthenticationPrincipal UserDetails user` 를 통해서 UserDetails 객체 쉽게 얻기" },
    { "id": "0QGoz0NWxsc", "title": "25 01 06, p 13940, 16강, CustomAuthenticationFilter 를 작성하고 그것이 시큐리티가 본격적으로 작동하기 전에 작동하도록 설정" },
    { "id": "-YivWx5ZW0Q", "title": "25 01 06, p 13940, 17강, 시큐리티가 본격적으로 작동하기 전에 현재 요청이 user1 이 보낸 요청임을 강제로 인증처리" },
    { "id": "gaqQkK1cL2k", "title": "25 01 06, p 13940, 18강, 우리가 기존에 사용하던 apiKey 인증 시스템과 스프링 시큐리티의 연동" },
    { "id": "QFh_XD7FknU", "title": "25 01 06, p 13941, 1강, `요구사항 v1`을 만족해주세요." },
    { "id": "y7JdGMyveE0", "title": "25 01 06, p 13941, 2강, `요구사항 v2`를 만족해주세요." },
    { "id": "5c4wUkVf_qM", "title": "25 01 07, p 13940, 19강, 스프링 시큐리티는 form 로그인 기능을 제공하지만 apiKey 로그인 기능은 제공하지 않는다." },
    { "id": "1Tg3kF4Cw8g", "title": "25 01 07, p 13940, 20강, 스프링 시큐리티가 지원하지 않는 apiKey 로그인 방식을 추가하는 것은 본질적으로 쉬울 수 밖에 없다." },
    { "id": "117NTL6zuLQ", "title": "25 01 07, p 13940, 21강, 이제 필요없는 `rq.checkAuthentication()` 메서드를 삭제, `rq.getActor()` 메서드 구현 후 적용" },
    { "id": "gRRvAupJZxs", "title": "25 01 07, p 13940, 22강, 회원가입, 로그인 API 요청에 인증검사를 하는 것은 말이 안된다." },
    { "id": "kml6RFFojUE", "title": "25 01 07, p 13940, 23강, 스프링 시큐리티가 발생시키는 예외를 가공해서 우리 시스템의 양식(RsData)에 맞춘다." },
    { "id": "EsuXLJ-7qMI", "title": "25 01 07, p 13940, 24강, 스프링 시큐리티가 발생시키는 예외를 가공할 때 401, 403을 구분한다." },
    { "id": "_yrhkgw8Xr0", "title": "25 01 07, p 13940, 25강, 테스트케이스들을 스프링 시큐리티에 맞게 수정" },
    { "id": "gcZaW7V7LJQ", "title": "25 01 07, p 13940, 26강, 현재는 거의 모든 액션 메서드 호출 전에 인증을 위해서 MEMBER 테이블 조회가 발생한다." },
    { "id": "wnOq_qVQgcg", "title": "25 01 07, p 13943, 1강, 프로젝트 생성, GIT PUSH" },
    { "id": "HGY4IUrJ-Bo", "title": "25 01 07, p 13943, 2강, slog 13940 수업의 26강 소스코드를 복사해서 프로젝트에 적용" },
    { "id": "l7qG0j2sD90", "title": "25 01 07, p 13943, 3강, apiKey 방식은 그것이 유효한지 확인하기 위해서는 꼭 1번 이상 DB 조회가 필요하다." },
    { "id": "Pg56qBRImds", "title": "25 01 07, p 13943, 4강, JWT 방식으로 서명하면 해당 토큰이 유효한지 확인하기 위해서 DB 조회가 필요하지 않다." },
    { "id": "JtlD9T1H3n0", "title": "25 01 07, p 13943, 5강, jjwt 라이브러리 로드, AuthTokenServiceTest 클래스 생성" },
    { "id": "Q5cVBfzN9mc", "title": "25 01 07, p 13943, 7강, JWT은 암호화된 결과물이 아니라 단순히 어떠한 내용에 서명이 된 결과물 입니다." },
    { "id": "cKcov9iLn78", "title": "25 01 07, p 13943, 8강, 시크릿 키는 추후 어떠한 JWT가 위조되었는지 판별할 때 사용됩니다." },
    { "id": "ZnyKSzJf6LU", "title": "25 01 07, p 13943, 9강, Ut.json.toString 함수를 이용해서 편하게 JWT 생성" },
    { "id": "n0o_qPztqPY", "title": "25 01 07, p 13943, 6강, {name=\"Paul\", age=20} 이라는 내용을 기반으로 JWT 생성" },
    { "id": "ci19qICENeA", "title": "25 01 07, p 13943, 11강, @Deprecated 어노테이션 이 붙어있는 메서드는 사용하지 않는게 좋다." },
    { "id": "KxHkD-muMvc", "title": "25 01 07, p 13943, 12강, JWT 유효성 체크, payload 추출" },
    { "id": "WNdeop6LFU0", "title": "25 01 07, p 13943, 13강, Ut.jwt.isValid(secret, jwtStr) 함수 구현" },
    { "id": "VayFbmamAaA", "title": "25 01 07, p 13943, 14강, Map＜String, Object＞를 리턴하는 Ut.jwt.payload(secret, jwtStr) 함수 구현" },
    { "id": "14iyjJSpYpo", "title": "25 01 07, p 13943, 15강, authTokenService.payload 함수 도입, 함수에서 id를 long 타입으로 형변환" },
    { "id": "TPV2q6jhNS0", "title": "25 01 07, p 13943, 16강, JWT 시크릿키와 엑세스 토큰의 만료기간을 설정파일에서 관리" },
    { "id": "NYgnX17unok", "title": "25 01 07, p 13943, 17강, 이제 로그인 시 엑세스 토큰을 발급, 기존 apiKey는 삭제하지 않습니다." },
    { "id": "0UYZxbkjA5k", "title": "25 01 07, p 13943, 18강, AuthTokenService 를 외부에 바로 노출하지 않고 MemberService 의 하위 서비스로서만 사용" },
    { "id": "Yi4JbDzj3nI", "title": "25 01 07, p 13943, 19강, 이제 apiKey를 통한 인증이 아닌 accessToken을 통한 인증으로 작동" },
    { "id": "PbrykSshBTY", "title": "25 01 07, p 13943, 20강, 일단 지금부터는 POSTMAN 에서 apiKey가 아닌 accessToken을 Authorization 헤더에 담아야 합니다." },
    { "id": "n8byv-DWkbY", "title": "25 01 07, p 13943, 21강, memberService.getAuthToken 함수는 내부적으로 getAccessToken 함수를 호출" },
    { "id": "SvzpY92aPlc", "title": "25 01 07, p 13943, 22강, 여태까지 작업한 내용 정리, apiKey 방식(DB 조회 방식)과 accessToken 방식(JWT 방식) 비교" },
    { "id": "9OptXTjYdUU", "title": "25 01 07, p 13900, 21강, 잭슨 라이브러리 추가, @Bean 어노테이션 추가, TestJacksonConfig 추가" },
    { "id": "dbjAsaO_8SU", "title": "25 01 07, p 13900, 22강, 잭슨 라이브러리 추가, @Bean 어노테이션 추가, TestJacksonConfig 추가" },
    { "id": "6Z38dEFgI-U", "title": "25 01 07, p 13941, 3강, `요구사항 v3`를 만족해주세요." },
    { "id": "rCgQWbTnuKk", "title": "25 01 08, p 13943, 23강, 우리가 토큰에 담은 사용자 id 를 시큐리티 User 객체의 한계 때문에 활용하지 못하고 SELECT로 조회하고 있음" },
    { "id": "HzPmFbSj-r8", "title": "25 01 08, p 13943, 24강, Rq.getActor 함수의 구현을 함수형으로 변형, 함수형이 요새 유행" },
    { "id": "HSFDbinaxvQ", "title": "25 01 08, p 13943, 25강, 시큐리티의 User 객체를 확장해서 id도 담을 수 있도록 함" },
    { "id": "snLiFdm-pQk", "title": "25 01 08, p 13943, 26강, SecurityUser 사용, 내 정보에서는 오류가 발생해서 SELECT 쿼리로 해결" },
    { "id": "yi5t3-35igQ", "title": "25 01 08, p 13943, 27강, SecurityUser 사용으로 매번 발생하던 쓸데없는 쿼리가 전부 제거됨" },
    { "id": "z4-vOJ99KAA", "title": "25 01 08, p 13943, 28강, apiKey 방식과 JWT 방식의 쿼리발생건수 별 비교" },
    { "id": "ik5zgzRydNA", "title": "25 01 08, p 13943, 29강, 글 삭제 테스트에 직접 엑세스 토큰을 추가하는 대신 @WithUserDetails(\"user1\") 로 변경, 하지만 안된다. 안되는데 당" },
    { "id": "dNP3qJqnvzE", "title": "25 01 08, p 13943, 30강, CustomUserDetailsService.loadUserByUsername 메서드가 SecurityUser 객체를 리턴하도록 수정" },
    { "id": "xOP1TFT_90o", "title": "25 01 08, p 13943, 31강, `@WithUserDetails(\"user1\")` 를 달고 있는 글삭제 테스트케이스 작동과정" },
    { "id": "NzLkjD9q7oU", "title": "25 01 08, p 13943, 32강, CustomAuthenticationFilter 가 OncePerRequestFilter 를 상속받은 이유" },
    { "id": "zBcEHmjEGUo", "title": "25 01 08, p 13943, 33강, GET /api/v1/posts/statistic" },
    { "id": "oUt_aUBvCK4", "title": "25 01 08, p 13943, 34강, GET /api/v1/posts/statistics 로 고침, 관리자만 해당 엔드포인트에 접근가능 하도록" },
    { "id": "LM5tPSL73dg", "title": "25 01 08, p 13943, 35강, 시큐리티 유저객체 생성시 id, username 뿐 아니라 authorities 정보도 추가" },
    { "id": "Y0f0uOEH-RQ", "title": "25 01 08, p 13943, 36강, ADMIN_ACTION 권한을 가진 사용자만 통계를 볼 수 있도록 SecurityConfig 세팅" },
    { "id": "9tmTWQo0eFA", "title": "25 01 08, p 13943, 37강, 시큐리티 관련해서 authenticationEntryPoint 뿐만 아니라 accessDeniedHandler 도 설정해서 401과 40" },
    { "id": "Zd4nvUHR8ko", "title": "25 01 08, p 13943, 38강, 관리자만 통계를 볼 수 있다는 것을 체크하는 테스트케이스 2건 작성" },
    { "id": "X_AmaOsmR_s", "title": "25 01 08, p 13943, 39강, 시스템이 아직 작기 때문에 회원마다 개별 권한을 부여하는 대신 역할을 부여" },
    { "id": "iUft2Ckrli0", "title": "25 01 08, p 13943, 40강, `.hasAuthority(\"ROLE_ADMIN\")` 대신 `.hasRole(\"ADMIN\")` 이렇게 써도 된다." },
    { "id": "WFf-QxPYQ5I", "title": "25 01 08, p 13943, 41강, apiKey 방식 vs accessToken(JWT) 방식 비교" },
    { "id": "ZywsLMDXHwo", "title": "25 01 08, p 13943, 42강, accessToken만을 사용하면 로그인 후 일정시간이 지나면 자동으로 로그아웃 된다." },
    { "id": "x6--_kfvcr8", "title": "25 01 08, p 13943, 43강, 클라이언트에서 apiKey를 오직 accessToken의 재생성에만 사용하고 그 외에 요청은 accessToken 사용" },
    { "id": "yWB8LlZ2Cco", "title": "25 01 08, p 13943, 44강, 클라이언트 측에서는 모든 요청을 날린 후 accessToken 만료 예외시 accessToken 재발급/재시도 로직을 구현해야 합니다." },
    { "id": "OVNj8SJksO4", "title": "25 01 08, p 13943, 45강, 매 요청마다 accessToken과 apiKey를 함께 보내는 방식, 이제 accessToken 갱신에 대한 책임이 백엔드에 있다." },
    { "id": "vUHYN8WVhLc", "title": "25 01 08, p 13943, 46강, 매 요청마다 accessToken과 apiKey를 함께 보내는 방식의 단점" },
    { "id": "VgzVcpHl62g", "title": "25 01 08, p 13943, 47강, 각 키별 탈취당했을 때의 대응방안" },
    { "id": "HyUn8Lkybck", "title": "25 01 08, p 13943, 48강, XSS 공격에 대한 설명" },
    { "id": "oImZLaLhRG4", "title": "25 01 09, p 13943, 49강, POSTMAN에서 로그인 API 요청 후 엑세스 토큰을 얻고 그것으로 로그인 처리 하는 방법" },
    { "id": "DpUwASw-8aU", "title": "25 01 09, p 13943, 50강, 로그인 상태에서 존재하지 않는 엔드포인트에 접근시 404" },
    { "id": "vXCvlhUJEGY", "title": "25 01 09, p 13943, 51강, Authorization 헤더에 토큰 2개(형식 : `${apiKey} ${accessToken}`) 를 넣어서 요청하는 방식으로 변경" },
    { "id": "gJ8iC9VDMik", "title": "25 01 09, p 13943, 52강, `${apiKey} EMPTY` 와 같은 이상한 엑세스 토큰이 포함된 Authorization 헤더를 사용하는 것은 개발자만 해야한다." },
    { "id": "0BXguhIpu4Y", "title": "25 01 09, p 13943, 53강, 쿠키는 단순히 헤더이다. 다만 거기에 자동기능이 들어있을 뿐" },
    { "id": "Aqn4_Xrafmk", "title": "25 01 09, p 13943, 54강, 서버에서 쿠키를 굽는(만드는) 방법, 응답 헤더에 쿠키를 추가하는 방법" },
    { "id": "rytO6Kuc1sQ", "title": "25 01 09, p 13943, 55강, 쿠키는 브라우저에서만 되고 안드 앱, iOS 앱에서는 기본적으로는 안됩니다. 우리 백엔드는 최대한 다양한 클라이언트에서 로그인 되어야 합" },
    { "id": "6gB3ngZx-Cg", "title": "25 01 09, p 13943, 56강, setCookie 기능을 추후 컨트롤러 뿐 아니라 필터/인터셉터에서도 사용할 수 있기 때문에 Rq에서 구현했습니다." },
    { "id": "IhsYYYOel4U", "title": "25 01 09, p 13943, 57강, CustomAuthenticationFilter 에서 Authorization 헤더에 인증정보가 없다면 쿠키에서도 찾아보도록" },
    { "id": "ZXueZU_Xeno", "title": "25 01 09, p 13943, 58강, rq.setHeader 함수 도입" },
    { "id": "6si5qOXs8vg", "title": "25 01 09, p 13943, 59강, CustomAuthenticationFilter 리팩토링, 1st" },
    { "id": "DKIh-UUOpoQ", "title": "25 01 09, p 13943, 60강, CustomAuthenticationFilter 리팩토링, 2nd, AuthTokens 레코드 도입" },
    { "id": "sJ9_UVHLhSo", "title": "25 01 09, p 13943, 61강, Rq.findByActor 함수 도입, rq.getActor 만으로는 안될 때 사용됨" },
    { "id": "XpqOTtXmSQ0", "title": "25 01 09, p 13943, 62강, 로그인 성공시 응답 쿠키에 accessToken 과 apiKey 가 있는지 테스트케이스에서 체크" },
    { "id": "mmB39yhruqM", "title": "25 01 09, p 13943, 63강, 로그아웃에 대한 테스트케이스 작성, HTTP ONLY 쿠기 설명, 로그아웃을 굳이 서버에서 해야하는 이유" },
    { "id": "YkiX5DHKb60", "title": "25 01 09, p 13955, 2강, slog 13943 수업의 63강 소스코드를 복사해서 프로젝트에 적용" },
    { "id": "1iV_9GkTuVc", "title": "25 01 09, p 13955, 3강, springDoc 의존성 추가, 시큐리트에서 anyRequest 가 아니라 `api/*/**` 에 대한 요청만 인증요구하도록 설정" },
    { "id": "SlCvkfDj5uk", "title": "25 01 09, p 13955, 4강, 홈 컨트롤러 추가" },
    { "id": "igcAnPr13A8", "title": "25 01 09, p 13955, 5강, OPEN API 문서를 2개의 그룹으로 분리, apiV1, controller" },
    { "id": "qSa_zAPLdnY", "title": "25 01 09, p 13955, 6강, HomeController 관련 문서 꾸미기" },
    { "id": "WkUI7K9fxAI", "title": "25 01 09, p 13900, 17_15_09" },
    { "id": "IHSCxohz5d8", "title": "25 01 09, p 13900, 17_21_17" },
    { "id": "aETvz0OcAcs", "title": "25 01 09, p 13900, 17_25_13" },
    { "id": "dUrvQllgBdU", "title": "25 01 09, p 13900, 17_28_52" },
    { "id": "TGb0GRtT7po", "title": "25 01 09, p 13900, 17_38_56" },
    { "id": "DFT5DSVmW_U", "title": "25 01 09, p 13900, 17_43_53" },
    { "id": "nshU9d9VM68", "title": "25 01 10, p 13955, 13강, 우리가 로그인 시 쿠키를 사용하기 때문에 OPEN API 문서에서 추가적인 구현 없이 로그인/로그아웃이 가능하다." },
    { "id": "nUCWrUCMH-s", "title": "25 01 10, p 13955, 14강, @SecurityScheme 을 통해서 OPEN API 문서상에서 헤더(Authorization) 인증 방식도 가능하도록 허용" },
    { "id": "SYEeOhyFrxg", "title": "25 01 10, p 13955, 15강, /v3/api-docs/apiV1 로 접속하면 apiV1 그룹의 모든 API 정보를 json 형태로 볼 수 있다." },
    { "id": "rxeceamBbEs", "title": "25 01 10, p 13955, 16강, 테스트 모드와 운영 모드에서 돌아가지 않고 오직 개발모드에서만 실행되는 ApplicationRunner" },
    { "id": "A4uzYxpzMw8", "title": "25 01 10, p 13955, 17강, 개발모드에서 /v3/api-docs/apiV1 의 내용을 apiV1.json 파일로 다운로드" },
    { "id": "zVss6jwAZs4", "title": "25 01 10, p 13955, 18강, node.js는 nvm을 통해서 설치하는게 좋습니다." },
    { "id": "6SQzY0139Us", "title": "25 01 10, p 13955, 19강, nvm을 이용해서 최신 node.js 설치" },
    { "id": "71e6Y91iuK8", "title": "25 01 10, p 13955, 20강, node 설치 후 기본적으로 해야하는 세팅 진행" },
    { "id": "rAkK0PdpCyY", "title": "25 01 10, p 13955, 21강, openapi-typescript를 이용해서 apiV1.json으로 통신에 필요한 타입스크립트 생성" },
    { "id": "ElWZkgXplUU", "title": "25 01 10, p 13955, 22강, 개발모드에서 스프링부트가 시작되거나 소스코드가 변경되면 자동으로 schema.d.ts 재생성" },
    { "id": "ZuIG1zcfXKc", "title": "25 01 10, p 13955, 23강, schema.d.ts를 프론트엔드 프로젝트로 이동" },
    { "id": "ABDQcbTBcWQ", "title": "25 01 10, p 13955, 24강, 검색어 타입에 ENUM 도입, 해당 내용이 타입스크립트에까지 잘 반영되는지 확인" },
    { "id": "aNcTd3UKoJk", "title": "25 01 10, p 13958, 1강, 백, slog 13955 수업의 24강 소스코드를 복사해서 프로젝트에 적용" },
    { "id": "EmMYhU_bsCo", "title": "25 01 10, p 13958, 2강, 백, GIT PUSH" },
    { "id": "jDIv8FfqcKY", "title": "25 01 10, p 13958, 3강, 프, next.js 15 설치" },
    { "id": "Qf61NYYMtx4", "title": "25 01 10, p 13958, 4강, 프, frontend/src/lib/backend/apiV1/schema.d.ts 파일 추가" },
    { "id": "prUqbg7uRMU", "title": "25 01 10, p 13958, 5강, 프, `npm run dev` 로 개발서버 뛰우기" },
    { "id": "fInHu3caIQE", "title": "25 01 10, p 13958, 6강, 프, Prettier 익스텐션 설치, format on save 켜기, tsx의 기본 포메터를 Prettier로 설정" },
    { "id": "YgCJGWPobRQ", "title": "25 01 10, p 13958, 7강, 프, layout.tsx 작업 : lang 변경, 헤더/푸터 추가" },
    { "id": "8kCIzuptQUE", "title": "25 01 10, p 13958, 8강, 프, layout.tsx 작업 : body 의 높이는 최소 화면의 높이보다 만큼은 되어야 한다." },
    { "id": "kTDt5QzTMy0", "title": "25 01 10, p 13958, 9강, 프, 테일윈드 설명, 테일윈드 임의문법" },
    { "id": "bBSmhkAsLn8", "title": "25 01 10, p 13958, 10강, 프, CSS FLEX 문법은 꼭 학습하세요." },
    { "id": "atZ6C-FkS-4", "title": "25 01 10, p 13958, 11강, 프, flex로 레이아웃 작업" },
    { "id": "TwhQAHVQQlY", "title": "25 01 10, p 13958, 12강, 프, 자기소개 페이지 추가, Next.js 라우팅 시스템 학습" },
    { "id": "5wmiSFJe7pc", "title": "25 01 10, p 13958, 13강, 프, 리액트에서는 a 태그 대신 Link 태그를 이용해야 초고석 페이지 이동이 가능하다." },
    { "id": "Ew32RPg4FOk", "title": "25 01 10, p 13958, 14강, 프, /post/list 에서 글 목록 출력" },
    { "id": "CWUML3O3I14", "title": "25 01 10, p 13900, 29강, applicationContext.beanDefinitions @Bean 으로 생성되는 빈의 정보들도 담아야 한다." },
    { "id": "saFS2V-jw_I", "title": "25 01 10, p 13900, 30강, 정말 복잡한 상황을 만들어보자." },
    { "id": "WzlvPV7J4xc", "title": "25 01 10, p 13900, 31강, 이제 마무리 완성할 차례" },
    { "id": "CEVnfEB03zw", "title": "25 01 10, p 13900, 32강, 여러 생성자 중에서 @Autowired 붙은것을 우선적으로 사용" },
    { "id": "9wDZe577Qeo", "title": "25 01 10, p 13900, 33강, @Autowired 필드주입" },
    { "id": "-gCQ1y1mZXY", "title": "25 01 13, p 13958, 15강, 프, boolean 타입은 출력될 때 사라집니다." },
    { "id": "4EZ06HFQ4yU", "title": "25 01 13, p 13958, 16강, 프, 안전성을 높히기 위해서 통신에 사용되는 데이터 타입을 정의" },
    { "id": "qp9HaRTMtqc", "title": "25 01 13, p 13958, 17강, 프, 스프링부트의 OPEN API 문서를 기반을 자동생성된 통신 스키마관련 타입 정보를 활용" },
    { "id": "culBReLygtU", "title": "25 01 13, p 13958, 18강, 프, components[\"schemas\"][\"PageDtoPostDto\"] 도입" },
    { "id": "IdBFmvxU0hE", "title": "25 01 13, p 13958, 19강, 백, @NonNull로 타입스크립트에서 nullable 제거, VS 코드에서 타입스크립트 재시작 하는 방법" },
    { "id": "Pje9j5cGXD0", "title": "25 01 13, p 13958, 20강, 백, API 응답 DTO의 모든 필드에 @NonNull 어노테이션 추가" },
    { "id": "j3GkPP2ndIY", "title": "25 01 13, p 13958, 21강, 프, 검색기능 추가" },
    { "id": "fa4X7w8i8DA", "title": "25 01 13, p 13958, 22강, 프, `const { searchKeyword = \"\", searchKeywordType = \"title\" } = await search" },
    { "id": "tZ90zlmnro4", "title": "25 01 13, p 13958, 23강, 프, openapi-fetch 라이브러리 적용하여 fetch의 결과 뿐 아니라 fetch 코드도 실수 없이 작성" },
    { "id": "LxHXTp3FRIk", "title": "25 01 13, p 13958, 31강, 프, page.tsx 의 주 역할은 fetch, ClientPage.tsx의 주 역할은 UI 렌더링" },
    { "id": "mxDKGdrf8Hk", "title": "25 01 13, p 13958, 32강, 프, `e.preventDefault();` 를 붙이면 폼의 전송이 막힙니다." },
    { "id": "QIgmcg2NvyU", "title": "25 01 13, p 13958, 33강, 프, useRouter 이용해서 form 검색 시 페이지 수준의 리렌더링이 아닌 부드럽게 처리" },
    { "id": "vbpfTlzXQ8g", "title": "25 01 13, p 13958, 34강, 프, 게시물 상세페이지, 현재는 글 번호만 나옴" },
    { "id": "Alls3C9aNgQ", "title": "25 01 13, p 13958, 35강, 프, 게시물 상세페이지, 제목, 내용, 작성일, 수정일" },
    { "id": "wxNGOgZw2GM", "title": "25 01 13, p 13958, 36강, 백, @NonNull 때문에 오류에 대한 응답에서 data 가 null 이면 안된다. Empty 도입" },
    { "id": "jogAX_gI3cA", "title": "25 01 13, p 13958, 37강, 백, 아무 예외 핸들러에 `@ResponseStatus(HttpStatus.BAD_REQUEST)` 붙이면 SpringDoc이 학습함" },
    { "id": "_0j7YTu7huk", "title": "25 01 13, p 13958, 38강, 백, 스프링부트가 관리하는 ObjectMapper를 Util 클래서 주입, static 변수에 빈 주입하는 방법" },
    { "id": "binhtRY_c5w", "title": "25 01 14, p 13958, 39강, 프, 상단 메뉴에 로그인 페이지 추가" },
    { "id": "9en_yp5Av54", "title": "25 01 14, p 13958, 40강, 프, layout.tsx 에서 ClientLayout.tsx 분리" },
    { "id": "7D3TTpvIZks", "title": "25 01 14, p 13958, 41강, 프, 로그인 페이지에서 로그인 폼 구현, CORS 문제로 인해 실패" },
    { "id": "WSe73m2Eve0", "title": "25 01 14, p 13958, 42강, 프, 오직 브라우저에서 타 도메인 서버로 fetch 요청할 때 CORS 문제가 발생한다." },
    { "id": "cxOXDN84lFY", "title": "25 01 14, p 13958, 43강, 백, 특정 도메인에 대해서 CORS 허용" },
    { "id": "e68LUlgAMfQ", "title": "25 01 14, p 13958, 44강, 프, `credentials: \"include\"` 옵션으로 타도메인 fetch에 대한 쿠키작동이 잘 되도록" },
    { "id": "6MCwOYrjngE", "title": "25 01 14, p 13958, 45강, 프, 내 정보 페이지의 내용을 클라이언트 컴포넌트에서 fetch, 번거로움" },
    { "id": "SZQGPg7EFfE", "title": "25 01 14, p 13958, 46강, 프, 서버 컴포넌트에서 fetch, 편함, 대신 브라우저에서 받아온 쿠키를 받아서 백엔드로 fetch할 때 적용해야 함" },
    { "id": "_91tfK6I-X0", "title": "25 01 14, p 13958, 47강, 프, 로그아웃" },
    { "id": "8qeYkZTVwwo", "title": "25 01 14, p 13958, 48강, 프, layout 렌더링 시 로그인 상태에 따른 메뉴 노출" },
    { "id": "HFxrDL_OisQ", "title": "25 01 14, p 13958, 49강, 프, 로그인/로그아웃 후에 전체 페이지 리로드하여 layout 리렌더링 유발" },
    { "id": "0clORdaRKMk", "title": "25 01 14, p 13958, 50강, 프, 회원가입 후 로그인 페이지로 이동" },
    { "id": "NVXnCwcpdB0", "title": "25 01 15, p 13988, 1강, GITHUB FLOW 수업 시작합니다." },
    { "id": "_HtR8Yl9R1I", "title": "25 01 15, p 13988, 2강, GITHUB FLOW 예시" },
    { "id": "oZQ9vjRY1PA", "title": "25 01 15, p 13988, 4강, GITHUB FLOW 작업 4 ~ 5" },
    { "id": "hlowwDi5A-k", "title": "25 01 15, p 13988, 5강, GITHUB FLOW 작업 6 ~ 28" },
    { "id": "oWeJTyG02YI", "title": "25 01 15, p 13988, 3강, GITHUB FLOW 작업 1 ~ 3" },
    { "id": "Iyozz2vEDNc", "title": "25 01 15, p 13988, 6강, GITHUB FLOW 작업 29 ~ 33" },
    { "id": "2ZBTDhtQTKc", "title": "25 01 15, p 13836, 2강, VIM 사용법" },
    { "id": "3KlSlEZczio", "title": "25 01 15, p 13836, 3강, merge 에서 발생하는 충돌 해결방법" },
    { "id": "FpFXN0GASDQ", "title": "25 01 15, p 13836, 4강, rebase 에서 발생하는 충돌 해결방법" },
    { "id": "wJ6EKTcUU1g", "title": "25 01 15, p 13958, 51강, 프, 본인의 비밀글을 못 보는 버그 해결, page.tsx 에서 fetch 시 무조건 쿠키 적용" },
    { "id": "wcyYeVrNcbE", "title": "25 01 15, p 13958, 52강, 프, 글 쓰기" },
    { "id": "gCikVZzv4Dw", "title": "25 01 15, p 13958, 53강, 프, 글 수정" },
    { "id": "geR-7j3TGaM", "title": "25 01 15, p 13958, 54강, 프, 글 상세페이지에서 수정 페이지로 이동하는 링크버튼 추가" },
    { "id": "feQV9N6RF-8", "title": "25 01 15, p 13958, 55강, 프, 수정할 권한이 있는지 체크 후 수정버튼 노출" },
    { "id": "zFJOpaiTe6w", "title": "25 01 15, p 13958, 56강, 프, 삭제할 권한이 있는지 체크 후 삭제버튼 노출, 삭제 구현" },
    { "id": "QzH50rb8lqo", "title": "25 01 15, p 13958, 57강, 백, PostWithContentDto에 actorCanDelete, actorCanModify 추가" },
    { "id": "JKvzb13W_iE", "title": "25 01 15, p 13958, 58강, 프, checkActorCanDelete, checkActorCanModify 필드 활용하여 권한체크로직을 프론트에서 제거" },
    { "id": "siI16gskatU", "title": "25 01 16, p 153, 58강, 팀 프로젝트 초반에 일을 작게 나누기 애매하면 짝 프로그래밍이나 TF역할부여방법을 적용해보세요." },
    { "id": "ft5zlQjCbKw", "title": "25 01 16, p 13836, 5강, GITHUB PROJECT 도입 없이 리포지터리의 이슈게시판만으로 할일을 관리하는 방법" },
    { "id": "k1vwXB-K8RI", "title": "25 01 16, p 13836, 6강, GITHUB PROJECT 도입하여 리포지터리의 이슈게시판만에 접속하지 않고도 이슈 칸반 스타일로 관리하는 방법" },
    { "id": "URpnfBMFpO8", "title": "25 01 15, p 13988, 7강, 시나리오 시작, 1 단계 : 팀장이 리포지터리와 프로젝트를 생성 및 세팅" },
    { "id": "QbvMcx5lmt0", "title": "25 01 15, p 13988, 8강, 시나리오, 2 단계 : 팀장이 할일을 생성하고 사원이 수행" },
    { "id": "C5Brfewj5P0", "title": "25 01 15, p 13988, 9강, 시나리오, 3 단계 : 팀장이 할일을 등록하고 팀장이 진행, PR 리뷰 통과 못한 상태" },
    { "id": "g5SgKK2kfBc", "title": "25 01 15, p 13988, 10강, 시나리오, 4 단계 : 팀장이 새 할일을 등록하고 사원이 진행하다가 `git pull origin enhancement/3`" },
    { "id": "wJSBJsVk4KA", "title": "25 01 15, p 13988, 11강, 시나리오, 5 단계(마지막) : 팀장이 기존의 할일을 완료" },
    { "id": "3hfKMJQCmps", "title": "25 01 17, p 13999, 09_11_08" },
    { "id": "p19dyYiz_Q8", "title": "25 01 17, p 13999, 09_20_11" },
    { "id": "AChOrd63XJ8", "title": "25 01 17, p 13999, 09_26_05" },
    { "id": "mc4ourwcaDk", "title": "25 01 17, p 13999, 09_31_20" },
    { "id": "WSTWIbAiMO4", "title": "25 01 17, p 13999, 09_40_22" },
    { "id": "Y7qGJz2pHG4", "title": "25 01 17, p 13999, 10_19_26" },
    { "id": "76WZ_2pELl0", "title": "25 01 17, p 13999, 10_42_23" },
    { "id": "i5a60rvE_DE", "title": "25 01 17, p 13999, 11_09_08" },
    { "id": "xyk9ZsqzIV4", "title": "25 01 17, p 13999, 11_15_12" },
    { "id": "MIVv_b0Wz6o", "title": "25 01 17, p 13999, 11_23_03" },
    { "id": "LLM7Ht-xy_0", "title": "25 01 17, p 13999, 11_31_44" },
    { "id": "bw9c1xf5VQo", "title": "25 01 17, p 13999, 1강, slog 13958 수업의 58강 소스코드를 복사해서 프로젝트에 적용" },
    { "id": "Liqo9f0bMRo", "title": "25 01 17, p 13999, 2강, 백, 어플리케이션의 이름과 일부 패키지를 새 프로젝트명에 맞게 변경" },
    { "id": "0wfBzh2oqyw", "title": "25 01 17, p 13999, 3강, 백, GIT PUSH" },
    { "id": "EyQGqcC23RA", "title": "25 01 17, p 13999, 4강, 백, 엑세스 토큰 만료기간 5초로 변경, 현재 브라우저의 쿠키에서 엑세스 토큰이 만료되어도 자동으로 갱신되지 않는 버그 발생" },
    { "id": "YmzTjRxxjOg", "title": "25 01 17, p 13999, 5강, 프, Next.js의 서버 컴포넌트에서 수행된 백엔드 API 호출은 당연하게도 브라우저의 쿠키에 영향을 주지 않는다." },
    { "id": "-OAzXhmXCgQ", "title": "25 01 17, p 13999, 6강, 프, Next.js의 서버 컴포넌트에서는 응답 헤더를 절대로 수정할 수 없다. middleware.ts 를 이용해서 문제를 해결해야 한다." },
    { "id": "KK04E0NdPYU", "title": "25 01 17, p 13999, 7강, 프, middleware.ts 에서 내 정보 API를 호출하여 응답으로 SetCookie 를 받는다음 브라우저에게 토스" },
    { "id": "eWmQKIDsnEM", "title": "25 01 17, p 13999, 8강, 프, 브라우저에게 쿠키를 토스할 때 보안설정정보도 그대로 유지되도록, apiKey, accessToken 쿠키만 승계하도록" },
    { "id": "aAL4JKl5F5E", "title": "25 01 17, p 13999, 9강, 프, middleware를 통해서 선언적인 인증/인가 처리" },
    { "id": "D6KKq-rUKRg", "title": "25 01 17, p 13999, 10강, 프, accessToken이 만료되었는지 확인하는 로직을 추가" },
    { "id": "d9kDKmti1W4", "title": "25 01 17, p 13999, 11강, 프, 만료되었을 때만 middleware에서 fetch 후 accessToken을 브라우저로 넘기는 작업 수행" },
    { "id": "E5rVkb3lJ30", "title": "25 01 17, p 13999, 12강, 프, middleware 리팩토링" },
    { "id": "QzIg1vYU8SY", "title": "25 01 19, p 13999, 22_22_06" },
    { "id": "84heTyvOU-Y", "title": "25 01 19, p 13999, 22_38_53" },
    { "id": "GYMSSd58Oxs", "title": "25 01 20, p 13999, 14강, 백, accessToken에 id, username 뿐 아니라 nickname 도 추가하자. 쓸데없는 Member 엔티티의 posts 필" },
    { "id": "Tt72-J7sH6I", "title": "25 01 20, p 13999, 15강, 백, 이제 글쓰기, 내 정보 조회에서 SELECT 가 아예 발생하지 않도록 개선" },
    { "id": "yntgP8pUubY", "title": "25 01 20, p 13999, 16강, 프, 이제 layout.tsx, me/page.tsx 에서 백엔드의 내 정보 조회를 하지 않고 accessToken 에서 정보를 얻도록" },
    { "id": "OPkskJMU3Bw", "title": "25 01 20, p 13999, 17강, 프, src/lib/auth/tokens.ts 에 parseAccessToken 함수 정의하여 중복제거" },
    { "id": "MGvawoZov5E", "title": "25 01 20, p 13999, 18강, 백, accessToken 만들 때 프론트를 위해서 거기에 권한들 정보도 추가" },
    { "id": "fgvb12Ls9SA", "title": "25 01 20, p 13999, 19강, 프, 관리자만 접속 할 수 있는 페이지(회원 리스트) 추가" },
    { "id": "nMh4tYkztrE", "title": "25 01 20, p 13999, 20강, 백, 관리자만 조회할 수 있는 회원 리스트 API 구현" },
    { "id": "-h3_W24p0EQ", "title": "25 01 20, p 13999, 21강, 백, 회원 리스트 API에 검색기능 추가" },
    { "id": "rTjsNTwvtrw", "title": "25 01 20, p 13999, 22강, 프, 관리자 페이지에서 회원 목록/검색기능 구현" },
    { "id": "zc-txbtRbNc", "title": "25 01 20, p 13999, 23강, 백, 회원 다건조회에서 username 도 노출하도록" },
    { "id": "oF-YuZWxNKI", "title": "25 01 20, p 13999, 24강, 프, 회원목록에서 username도 노출하도록 처리" },
    { "id": "AWcx4WuyihQ", "title": "25 01 20, p 13999, 25강, 백, 회원 단건조회, ApiV1AdmMemberController 도입" },
    { "id": "G7Vp_H-inco", "title": "25 01 20, p 13999, 26강, 프, 관리자 페이지에서 회원 단건조회 기능 구현" },
    { "id": "ObWv2I_tr_U", "title": "25 01 20, p 13999, 27강, 프, 내 글 페이지 구현" },
    { "id": "jUKunn6F684", "title": "25 01 20, p 13999, 28강, 백, 내 정보 수정 API 구현" },
    { "id": "E68aHzTPNpo", "title": "25 01 20, p 13999, 29강, 프, 내 정보 수정 폼 구현" },
    { "id": "nm7sZV_-Wqg", "title": "25 01 20, p 13999, 30강, 프, 내 정보 수정 폼 처리" },
    { "id": "RNrCiJM0JjQ", "title": "25 01 20, p 13999, 31강, 백, 내 정보 수정 후, 바뀐 정보를 기반으로한 새 accessToken 쿠키 생성" },
    { "id": "ngAYxQI0nGo", "title": "25 01 20, p 13999, 14_30_06" },
    { "id": "0OeqMFFrQeE", "title": "25 01 20, p 13999, 14_38_18" },
    { "id": "LPsrZXRriaY", "title": "25 01 20, p 14005, 1강, slog 13999 수업의 33강 소스코드를 복사해서 프로젝트에 적용" },
    { "id": "XcwRBb8WG-M", "title": "25 01 20, p 14005, 2강, 백, 어플리케이션의 이름과 일부 패키지를 새 프로젝트명에 맞게 변경" },
    { "id": "mkhvShtKd-M", "title": "25 01 20, p 13999, 3강, 백, GIT PUSH" },
    { "id": "VVdUfPc8Gzs", "title": "25 01 20, p 14005, 4강, 프, Next.js 15 프로젝트 생성, 터보팩 사용" },
    { "id": "Ju5Vx4fDc9c", "title": "25 01 20, p 14005, 5강, 프, 프리텐다드 폰트를 local 폰트로 설치" },
    { "id": "hT6oREK_ASY", "title": "25 01 20, p 14005, 6강, 프, 폰트어썸 설치" },
    { "id": "mmXTPUKgPUo", "title": "25 01 20, p 14005, 7강, 프, 샤드CN 설치" },
    { "id": "-YRzpwYeK_8", "title": "25 01 22, p 14005, 8강, 프, Next.js 에서 샤드CN 다크모드 적용, 홈에 카카오 로그인 버튼 추가" },
    { "id": "u5HYloSKY6Q", "title": "25 01 22, p 14005, 9강, 프, 테일윈드에 특수 기능, on, group-on, peer-on 추가구현" },
    { "id": "Ut0XggckStQ", "title": "25 01 22, p 14005, 10강, 프, 이왕이면 클라이언트 컴포넌트가 좋다, 백엔드 실행하여 lib/backend/apiV1/schema.d.ts 생성" },
    { "id": "cw5_fvOl9cY", "title": "25 01 22, p 14005, 11강, 프, 관리자 로그인 기능 구현, 참고로 일반 사용자는 소셜로그인만 사용가능" },
    { "id": "bpDochGtEW4", "title": "25 01 22, p 14005, 12강, 프, 관리자 로그인 기능 구현" },
    { "id": "1n-u8VMq1MA", "title": "25 01 23, p 14005, 13강, 프, 샤드CN은 부트스트랩보다 훨씬 좋습니다. 안쓰면 손해입니다." },
    { "id": "zziAEEIIp5Q", "title": "25 01 23, p 14005, 14강, 프, openapi-fetch는 서버와의 통신 로직을 자동으로 만들어주는 라이브러리 입니다. 안쓰면 손해입니다." },
    { "id": "nKkTMMtTzJU", "title": "25 01 23, p 14005, 15강, 프, 비지니스 로직이 포함되어 있는 UI 컴포넌트는 비지니스 컴포넌트이다. LoginForm" },
    { "id": "y13BB5kdfr0", "title": "25 01 23, p 14005, 16강, 프, 정해진 폴더 이외에 구현한 컴포넌트에서 기본적으로는 테일윈드가 작동하지 않는다." },
    { "id": "Uvm2K8cuizs", "title": "25 01 23, p 14005, 17강, 백, 카카오 로그인을 위해서 카카오 개발자에서 앱 생성, 카카오 로그인을 위한 설정, application-secret.yml 도입" },
    { "id": "b6Fb1r89lOU", "title": "25 01 23, p 14005, 18강, 백, SpringSecurity 에서 oauth2Login 활성화" },
    { "id": "JPDXv54tg4U", "title": "25 01 23, p 14005, 19강, 백, Spring OAuth2 Client을 통한 카카오 로그인 과정 설명" },
    { "id": "L1IyryxGgog", "title": "25 01 23, p 14005, 20강, 백, DefaultOAuth2UserService 의 구현체를 추가하여 SecurityUser가 생성되도록" },
    { "id": "Q0zjuNrzoKU", "title": "25 01 23, p 14005, 21강, 백, 최초 로그인이면 가입, 그렇지 않으면 회원정보 수정으로 처리" },
    { "id": "Ykv8MOrnPhk", "title": "25 01 23, p 14005, 22강, 백, 회원이 프로필 이미지 URL도 가지도록, MemberDto에도 반영" },
    { "id": "lgkjFUPfQqE", "title": "25 01 23, p 14005, 23강, 백, 로그인 후 생성되는 SecurityUser 정보 제대로 입력, 프론트로 돌아오도록 처리" },
    { "id": "bJ2iNGestUY", "title": "25 01 23, p 14005, 24강, 백, OAuth 로그인의 표준 파라미터인 state를 이용해서 최종적으로 돌아갈 프론트엔드 주소 설정" },
    { "id": "Q28YWbriLdo", "title": "25 01 23, p 14005, 25강, 백, 로그아웃을 해도 계속 로그인이 유지되는 이유는 세션 때문, 세션끄기" },
    { "id": "kme1uG8j_KA", "title": "25 01 23, p 14005, 26강, 프, 로그인한 회원의 프로필 이미지 노출" },
    { "id": "o_lP5slMDmM", "title": "25 01 23, p 14005, 27강, 백, 테스트케이스에서 getProfileImgUrl 대신 getProfileImgUrlOrDefault 사용하여 통과" },
    { "id": "hecoBHkIUxQ", "title": "25 01 23, p 14005, 28강, 프, react-hook-form 도입하여 유효성 체크결과를 조금 더 우아하게 표현" },
    { "id": "mi7z-0_X8RE", "title": "25 01 23, p 14005, 29강, 프, react-hook-form에 zod 적용하여 선언적인 유효성 체크 도입" },
    { "id": "XC3v2JH2PjA", "title": "25 01 23, p 14005, 30강, 프, Form 도입하여 유효성과련 코드량을 더 줄임" },
    { "id": "q_Glya_pCIE", "title": "25 01 24, p 14005, 31강, 프, PC 모니터의 해상도와 모바일 디스플레이의 해상도가 다르기 때문에 똑같은 사이즈의 이미지의 크기가 다르게 나온다." },
    { "id": "Mjj9QN2XoUY", "title": "25 01 24, p 14005, 32강, 프, viewport 설정(width=device-width)을 통해서 이미지가 모든 기기에서 똑같은 사이즈로 나오도록, 반응형에서는 필" },
    { "id": "Y_N53gbC3kA", "title": "25 01 24, p 14005, 33강, 프, 웹 이미지를 3배수로 만들면 모든 디바이스에서 이미지가 깨지지 않는다." },
    { "id": "Am6IhMPF5_c", "title": "25 01 24, p 14005, 34강, 프, NextImage 도입하여 프로필 이미지가 어떤 디스플레이에서도 품질저하가 없도록" },
    { "id": "sUuXqjOhHpg", "title": "25 01 24, p 14005, 35강, 프, nextConfig 에서 domains(deprecated) 대신 remotePatterns 사용" },
    { "id": "VenWmAbdHlc", "title": "25 01 24, p 14005, 36강, 프, 테마토글버튼을 비지니스 컴포넌트로 만들어서 ClientLayout.tsx 으로 부터 분리" },
    { "id": "AUDCosio2fA", "title": "25 01 24, p 14005, 37강, 프, MeMenuButton을 비지니스 컴포넌트로 만들어서 ClientLayout.tsx 으로 부터 분리" },
    { "id": "rmd5py-4FRE", "title": "25 01 24, p 14005, 38강, 프, 테마토글버튼의 드롭다운메뉴아이템에 아이콘 추가, 꾸미기" },
    { "id": "pfX_X5jGLPw", "title": "25 01 24, p 14005, 39강, 프, 일반 사용자에게 필요없는 관리자 로그인 버튼을 하단바로 이동" },
    { "id": "yRWBHtjmd6w", "title": "25 01 24, p 14005, 40강, 프, lg를 기준으로 NarrowHeaderContent 와 WideHeaderContent 가 교체되도록" },
    { "id": "LwFE2B-PShQ", "title": "25 01 24, p 14005, 41강, 프, Logo 컴포넌트 만들어서 Wide 와 Narrow 에 적용" },
    { "id": "eTwlUjWN090", "title": "25 01 24, p 14005, 42강, 프, Wide 와 달리 Narrow 에는 공간이 부족하다." },
    { "id": "gp889pblq_w", "title": "25 01 24, p 14005, 43강, 프, 샤드CN 드로어 도입" },
    { "id": "gEh05u4db-Q", "title": "25 01 24, p 14005, 44강, 프, 드로어 입체 효과, 드로어에 전체 메뉴 구성" },
    { "id": "sx9y-jJ5cHI", "title": "25 01 24, p 14005, 45강, 프, 드로어의 버튼을 클릭하면 드로어가 닫히도록, 드로어 내용을 hr 로 구분" },
    { "id": "WzgSj4s4VmA", "title": "25 01 24, p 14005, 46강, 프, useGlobalLoginMember 훅 도입, logout 함수 중복 제거" },
    { "id": "tMxFDiJuA4g", "title": "25 01 24, p 14005, 47강, 프, `npm run typecheck` 명령으로 소스코드 전체대상으로 타입스크립트 문법오류 체크" },
    { "id": "AILoc3X5rq0", "title": "25 01 24, p 14005, 48강, 프, eslint 가 샤드CN 컴포넌트를 무시하도록 설정, eslint 경고 제거작업" },
    { "id": "KlzDJ8oOGxA", "title": "25 01 24, p 14005, 49강, 프, VS CODE 에서 소스코드 저장시 자동으로 import 부분을 정렬해주는 라이브러리 적용" },
    { "id": "oNIpAWJF118", "title": "25 01 24, p 14005, 50강, 프, logout 후 홈으로 이동하는 logoutAndHome 이라는 함수를 loginMember.ts 에서 작성 후 공유" },
    { "id": "FZvSk0gEHXw", "title": "25 01 24, p 14005, 51강, 프, PC 모드로의 진입점을 lg가 아니라 sm 으로, 너무 넓어지지 않도록 container 적용" },
    { "id": "i5njbugrsNU", "title": "25 01 24, p 14012, 17_03_14" },
    { "id": "uhNa6OY4pvg", "title": "25 01 24, p 14012, 17_11_13" },
    { "id": "ClaHDkZW2Kc", "title": "25 01 24, p 14012, 17_38_11" },
    { "id": "_uaCnYyPQC8", "title": "25 01 24, p 14005, 52강, 프, src/lib/backend/apiV1/schema.d.ts 도 린트와 포메팅 대상에서 제외" },
    { "id": "CvgacPkX7M4", "title": "25 01 25, p 14012, 00_04_23" },
    { "id": "CDXr-NWN0HA", "title": "24 08 04, p 13656, 6강, Row, mainAxisAlignment, ElevatedButton, Divider" },
    { "id": "p-EXeK0SmUo", "title": "24 08 04, p 13656, 5강, useState 변수의 수정에서 불변성을 지켜야 합니다" },
    { "id": "-dvC6uBIIGc", "title": "24 08 04, p 13656, 4강, Column" },
    { "id": "skAkOkcIN-k", "title": "24 08 04, p 13656, 3강, Text, GestureDetector, useState" },
    { "id": "rxAQv0Ruomw", "title": "24 08 04, p 13656, 2강, 시작점 다트패드를 공유해드립니다." },
    { "id": "WW5CepIYWyk", "title": "24 08 04, p 13656, 1강, 플러터 강좌 시작합니다  다트패드로 진행합니다." },
    { "id": "D7zvNP3zf2M", "title": "24 08 04, p 13656, 10강, ListView.builder, ListTile, Scaffold" },
    { "id": "3YSx6A0WGpo", "title": "24 08 04, p 13656, 9강, SingleChildScrollView 와 Column 의 조합 대신 ListView" },
    { "id": "D2BUJzHn06k", "title": "24 08 04, p 13656, 8강, SingleChildScrollView in Column" },
    { "id": "jBXo1oMmGns", "title": "24 08 04, p 13656, 7강, 숫자를 증가감소 시키고 그것을 기록" },
    { "id": "NkxnMolpPQQ", "title": "24 08 10, p 13678, 3강, repl 가입 및 활용 방법, 최고로 편리한 C언어 실습환경입니다." },
    { "id": "XEYQCAsH1oY", "title": "24 08 10, p 13678, 4강, 강사가 준비한 문제를 풀고 정답을 확인하는 방법, 새로운 연습장이 안만들어지면 기존 연습장을 재활용해야 합니다." },
    { "id": "u7QAVVpUnOc", "title": "24 08 10, p 13678, 5강, repl 에서 새 연습장 만들기나 fork 가 안되는 경우에는 기존 연습장을 재활용해야 합니다." },
    { "id": "yu6g3q48vsA", "title": "24 08 10, p 13678, 2강, 한 눈에 끝내는 C언어 기초를 진행하는 방법, 복습용으로 최고입니다." },
    { "id": "F6ptoUgXGdU", "title": "24 08 11, p 13678, 6강, 코딩을 할 때 중간에 자주 실행해줘야 합니다." },
    { "id": "2NjZa1lrceQ", "title": "24 08 11, p 13678, 7강, 평일에 문제를 한번씩 다시 풀어보세요." },
    { "id": "g6CLvNKkfkw", "title": "24 08 19, p 13693, 1강, 멋쟁이사자처럼 모작 시작합니다." },
    { "id": "QADUWZAS-Bw", "title": "24 08 19, p 13688, 2강, IDE 테마/키맵 세팅방법, 플러터 프로젝트 실행하는 방법" },
    { "id": "VXMFBWIwHUA", "title": "24 08 19, p 13688, 3강, 순수 다트 프로젝트 실행하는 방법" },
    { "id": "ug5SHEt0cdw", "title": "24 08 19, p 13688, 1강, 플러터 설치, 플러터 환경변수 세팅, 안드로이드 스튜디오 설치, 다트와 플러터 플러그인 설치" },
    { "id": "uhczQhMZunc", "title": "24 08 19, p 13693, 2강, 상단 광고바 시작" },
    { "id": "QfeSqbhpBlo", "title": "24 08 19, p 13693, 5강, 눈누에서 프리텐다드 폰트(웹폰트) 가져와서 적용" },
    { "id": "TlQnOmIVVzk", "title": "24 08 19, p 13693, 4강, 개발자 도구로 폰트 패밀리를 알아내서 적용" },
    { "id": "URMDa5ApcGk", "title": "24 08 19, p 13693, 6강, 이미지 가져와서 적용, BEM 명명법으로 CSS 클래스 이름 작명" },
    { "id": "fYtPnglLH2g", "title": "24 08 19, p 13693, 3강, 크롬 개발자 도구를 이용해서 로컬 스토리지의 데이터를 편집할 수 있습니다." },
    { "id": "dEKm5yJoOS4", "title": "24 08 19, p 13693, 8강, 우측 닫기 아이콘(SVG) 가져와서 높이 적용, 우측에 배치" },
    { "id": "rQnKn-5TkU8", "title": "24 08 19, p 13693, 7강, 여태까지의 과정을 다시 수행" },
    { "id": "-OV7ke50ybo", "title": "24 08 19, p 13693, 9강, 배경색, font-bold, cursor-pointer" },
    { "id": "vB2aLHdHsEI", "title": "24 08 19, p 13693, 11강, 테일윈드 3 x 의 JIT 기능을 이용해서 세밀한 CSS 처리" },
    { "id": "w-rQ9QzyKaY", "title": "24 08 19, p 13693, 10강, 테일윈드 적용, px-3" },
    { "id": "RyF8NfJx5Aw", "title": "24 08 19, p 13693, 12강, 여태까지의 과정을 테일윈드로 다시 수행" },
    { "id": "17M5LuK4E-U", "title": "24 08 20, p 13693, 17강, 최상위 엘리먼트의 태그를 a로 변경, a 안에 a가 있으면 안되니 기존의 a 엘리먼트는 태그 변경" },
    { "id": "8ppK2N8tOss", "title": "24 08 20, p 13693, 13강, top-ad-bar 에 con-min-w 도입하여 최소너비를 부여, 이제는 자식인 con 보다 작아지지 않는다." },
    { "id": "KcoCUrQqgVk", "title": "24 08 20, p 13693, 15강, 텍스트와 아이콘을 묶어서 gap 을 부여" },
    { "id": "LB0LFD2OWBo", "title": "24 08 20, p 13693, 14강, 이미지와 SVG를 적절한 폰트어썸 아이콘으로 변경" },
    { "id": "cpHcm4nKhfM", "title": "24 08 20, p 13693, 18강, 제이쿼리 도입, x 버튼 누르면 부모의 부모 엘리먼트를 제거" },
    { "id": "e-n9tH-ywR4", "title": "24 08 20, p 13693, 20강, onclick 에서 return false 추가하여 클릭된 엘리먼트가 클릭 사실을 부모 엘리먼트에게 전파하지 않도록" },
    { "id": "g7EakXd3Dfk", "title": "24 08 20, p 13693, 16강, 가장 우측의 x 버튼이 우측 벽에 어느정도 흡수되게 하여 레이아웃의 균형을 맞춤" },
    { "id": "iPp18CF8UxQ", "title": "24 08 20, p 13695, 1강, 인텔리제이 커뮤니티 다운로드, 설치, 초기세팅" },
    { "id": "yLBUSmWGeNk", "title": "24 08 20, p 13693, 19강, parent() 로 목표 엘리먼트를 찾으면 추후 HTML 구조 변경시 오류 발생 가능성 있음 closest() 도입" },
    { "id": "LDkDaO7hurQ", "title": "24 08 20, p 13693, 21강, 탑바 시작합니다." },
    { "id": "SwqnereBG_U", "title": "24 08 20, p 13693, 23강, NO테일윈드 방식으로 메뉴 1 구현" },
    { "id": "kMerwml0lrE", "title": "24 08 20, p 13693, 22강, 로고 완성" },
    { "id": "CkjWgxBM6ko", "title": "24 08 21, p 13693, 24강, 테일윈드 방식으로 메뉴 1 구현" },
    { "id": "8FP4Ju_RD_o", "title": "24 08 22, p 13693, 28강, 상단바 위에 광고바가 나와야 하는 상황, 상단바가 화면을 따라다니긴 하지만 상단에 애매한 여백이 있음" },
    { "id": "9Eyti6H3vRM", "title": "24 08 22, p 13693, 26강, 상단바 전체를 fixed" },
    { "id": "AJdTJPCYwwA", "title": "24 08 22, p 13693, 27강, 상단바 높이에 CSS 변수 적용, 이제는 높이를 변경할 때 오직 한군데만 고치면 됩니다." },
    { "id": "SqYEK0zgPmk", "title": "24 08 22, p 13693, 29강, sticky 도입으로 지저분한 부분 전부 제거" },
    { "id": "uQa2DYFFUv4", "title": "24 08 22, p 13693, 25강, 메뉴 2 구현, 우측 로그인 버튼 구현" },
    { "id": "0y8RTtFeiXo", "title": "24 08 23, p 13693, 40강, 이미지 호버시 커지도록, NO 테일윈드 방식" },
    { "id": "3fXnlEAmmC8", "title": "24 09 06, p 13693, 44강, 적응형 + 반응형을 원할 때는 .container, 단순한 반응형을 원할 때는 .con(직접구현)" },
    { "id": "7aAmsqn8bOI", "title": "24 08 22, p 13693, 31강, 슬라이더 바 시작하기, img 는 고유의 비율이 있기 때문에 화면너비의 변화에 따라서 높이가 자동으로 변함" },
    { "id": "EZFd_PBBKHQ", "title": "24 09 06, p 13693, 45강, 반응형 리스트로 변경, con-min-w 제거, con 을 max-width로 변경" },
    { "id": "GczY3pak-wc", "title": "24 08 23, p 13693, 33강, 슬라이더 컨트롤 구현" },
    { "id": "IeixDLWAzzw", "title": "24 08 23, p 13693, 34강, 슬라이더 컨트롤 포지셔닝, 음수마진 방식, 부작용 있음" },
    { "id": "dRheKpOrZBc", "title": "24 08 23, p 13693, 42강, 이미지 호버시 커지도록, 테일윈드 방식, 하지만 이미지에만 호버효과를 넣을 수 있다." },
    { "id": "NfIqQpfCIoQ", "title": "24 08 23, p 13693, 37강, 강좌 리스트 박스 구현 시작, 타이틀 구현" },
    { "id": "QJUXN-v2m4w", "title": "24 08 23, p 13693, 37강, 강좌 리스트 박스 구현 시작, 일단 이미지만 보여지도록" },
    { "id": "aAif1F-kHl4", "title": "24 08 23, p 13693, 35강, 슬라이더 컨트롤 포지셔닝, 유령화 방식, 부작용 없음" },
    { "id": "dNW1gqgKE4w", "title": "24 08 23, p 13693, 36강, 슬라이더 단계적 연습 방법" },
    { "id": "fYdI5jfhJ0c", "title": "24 09 06, p 13693, 43강, 샘플 이미지 라이브러리 픽섬" },
    { "id": "jIIiZ_c3Toc", "title": "24 08 23, p 13693, 32강, 텍스트 2개 배치" },
    { "id": "v3FBLqvuMvc", "title": "24 08 23, p 13693, 41강, 이미지 호버시 커지도록, 테일윈드 방식, group을 이용해서 li에 호버효과를 넣음" },
    { "id": "y4iy2fDdw0U", "title": "24 08 22, p 13693, 30강, 이전 소스코드24강에서 29강 소스코드까지 구현하는 방법" },
    { "id": "2ue5y9r44Mo", "title": "24 09 05, p 13718, 7강, 하나의 요소가 상황(화면의 너비)에 따라서 다양하게 달라지는 예제" },
    { "id": "8aLCOyaNn6E", "title": "24 09 05, p 13718, 1강, 고정형 레이아웃 사이트, 반응형 사이트(PC모바일 UI 지원, 모바일 UI만 지원)" },
    { "id": "HW70SYW_sWE", "title": "24 09 05, p 13718, 8강, 반응형 사이트의 .con 은 width 가 아니라 max-width 여야 합니다. 테일윈드의 container 를 쓰셔도 됩니다." },
    { "id": "KvTxGO2AjzQ", "title": "24 09 05, p 13718, 4강, 테일윈드를 통해서 PC 탑바와 모바일 탑바를 스위칭, 테일윈드의 5가지 브레이크 포인트 : sm, md, lg, xl, 2xl" },
    { "id": "ker14SWaiec", "title": "24 09 05, p 13718, 3강, PC 탑바, 태블릿 탑바, 모바일 탑바를 스위칭" },
    { "id": "qO8inmsWQ5M", "title": "24 09 05, p 13718, 5강, 반응형 웹사이트에서 보통 탑바는 용도에 따라 여러개를 만들고 나머지 부분은 1개를 만들고 그것이 각 화면 사이즈에 맡게 변하도록 작업." },
    { "id": "KzB1neWA1b8", "title": "24 09 05, p 13718, 2강, 반응형 레이아웃에서 상단 메뉴는 보통 PC용, 모바일용을 따로 구현하고 미디어 쿼리를 통해서 상황에 맞는 녀석이 노출되게 합니다." },
    { "id": "vmpXCwcjtrM", "title": "24 09 05, p 13718, 6강, 테일윈드로 PC 탑바, 태블릿 탑바, 모바일 탑바를 스위칭" },
    { "id": "53A0iBtqwN8", "title": "24 09 02, p 13709, 6강, 숨겨진 메뉴 나오는 버튼을 적용" },
    { "id": "Dh8fWuXIIuw", "title": "24 09 02, p 13709, 6강, 서브 메뉴가 1차 메뉴 아이템 텍스트와 20px 정도 거리를 두고, 부작용을 피하기 위해서 안보이는 박스로 사이를 메운다." },
    { "id": "QkpIipQbDps", "title": "24 09 02, p 13709, 3강, 메뉴 2 구현, 2부, 여백조정" },
    { "id": "XggUW_MIGhU", "title": "24 09 02, p 13709, 4강, 아이콘 애니메이션 만들기" },
    { "id": "eYzFAJ04yPo", "title": "24 09 02, p 13709, 7강, 아이콘 애니메이션 구현" },
    { "id": "ghy7gnmUWrM", "title": "24 09 02, p 13709, 3강, 메뉴 2 구현" },
    { "id": "QLlg3Sy_w1g", "title": "24 09 02, p 13709, 5강, 아이콘 클릭시 숨겨진 메뉴 보여짐" },
    { "id": "S1Q-WhsdeKo", "title": "24 09 04, p 13709, 8강, 아이콘 가져와서 적용하기" },
    { "id": "XFVLKp2sezI", "title": "24 09 02, p 13709, 3강, 메뉴 1 구현, 1부, 구현" },
    { "id": "jbFgk_s5zQo", "title": "24 09 02, p 13709, 2강, 로고 추가, con-min-w 를 탑바와 영상에 적용" },
    { "id": "k2ShRR5rspw", "title": "24 09 02, p 13709, 2강, 메뉴 1 구현 완성" },
    { "id": "lmW3LUd8wcw", "title": "24 09 02, p 13709, 1강, 비디오에 푸른색 필터 추가" },
    { "id": "vE77xiHGPkU", "title": "24 09 02, p 13709, 1강, 로고 구현, 메뉴 1 구현 시작, 1차 메뉴 아이템에 호버시 2차 메뉴 노출" },
    { "id": "wIr-0ktsl0E", "title": "24 09 02, p 13709, 4강, 탑바 하단 줄, CSS 방식으로 구현" },
    { "id": "sUvqq4IMZPE", "title": "24 09 02, p 13709, 5강, 탑바 하단 줄, 테일윈드 방식으로 구현" },
    { "id": "eB0NSRsXrnA", "title": "24 09 03, p 13712, 1강, cacf.or.kr 시작, 상단바, 레이아웃" },
    { "id": "DzSJc4219cY", "title": "24 09 03, p 13712, 2강, 서브 메뉴 배경을 추가, 배경이 화면 좌우 끝까지 퍼져야 해서, li에 relative 제거, 그랬더니, ul의 중앙정렬 실패" },
    { "id": "CT9BC7pyUPg", "title": "24 09 03, p 13712, 3강, 서브 메뉴 배경을 별도의 공간에 배치하여 해결, 이제는 li 에 relative 를 두어도 됨, 문제는 서브메뉴가 없어도 배경이 활성화 됨" },
    { "id": "fLc-kSqwy9Y", "title": "24 09 04, p 13712, 4강, 1차 메뉴 아이템의 자식으로 div 를 두어서 a와 서브메뉴만 따로 relative 로 묶음" },
    { "id": "9GCiaNJ3iik", "title": "24 09 03, p 13711, 4강, next.js 프로젝트 생성 및 실행" },
    { "id": "Bu-NmwUa_74", "title": "24 09 03, p 13711, 3강, VS CODE 설치, 한글화, 기본 터미널을 GIT BASH 로 설정" },
    { "id": "VVCFwCrAWnU", "title": "24 09 03, p 13711, 5강, GITHUB 리포지터리(저장소) 생성, 소스코드를 커밋하고 저장소에 푸시" },
    { "id": "mD1B3dSz6rw", "title": "24 09 03, p 13711, 2강, GIT, GIT BASH 설치, GIT 설정" },
    { "id": "w_T4wxAQ4fw", "title": "24 09 03, p 13711, 1강, node js 설치" },
    { "id": "MRrTmhAMa48", "title": "24 09 03, p 13711, 6강, 메인화면에 있던 기존 소스코드 제거" },
    { "id": "7vfxFNsnPno", "title": "2024 09 01, C언어, 문제, 몇명의 사람의 이름과 나이를 받을지 입력받고 입력받은 수 만큼 이름과 나이를 입력받은 후 저장해주세요.(구조체 사용 금지)" },
    { "id": "0Tir0Uqs3MY", "title": "24 08 21, p 13691, 32강, TextEditingController 에 메모적용하여 부작용 해결, FocusNode 도입, useEffect 로 dispos" },
    { "id": "0bwfq68EaG4", "title": "24 08 21, p 13691, 29강, 특정객체를 최초의 빌드메서드 실행시에만 생성하고 이후 함수 재실행에서는 기존 객체를 재활용하고 싶다면 useMemozied" },
    { "id": "1ijWKkqLYIc", "title": "24 08 22, p 13691, 50강, 전역상태에 scores 를 전역상태로 변경" },
    { "id": "CkYZ4lKil7k", "title": "24 08 22, p 13691, 49강, 전역상태관리도구인 리버팟 라이브러리를 추가, ProviderScope 사용하여 리버팟 활성화" },
    { "id": "FmvJ5e74vXM", "title": "24 08 21, p 13691, 28강, 생성자에 const 를 유지하기 위해서 인스턴스 변수대신 useRef 사용" },
    { "id": "JHoGLzSaOdM", "title": "24 08 21, p 13691, 31강, TextEditingController 도입하여 입력상자의 값을 가져와서 사용, 값이 비어있다면 스낵바로 알림" },
    { "id": "T2JGHNyv_AM", "title": "24 08 22, p 13691, 47강, HomePage 와 ScoreListPage 에 부모자식 관계를 설정하면 앱바에 자동으로 뒤로가기 버튼 나옴" },
    { "id": "XIq9wqhfGiA", "title": "24 08 22, p 13691, 47강, HomePage 와 ScoreListPage 에 부모자식 관계를 설정하면 앱바에 자동으로 뒤로가기 버튼 나옴" },
    { "id": "XlxPdX6AKXM", "title": "24 08 21, p 13691, 24강, keymap 이클립스 기준, 소스코드 언폴딩(`Ctrl Alt +`) 소스코드 폴딩(`Ctrl Alt -`) 단축키는 자주 활용해주세요." },
    { "id": "aAGHyT7TZOo", "title": "24 08 21, p 13691, 26강, 정렬버튼을 누를 때 마다 정렬이 반전됨" },
    { "id": "cO6exG32-Uk", "title": "24 08 21, p 13691, 25강, 삭제버튼 을 따로 우측에 둠, 안드로이드 스튜디오에서 remove widget 기능을 이용해서 InkWell 위젯 소스코드를 편하게 삭제" },
    { "id": "ezMZaoUErcM", "title": "24 08 22, p 13691, 51강, 점수 상세페이지 추가" },
    { "id": "fm9ZmHg8ojU", "title": "24 08 21, p 13691, 30강, TextField 추가, Row 안에 바로 TextField 를 추가하면 안되니, SizedBox로 감쌈" },
    { "id": "iMVnAwx-I4M", "title": "24 08 22, p 13691, 51강, lib/main.dart 에 모여있던 로직을 여러 파일들로 분리" },
    { "id": "loqf6xYrKAo", "title": "24 08 22, p 13691, 46강, / == HomePage, /scores = ScoreListPage, go_router 적용" },
    { "id": "oAf3DqdN5TY", "title": "24 08 22, p 13691, 44강, 전역상태관리도구 리버팟, 플러터 훅스와 궁합이 좋음, 자세한 한글 메뉴얼도 있음" },
    { "id": "oZX6omI1Pbs", "title": "24 08 22, p 13691, 42강, 33강부터 41강까지에 대한 설명" },
    { "id": "pvKTj5z22Dc", "title": "24 08 21, p 13691, 27강, 생성자에 const 를 포기하면 인스턴수 변수를 사용할 수 있다." },
    { "id": "r7FthoKgoO8", "title": "24 08 22, p 13691, 45강, 다른 페이지로 편하게 이동하기 위해서 go_router 라이브러리 설치, 일단 일반적인 방식으로 홈에서 점수리스트 페이지로 이동" },
    { "id": "rjXfdf98Dl4", "title": "24 08 21, p 13691, 23강, 각 리스트 아이템 우측에 증가, 감소 버튼 추가하고 작동하도록" },
    { "id": "v5DDmgMObY8", "title": "24 08 22, p 13691, 43강, 플러터 SDK 업그레이드" },
    { "id": "4StaODS1VNg", "title": "24 08 22, p 13695, 13강, 삭제 API 구현, RsData 는 조회를 제외한 요청에 대한 응답의 기본 틀" },
    { "id": "63jDuXySd7Q", "title": "24 08 22, p 13695, 16강, front 폴더에 플러터 프로젝트 생성" },
    { "id": "7-maIUcEJEI", "title": "24 08 21, p 13695, 7강, 엔티티와 JPA 도입" },
    { "id": "7RNxjLPapoI", "title": "24 08 21, p 13695, 9강, SURL 등록기능 구현" },
    { "id": "C6YG-enbemY", "title": "24 08 21, p 13695, 8강, 엔티티의 구조변경이 API에 영향을 미치치 않도록 DTO 도입" },
    { "id": "FjDcygVt4fQ", "title": "24 08 22, p 13695, 15강, CORS 허용 mp4" },
    { "id": "Gk8LQbEZs48", "title": "24 08 23, p 13695, 20강, SURL 추가기능 구현" },
    { "id": "MVY04Ef2xjQ", "title": "24 08 22, p 13695, 11강, 단건조회 API 구현" },
    { "id": "PSlooR3EXJs", "title": "24 08 22, p 13695, 17강, SURL 리스트, SURL 상세, URL 이동기능(새 브라우저를 띄움)" },
    { "id": "R2iIkw1sqF4", "title": "24 08 20, p 13695, 4강, 스프링 시큐리티에게 일단 지금 당장은 모든 요청을 허용하라고 지시, h2-console 을 위한 보안설정 해제도 지시" },
    { "id": "TZ0S_EBdDFw", "title": "24 08 20, p 13695, 3강, 스프링 시큐리티는 외주경호업체 이고 기본적으로는 로그인 하지 않은 사람이 보내는 모든 요청을 막는다." },
    { "id": "YUpJ2uTk-M0", "title": "24 08 23, p 13695, 22강, SURL 수정페이지 구현 완료" },
    { "id": "_17iDNHzW_Y", "title": "24 08 21, p 13695, 6강, 컨트롤러, 서비스,리포지터리, 엔티티 클래스 도입하여 모든 surl 조회 API 구현" },
    { "id": "aZeNkq0DGNE", "title": "24 08 20, p 13695, 5강, 샘플 데이터를 만들기 위한 클래스 구현" },
    { "id": "lWu8nNaJFn8", "title": "24 08 21, p 13695, 10강, POSTMAN 에서 콜렉션 생성, 요청 2건(다건조회, 등록) 생성 후 테스트" },
    { "id": "mLv_H__3DFc", "title": "24 08 20, p 13695, 2강, 프로젝트 세팅" },
    { "id": "on3BkO7LFE8", "title": "24 08 23, p 13695, 21강, SURL 수정페이지 구현 시작, 일단은 상세페이지와 비슷하게 구현" },
    { "id": "q2EYat8Oru4", "title": "24 08 22, p 13695, 14강, /go/3 이렇게 입력하면 3번 URL로 리다이렉팅 되도록" },
    { "id": "s0reDC7NKdY", "title": "24 08 22, p 13695, 12강, 수정 API 구현" },
    { "id": "weF_tKdjnN0", "title": "24 08 23, p 13695, 19강, 삭제버튼 누르면 정말로 삭제하시겠냐고 한번 더 물어보도록" },
    { "id": "KGz-751-_4g", "title": "24 09 06, p 13693, 46강, aspect-ratio 와 object-fit" },
    { "id": "ZeWMj0MGlpo", "title": "24 09 06, p 13693, 47강, 이미지의 비율을 통일, 화면이 작아지면 이미지의 비율을 1/1 로 변경" },
    { "id": "HRjoyGtygN4", "title": "24 09 07, p 13719, 1강, 테일윈드로 반응형 웹사이트 클론코딩 시작합니다." },
    { "id": "maXU7Y43Qgs", "title": "24 09 07, p 13719, 2강, 상단 광고바" },
    { "id": "VeHroe3n3kE", "title": "24 09 07, p 13678, 18강, 최고의 프로그래밍 언어 학습 도구, 비주얼라이저" },
    { "id": "QTHKE9u6wyc", "title": "24 09 07, p 13678, 19강, 비주얼라이저에서 실행되기 어려운 코드는 scanf 를 제거 후 다시 시도" },
    { "id": "KVBwYW7n0Pk", "title": "C언어, 몇명의 사람의 이름과 나이를 받을지 입력받고 입력받은 수 만큼 이름과 나이를 입력받은 후 저장해주세요.(사람 수 제한 없는 버전)" },
    { "id": "VlkRC2ZS0zc", "title": "24 09 07, p 13719, 3강, 리소스 웹 호스팅을 하기 위해서 GITHUB 저장소 생성" },
    { "id": "sPQvZg4mCGo", "title": "24 09 07, p 13719, 3강, 리소스 웹 호스팅을 하기 위해서 GITHUB 저장소 생성, 로고 이미지 업로드" },
    { "id": "DXeBjxahzVo", "title": "24 09 07, p 13678, 20강, 비주얼라이저로 비교해 보는 malloc 사용 유무에 대한 메모리 작동의 차이" },
    { "id": "CnOT1r-r9Zo", "title": "24 09 07, p 13678, 19강, 비주얼라이저에서 실행되기 어려운 코드는 scanf 를 제거 후 다시 시도" },
    { "id": "RLNPT8GMiyA", "title": "24 09 07, p 13678, 18강, 최고의 프로그래밍 언어 학습 도구, 비주얼라이저" },
    { "id": "_QDvmlvlH9A", "title": "24 09 07, p 13678, 20강, 비주얼라이저로 비교해 보는 malloc 사용 유무에 대한 메모리 작동의 차이" },
    { "id": "R8j0wUyS15g", "title": "C언어, 몇명의 사람의 이름과 나이를 받을지 입력받고 입력받은 수 만큼 이름과 나이를 입력받은 후 저장해주세요.(사람 수 제한 없는 버전)" },
    { "id": "Cc1dJe8UNgo", "title": "2024 09 08, C언어, 문제, 사용자에게 몇명의 사람의 정보를 입력받을지 물어보지 않고, 사용자가 그만 입력하고 싶을때까지 입력받기, 문제설명" },
    { "id": "sZtEm2650Yg", "title": "2024 09 08, C언어, 문제, 사용자에게 몇명의 사람의 정보를 입력받을지 물어보지 않고, 사용자가 그만 입력하고 싶을때까지 입력받기, 정답, 단계 1" },
    { "id": "3_u2hKAeYno", "title": "2024 09 08, C언어, 문제, 사용자에게 몇명의 사람의 정보를 입력받을지 물어보지 않고, 사용자가 그만 입력하고 싶을때까지 입력받기, 정답, 단계 2" },
    { "id": "xkswkbVSWbk", "title": "2024 09 08, C언어, 문제, 사용자에게 몇명의 사람의 정보를 입력받을지 물어보지 않고, 사용자가 그만 입력하고 싶을때까지 입력받기, 정답, 단계 3" },
    { "id": "p4BFrCPLeD4", "title": "2024 09 08, C언어, 문제, 사용자에게 몇명의 사람의 정보를 입력받을지 물어보지 않고, 사용자가 그만 입력하고 싶을때까지 입력받기, 정답, 단계 4" },
    { "id": "NgO8uWqvI3E", "title": "2024 09 08, C언어, 문제, 사용자에게 몇명의 사람의 정보를 입력받을지 물어보지 않고, 사용자가 그만 입력하고 싶을때까지 입력받기, 정답, 단계 5" },
    { "id": "rTKCi0i2UFg", "title": "24 09 09, p 13711, 7강, 새로운 곳에서 작업을 이어가는 방법" },
    { "id": "iZ5vJn2hz9c", "title": "24 09 09, p 13711, 8강, 리액트에서는 class=\"\" 대신 className=\"\"" },
    { "id": "54N4gkkHLFM", "title": "24 09 09, p 13711, 9강, next.js 에서 페이지 추가하는 방법, 내 정보 페이지, 포트폴리오 페이지 추가" },
    { "id": "GAPdx_v7ax8", "title": "24 09 10, p 13711, 10강, next.js 에서는 a 태그 대신 Next 태그를 사용해서 링크버튼 만들어야 합니다." },
    { "id": "sCd-YKa9VKw", "title": "24 09 10, p 13711, 11강, layout.js 페이지 이용해서 공통 디자인에 대한 중복코드를 한 곳으로 모음" },
    { "id": "6BfJ89z8uY0", "title": "24 09 09, p 13722, 1강, 스와이퍼 라이브러리 소개, 사용법" },
    { "id": "-GbQZM5G6kU", "title": "24 09 09, p 13711, 13강, vercel 가입, 꼭 github 계정으로 가입, vercel 에 프로젝트 생성하고 거기에 우리의 GITHUB 리포지터리 연결" },
    { "id": "9hOeVspzzw4", "title": "24 09 09, p 13711, 16강, 폰트어썸 추가 및 적용" },
    { "id": "RVq6AouShuY", "title": "24 09 09, p 13711, 15강, 프리텐다드 폰트 추가 및 적용" },
    { "id": "Vn5ZiiDU4D0", "title": "24 09 09, p 13711, 12강, prettier 설치, eslint-config-prettier 까지 설치하여, eslint 와 prettier 의 충돌문제도 해결" },
    { "id": "_xDtE9TMclE", "title": "24 09 09, p 13711, 14강, 우리 vercel 프로젝트에 GITHUB 리포지터리를 연결했기 때문에 푸시하는것 만으로 자동으로 배포됨" },
    { "id": "gNQi6kO2ULo", "title": "24 09 10, p 13722, 2강, 멋쟁이 사자차럼 메인 상단 슬라이더 시작, 각종 라이브러리 로드" },
    { "id": "n_eO9mBkWJY", "title": "24 09 10, p 13722, 3강, 일단 스와이퍼로 만들기" },
    { "id": "Kf4sLw3DtQU", "title": "24 09 10, p 13722, 4강, 기본 디자인 제거하기, 방법 1 : CSS 디자인을 덧씌우는 방법" },
    { "id": "F9KH8knfGWM", "title": "24 09 10, p 13722, 5강, 기본 디자인 제거하기, 방법 2 : my-swiper-button-prev 이런식으로 my- 를 붙여서 기본적인 디자인이 작동 못하도록" },
    { "id": "m4s9_FtvN_o", "title": "24 09 10, p 13722, 6강, 페이지네이션을 분수형태로 변경" },
    { "id": "uatTjz7Uy44", "title": "24 09 10, p 13722, 7강, 페이지네이션의 기본 디자인 제거" },
    { "id": "1I7bI6PMM1M", "title": "24 09 10, p 13722, 8강, con 도입" },
    { "id": "NgKpQiwLRBE", "title": "24 09 10, p 13722, 9강, 인디케이터 박스로 유령으로 만들어서 부모의 높이를 0으로 만듬" },
    { "id": "NQL2UiHSbRM", "title": "24 09 11, p 13712, 7강, 메뉴바에 호버시 로고의 색상이 변하도록" },
    { "id": "8upXvSvVBzI", "title": "24 09 11, p 13712, 8강, 메뉴바 작업" },
    { "id": "GRmKC2Ft4gU", "title": "24 09 11, p 13712, 5강, www invitrosco com 시작, 상단바, 레이아웃" },
    { "id": "DdN0Qce2eM8", "title": "24 09 11, p 13712, 6강, flex 의 order 를 사용하여 가운데 메뉴바 선택했을 때 전체 형제들의 배경색과 글자색을 변경" },
    { "id": "V45JygXTE0k", "title": "24 09 19, p 13738, 1강, WOW JS 는 animate.css 호환성 버전에 의존한다." },
    { "id": "7Ag6mW9QBxs", "title": "24 09 19, p 13738, 3강, 마우스가 떠나면 애니메이션이 해제되도록" },
    { "id": "1kXPiX7gHbE", "title": "24 09 19, p 13738, 2강, 마우스가 올려지면 애니메이션이 발동하도록" },
    { "id": "BCup7qO7FMA", "title": "24 09 19, p 13738, 4강, 애니메이션 활성화는 자식요소에 걸고, 애니메이션 취소는 부모요소에 거는 방법" },
    { "id": "ykPzH6PMWzw", "title": "24 09 19, p 13738, 5강, animate css 에 WOW JS 적용하는 방법" },
    { "id": "VVrw1540FDY", "title": "24 09 20, p 13738, 6강, 커스텀 애니메이션 적용하는 방법" },
    { "id": "brgUWq4MvGA", "title": "2024 09 08, C언어, 문제, 사용자에게 몇명의 사람의 정보를 입력받을지 물어보지 않고, 사용자가 그만 입력하고 싶을때까지 입력받기, 정답, 단계 6" },
    { "id": "fm58lX9FwT8", "title": "2024 09 22, C언어, 링크드 리스트, get_new_node" },
    { "id": "V4Uj3gkrknk", "title": "2024 09 22, C언어, 링크드 리스트, show_all_values" },
    { "id": "CXlek9tQBrY", "title": "2024 09 22, C언어, 링크드 리스트, free_all" },
    { "id": "m8KmJYdG2MY", "title": "2024 09 22, C언어, 링크드 리스트, add_value" },
    { "id": "nULSTIAZ3vk", "title": "24 09 25, p 13746, 1강, GITHUB 리포지터리 생성, index.html 추가, 해당 리포지터리에 GITHUB PAGE 활성화" },
    { "id": "mzwchS7UI5U", "title": "24 09 25, p 13746, 2강, about.html 파일 추가" },
    { "id": "vpHoaSyBeCM", "title": "24 09 25, p 13746, 3강, github.dev 를 이용해서 GITHUB 리포지터리를 VS CODE 모드로 작업" },
    { "id": "yUgYYaAWRAI", "title": "24 09 26, p 13747, 1강, aos 사용법" },
    { "id": "kSoJ_UZdt0w", "title": "24 09 25, p 13746, 1강, GITHUB 리포지터리 생성, index.html 추가, 해당 리포지터리에 GITHUB PAGE 활성화, 1부" },
    { "id": "eUqFLn6Fexs", "title": "2024 09 28, C언어, 링크드 리스트, add_value_at, 문제설명" },
    { "id": "RE2SU1QDRds", "title": "2024 09 28, C언어, 링크드 리스트, add_value_at, 문제정답" },
    { "id": "LPWbpH9CyYQ", "title": "2024 09 28, C언어, 링크드 리스트, index_of, 문제설명" },
    { "id": "LppcLP3VCW0", "title": "2024 09 28, C언어, 링크드 리스트, update_value_at, 문제설명" },
    { "id": "aRt18-UDbd0", "title": "2024 09 28, C언어, 링크드 리스트, update_value_at, 문제정답" },
    { "id": "fxW68XmUoa8", "title": "2024 09 28, C언어, 링크드 리스트, remove_value_at, 문제설명" },
    { "id": "X4xslwp3NKc", "title": "2024 09 28, C언어, 링크드 리스트, remove_value_at, 문제정답" },
    { "id": "9D5Oe6l6SYM", "title": "2024 09 28, C언어, 링크드 리스트, remove_by_value, 문제정답" },
    { "id": "TEP1N4COAV4", "title": "2024 09 29, C언어, 정렬, 버블 소트, 문제설명" },
    { "id": "9wR2SMNXLMw", "title": "2024 09 29, C언어, 정렬, 버블 소트, 문제정답" },
    { "id": "Z1ZPOdRKVBc", "title": "2024 09 29, C언어, 정렬, 버블 소트, 내림차순, 문제설명" },
    { "id": "dlUVJ1NVJFw", "title": "2024 09 29, C언어, 정렬, 버블 소트, 내림차순, 문제정답" },
    { "id": "VYUspUC8Ou0", "title": "2024 09 28, C언어, 링크드 리스트, get_node_list_length, 문제설명" },
    { "id": "FZeJ8PxY4Cc", "title": "2024 09 28, C언어, 링크드 리스트, get_node_list_length, 문제정답" },
    { "id": "ogS_dQiAIPU", "title": "2024 09 28, C언어, 링크드 리스트, sort_desc, 문제정답" },
    { "id": "YVzykE2m6_8", "title": "2024 09 28, C언어, 링크드 리스트, sort_asc, 문제정답" },
    { "id": "iCCRH_AeArs", "title": "24 10 01, p 13751, 1강, 작업 폴더 만들기" },
    { "id": "GVhngEOHw6w", "title": "24 10 01, p 13751, 2강, 로컬 저장소 생성" },
    { "id": "zaQZEA2txLc", "title": "24 10 01, p 13751, 3강, 로컬 저장소에 작업자 정보 설정하기" },
    { "id": "fo242DnJewk", "title": "24 10 01, p 13751, 4강, 파일 3개 생성" },
    { "id": "t8WVCdPEyiM", "title": "24 10 01, p 13751, 5강, git status, 장바구니에 담기지 않은 것들은 빨간색" },
    { "id": "8mJ47gIRHdA", "title": "24 10 01, p 13751, 6강, 장바구니에 담기 : git add 파일명, 장바구니에서 제거 : git rm --cached 파일명" },
    { "id": "TyynOa9ksLk", "title": "24 10 01, p 13751, 7강, 장바구니에 파일을 담지 않으면 커밋이 안된다." },
    { "id": "Z359sVPPM5c", "title": "24 10 01, p 13751, 8강, 장바구니에 담고 커밋하면 커밋이 된다. 그 이후에 git status 하면 더 이상 a.html, b.html 은 뜨지 않는다." },
    { "id": "3q39_HoKxEI", "title": "24 10 01, p 13751, 9강, c.html 장바구니에 담고 커밋, git log, git log --oneline" },
    { "id": "6P-mBkPnpoY", "title": "24 10 01, p 13751, 10강, 가장 마지막 커밋 취소 : git reset HEAD^, 그 후 다시 add 후 commit" },
    { "id": "ZdnMlzSa2LA", "title": "24 10 01, p 13751, 11강, c.html 파일 내용 변경 후 커밋, 작업 후에 add, add 후에 커밋은 일반적인 패턴이다." },
    { "id": "KFxurfICAqs", "title": "24 10 01, p 13751, 12강, 과거 커밋 상태로 임시적으로 돌아가기 : git checkout -f 커밋ID, 현재로 회귀 : git checkout -f main" },
    { "id": "ZhWBvAxcy_Q", "title": "24 10 01, p 13751, 13강, 현재 작업을 다른 장소에서도 이어가려면 외부저장소에 로컬저장소의 커밋들을 업로드 해야한다." },
    { "id": "VSxlpr7CU0A", "title": "24 10 02, p 13752, 1강, play.tailwindcss.com 에서 테일윈드가 만들어내는 CSS를 자세히 볼 수 있습니다." },
    { "id": "Ac_b2PEopLM", "title": "24 10 02, p 13752, 2강, tailwind.config 으로 특정한 컬러를 추가하거나 반응형 브레이크 포인트를 원하는데로 고칠 수 있다." },
    { "id": "jXuDxI7hGVY", "title": "24 10 02, p 13752, 3강, 본인이나 형이나 조상이 on 이라는 클래스를 가졌을 때만 특정 CSS가 작동하도록 할 수 있음" },
    { "id": "9KeywVLXBDg", "title": "24 10 02, p 13752, 4강, 실무에서 웹 퍼블리싱을 할 때 테일윈드 적용하는 방법" },
    { "id": "RlqM7EQyJMc", "title": "24 10 04, p 13751, 14강, git config --global 을 통해서 git 저장소 생성시마다 user 정보 세팅할 필요가 없도록" },
    { "id": "Ae4iNILWf94", "title": "24 10 04, p 13751, 15강, 새 git 작업폴더 site2 생성" },
    { "id": "bJ9GWvo3nMc", "title": "24 10 04, p 13751, 16강, 원격 저장소 생성, 로컬 작업폴더 생성, 로컬 저장소 생성, 원격 저장소 연결, 푸시" },
    { "id": "ZsYEjkBxtjo", "title": "24 10 04, p 13751, 17강, 다른 장소로 이동, 로컬 저장소와 로컬 작업폴더 생성 후 원격 저장소 연결, 그리고 pull" },
    { "id": "oUz1RybWzPE", "title": "24 10 04, p 13752, 5강, 실무에서 웹 퍼블리싱을 할 때 테일윈드 적용하는 방법 1, no PostCSS, GITHUB PAGE 배포" },
    { "id": "zPOJv6ldymY", "title": "24 10 07, p 13759, 1강, Nextjs 14 앱 라우터 강의 시작합니다, 수업페이지 : slog.gg/p/13759#f" },
    { "id": "7N0rZG0Cb00", "title": "24 10 07, p 13759, 2강, Nextjs 14 프로젝트 생성, GIT PUSH" },
    { "id": "wvOVce19uGw", "title": "24 10 07, p 13759, 3강, src/app 폴더안의 모든 파일들 삭제, layout.tsx, page.tsx 생성" },
    { "id": "9GrhHZIb2MA", "title": "24 10 07, p 13759, 4강, Readonly＜＞ 의미, 꼭 필요하진 않습니다." },
    { "id": "MXj24HFL30g", "title": "24 10 07, p 13759, 5강, VS CODE 작업, Prettier 익스텐션 설치, Format On Save 설정, tsx 파일들 포메팅" },
    { "id": "05DycqquU7s", "title": "24 10 07, p 13759, 6강, URL 별로 각 파일들이 작동하는 순서" },
    { "id": "VaIoYJ0OwMs", "title": "24 10 10, p 13767, 1강, git 기본, git commit 소개" },
    { "id": "ZC-JMmZvurE", "title": "24 10 10, p 13767, 2강, git 기본, git 브랜치 생성/이동" },
    { "id": "L1b3pZ5z0RM", "title": "24 10 10, p 13768, 1강, node.js 설치" },
    { "id": "Efz8IJOvT70", "title": "24 10 10, p 13768, 2강, 윈도우 터미널 설치" },
    { "id": "2M_JDiKdWnI", "title": "24 10 10, p 13768, 3강, GIT BASH 설치" },
    { "id": "4SpQpAUuLG0", "title": "24 10 10, p 13768, 4강, 윈도우 터미널을 켜면 기본적으로 CMD, POWER SHELL이 아닌 GIT BASH가 뜨도록 설정" },
    { "id": "hD0_rxW4SgU", "title": "24 10 10, p 13768, 5강, 커서 가입, 커서 로그인, 커서 에디터 설치" },
    { "id": "cBmIDKwlAmU", "title": "24 10 10, p 13768, 6강, ~ 은 홈 디렉토리를 의미하고, 디렉토리는 폴더를 의미한다." },
    { "id": "9X2LUm8Lu4k", "title": "24 10 10, p 13768, 7강, 절대로 프로젝트 폴더의 상위폴더를 커서로 열면 안된다. 프로젝트 폴더를 열어야 한다." },
    { "id": "T3jcY5GEXis", "title": "24 10 10, p 13768, 8강, 커서 에디터 터미널의 기본 프로필을 GIT BASH 로 변경" },
    { "id": "e0lNdbhruXE", "title": "24 10 10, p 13768, 9강, CTRL + K 로 터미널에서 AI로 명령" },
    { "id": "cOkhShZGeZc", "title": "24 10 10, p 13768, 10강, 소스코드 드래그 후 CTRL + K, 해당 코드에 대해서 AI로 작업" },
    { "id": "Cr240NgUb_4", "title": "24 10 14, p 13773, 1강, VIM 사용법" },
    { "id": "4ON0KBkpJLs", "title": "24 10 14, p 13773, 2강, VIM 사용시, Found a swap file by the name 오류 발생시 해결법" },
    { "id": "rKW0yHdvoCs", "title": "24 10 14, p 13773, 3강, git clone 은 git init + git remote add origin + git pull 이다." },
    { "id": "Ux1Lpi3Aeyk", "title": "24 10 14, p 13773, 4강, git pull origin main 은 현재 내가 위치한 브랜치에 원격지의 main 브랜치의 커밋들을 다운로드하는 행위" },
    { "id": "xoQ3Fso4JFw", "title": "24 10 14, p 13773, 5강, 충돌 시나리오 1, 하필이면 같은 파일의 같은 라인을 수정해서 자동병합이 안되는 경우, 수동병합커밋을 생성해야 함" },
    { "id": "99Z9FpB6hkg", "title": "24 10 14, p 13773, 6강, 충돌 시나리오 2, 같은 부분을 수정하지 않아서 자동으로 병합커밋이 생성됨" },
    { "id": "jF_sjrs-WwA", "title": "24 10 14, p 13768, 11강, GITHUB 가입, GITHUB 계정 세팅에서 디폴트 브랜치 이름을 master 에서 main 으로 변경" },
    { "id": "zyZ2S9E_Xt4", "title": "24 10 15, p 13712, 9강, 글자의 밑줄 애니메이션" },
    { "id": "f7ZqkMVf2DQ", "title": "24 10 17, p 13712, 10강, 삼성 웰스토리 360솔루션 상단바, 레이아웃, 호버시 2차메뉴 나오도록" },
    { "id": "kMXLgs3r2gA", "title": "24 10 17, p 13712, 11강, 2차 메뉴가 1차 메뉴 아이템의 중심점을 기준으로 가운데 정렬" },
    { "id": "_Q7_xsN_K7w", "title": "24 10 17, p 13712, 12강, 우측의 버튼 누르면 2차 메뉴 배경이 토글" },
    { "id": "47a9OP0JhD8", "title": "24 10 17, p 13712, 13강, 우측의 버튼 누르면 2차 메뉴 토글" },
    { "id": "IwDKQsGr0c8", "title": "24 10 17, p 13712, 14강, 우측의 버튼 눌러서 2차 메뉴가 나올때는 그림자 제거, 우측 버튼 클릭 상태 표시, peer 사용, 서브메뉴배경 클릭시 꺼지도록" },
    { "id": "88vNnH0Y2qA", "title": "24 10 17, p 13712, 15강, group/p1을 조상으로 옮겨서 peer 필요성 제거, 더 나은 HTML 구조가 됨" },
    { "id": "OBv4V1MD6Y0", "title": "24 10 17, p 13712, 16강, 두산지오솔루션에서 2차 메뉴의 구분선이 위쪽으로 올라오도록" },
    { "id": "axFME-8zkcc", "title": "24 10 17, p 13712, 19강, 가로 스크롤바 제어" },
    { "id": "PCP9uha1A0w", "title": "24 10 18, p 13712, 21강, 노랑풍선 상단바 시작, 레이아웃" },
    { "id": "5tEiAtlO6qI", "title": "24 10 18, p 13712, 22강, 테일윈드 확장기능 on" },
    { "id": "gV0PRSSSREQ", "title": "24 10 18, p 13712, 23강, 이미지 고유의 비율을 유지하는 배경 이미지, 그리고 의도적으로 특정 부분만 나오게" },
    { "id": "bsnbe2tiFjI", "title": "24 10 18, p 13722, 10강, 각 슬라이드가 활성화 될 때 애니메이션 추가" },
    { "id": "b8OUhzK9qiE", "title": "24 10 22, p 13805, 1강, 리액트는 DOM 생성기 이다." },
    { "id": "yCBK-ojnuL0", "title": "24 10 22, p 13805, 2강, JSX 를 사용하면 직관적으로 리액트 엘리먼트를 만들 수 있다." },
    { "id": "E3Wpn7cWFUA", "title": "24 10 22, p 13805, 3강, App, NaverLink 생성, 프레그먼트 사용" },
    { "id": "f-ra7hf0eQQ", "title": "24 10 22, p 13805, 4강, 테일윈드 가져오기, class 대신 className 으로 사용해야 합니다." },
    { "id": "RWZrsOeACjQ", "title": "24 10 22, p 13805, 5강, NaverLink 컴포넌트를 Link 컴포넌트로 변경, props 를 사용해서 컴포넌트의 활용성을 높힘, props 를 구조분해할당" },
    { "id": "KLuTRJzT6N4", "title": "24 10 22, p 13805, 6강, 서버에서 전송한 데이터로 부터 UI를 만들어내는 방법" },
    { "id": "sjA8KY-X2rY", "title": "24 10 22, p 13806, 1강, 수파베이스는 BAAS(backend as a service) 이다." },
    { "id": "lrtbJkdyKyY", "title": "24 10 22, p 13806, 2강, 수파베이스 프로젝트 생성 및 삭제 방법" },
    { "id": "X3U2bao2C0k", "title": "24 10 22, p 13806, 3강, todos 테이블 생성(id, created_at, content), 데이터 3개 INSERT, 다양한 SELECT" },
    { "id": "FhC2ZkLIXDw", "title": "24 10 22, p 13806, 4강, todos 테이블에 저장된 할일들을 가져와서 웹 페이지에 보여주는 방법" },
    { "id": "qDHifSFh5Kc", "title": "24 10 23, p 13806, 5강, 할일 등록기능 구현" },
    { "id": "wGDvkINMk_0", "title": "24 10 23, p 13806, 6강, 할일 삭제기능 구현" },
    { "id": "GSUZQk8DTCs", "title": "24 10 23, p 13805, 7강, 리액트 공부용 시작 페이지, https://go9.co/XPG" },
    { "id": "sf-CAA4Ytlw", "title": "24 10 24, p 13684, 57강, gamma.app 으로 쉽고 빠르게 PPT를 만들 수 있습니다." },
    { "id": "X61deIuEqYw", "title": "24 11 22, p 13848, 2강,  코드펜 시작 소스코드, go9.co/XPG" },
    { "id": "KwPib8SIBSg", "title": "24 11 22, p 13848, 3강, 홀짝 카운터를 구현해주세요." },
    { "id": "E3NGeqAmchc", "title": "24 11 22, p 13848, 1강,  코드팬 세팅법" },
    { "id": "RdhX4s_wRJI", "title": "24 11, 25, p 13855, 1강, 스트림 소개, 반복문과 조건문을 사용하는 현대적인 방법" },
    { "id": "p6xbRRlygpE", "title": "24 11, 25, p 13855, 2강, 1부터 10까지 출력하기, IntStream, forEach 은 종단함수이다." },
    { "id": "OXG9YUQ3_JA", "title": "24 11, 25, p 13855, 4강, 배열의 요소에 2 곱하기, map, 스트림 연산은 재료를 변경하지 않는다, 스트림 연산의 특징 : 불변성" },
    { "id": "PCZatCBC5PA", "title": "24 11 25, p 13842, 50강, 리스트와 맵 비교, 리스트는 데이터 넣을 때 편하고, 맵은 데이터 꺼낼 때 편하다." },
    { "id": "DBQN2RWxDXI", "title": "24 11, 25, p 13855, 5강, int 배열을 String 배열로 바꾸는 방법" },
    { "id": "a6SAfwmU4dc", "title": "24 11, 25, p 13855, 6강, String 배열을 int 배열로 바꾸는 방법" },
    { "id": "iw23P6ZhLsc", "title": "24 11, 25, p 13855, 7강, int 배열을 List 형태로 변경" },
    { "id": "WA5qd3YdCHM", "title": "24 11, 25, p 13855, 8강, 스트림 문제를 위한 샘플 데이터 생성" },
    { "id": "-wElC3dm0ck", "title": "24 11, 25, p 13855, 9강, 남자의 나이의 합, 출력 : 60" },
    { "id": "tuLURqwCnU0", "title": "24 11, 25, p 13855, 10강, 남자의 나이의 평균, 출력 : 30.0" },
    { "id": "sx-pBejxQDY", "title": "24 11, 25, p 13855, 12강, id가 2번인 사람의 이름을 출력 : Bob" },
    { "id": "S42CAku3ZYo", "title": "24 11 25, p 13848, 4강, 할일 리스트, 추가기능" },
    { "id": "hziPc6dM8w8", "title": "24 11 25, p 13840, 56강, 컨트롤러(점원), 서비스(요리사), 리포지터리(재료담당직원) 으로 분류하는 레이어드 아키텍처는 유지보수성을 향상시킴" },
    { "id": "N5ILahDI6iU", "title": "24 11, 25, p 13855, 11강, 남자의 이름들, 출력 : Bob, David" },
    { "id": "L_Etb1WTgzQ", "title": "24 11 25, p 13840, 57강, WiseSayingController 도입, 목록 기능을 컨트롤러로 이동" },
    { "id": "tvv0ldiMEsM", "title": "24 11 25, p 13840, 58강, 삭제 기능을 컨트롤러로 이동" },
    { "id": "jEy1VuDqiYg", "title": "24 11 25, p 13840, 59강, 수정 기능을 컨트롤러로 이동" },
    { "id": "I2j3mPBm0kA", "title": "24 11 25, p 13840, 60강, 등록 기능을 컨트롤러로 이동" },
    { "id": "peJOW99tXzM", "title": "24 11 25, p 13840, 61강, wiseSayings 리스트를 컨트롤러로 옮김" },
    { "id": "FNjQI4ya7jw", "title": "24 11 25, p 13840, 62강, scanner 를 컨트롤러의 생성자로 넘겨줌" },
    { "id": "dOmpbyEcKvA", "title": "24 11 25, p 13840, 63강, SystemController 도입, 추후 설정관련 작업을 할 때 활용하면 좋음" },
    { "id": "Jz7cguFZX9c", "title": "24 11 25, p 13840, 64강, 모듈화는 점진적으로 진행해야 합니다." },
    { "id": "sA0dxFGGntk", "title": "24 11 25, p 13840, 65강, 컨트롤러(점원)은 고객응대 이외의 모든 책임에서 벗어나야 한다. WiseSayingService 도입" },
    { "id": "wiH7D8mMsig", "title": "24 11 26, p 13848, 5강, 할일 리스트, 삭제기능" },
    { "id": "5E-3z5VoAWU", "title": "24 11 26, p 153, 24강, UI 레이아웃 학습시에는 특정 엘리먼트에 배경색을 넣고 각각의 디자인 설정을 변경/삭제 해보는 식으로 파악" },
    { "id": "kL5bqGa6vo8", "title": "24 11 26, p 13840, 66강, 점원은 요리사의 내부사정을 몰라야 하고, 요리사는 재료담당직원의 내부사정을 몰라야 한다." },
    { "id": "-i1Bn4Nf8gc", "title": "24 11 26, p 13840, 67강, WiseSayingRepository 도입" },
    { "id": "YRdcr3Pnasw", "title": "24 11 26, p 13840, 69강, 응집도는 높을 수록 좋은 구조이다." },
    { "id": "H5fFh2hoZAM", "title": "24 11 26, p 13840, 70강, 나중에 다른 종류의 레포지터리로 교체해야할 수 있다. 약속(인터페이스)을 만들면 좋은 이유" },
    { "id": "KvXd4QTQleA", "title": "24 11 26, p 13840, 72강, WiseSayingRepository 를 추상 클래스에서 인터페이스로 변경, 인터페이스도 추상클래스의 한 종류이다, 11 단계 완료" },
    { "id": "4mtZZVTEc7c", "title": "24 11 26, p 13840, 71강, WiseSayingRepository 를 약속으로 지정하고 그것을 WiseSayingMemoryRepository 가 구현하도록" },
    { "id": "XBdlfzazqAI", "title": "24 11 26, p 13856, 1강, TDD 강의 시작, 자바 프로젝트 세팅" },
    { "id": "U6_S3NQ56Ks", "title": "24 11 26, p 13856, 2강, 수동 테스트보다는 자동화된 테스트가 더 좋다, 하지만 습관을 들이기가 어렵다." },
    { "id": "-oozFbmGoDI", "title": "24 11 26, p 13856, 4강, 그래들은 필요한 라이브러리를 일단 로컬 저장소에서 찾아보고 없으면 원격 저장소에서 로컬 저장소로 다운로드 한다." },
    { "id": "Uk-6aSDDtnY", "title": "24 11 26, p 13856, 5강, 1 + 2 = 3, 더하기를 쉽게 구현할 실력이 없어서 일단 꼼수로 넘어감" },
    { "id": "Q64NXzWR388", "title": "24 11 26, p 13856, 6강, 2 + 10 = 12, 여전히 감이 안와서 그린 단계에서 그냥 꼼수로 넘어감" },
    { "id": "nLoyi_glie4", "title": "24 11 26, p 13856, 7강, 20 + 10 = 30, 꼼수로 연명하다가 더 이상 안되겠다는 생각이 들고, 더하기에 대한 감이 잡히기도 해서 블루에서 구현" },
    { "id": "sujmLxj9mlI", "title": "24 11 26, p 13856, 8강, assert 라이브러리를 추가로 로드하여 사용" },
    { "id": "Zx7VpR68peI", "title": "24 11 26, p 13856, 9강, 10 - 5 = 5" },
    { "id": "jSnYO13GeEs", "title": "24 11 26, p 13858, 1강, 다항식 계산기 구현 by TDD 시작, 자바 프로젝트 세팅" },
    { "id": "yVrkdVo5Pg8", "title": "24 11 26, p 13858, 2강, assertJ 추가, 3 + 5" },
    { "id": "Bf4pWsiN1LE", "title": "24 11 26, p 13858, 3강, 10 + 5, 더하기 기능 구현 완료" },
    { "id": "J8r4Tybzv0Y", "title": "24 11 26, p 13859, 1강, 명언 게시판 by TDD 시작합니다, 프로젝트 세팅" },
    { "id": "ixNgRZUfHU8", "title": "24 11 26, p 13859, 2강, 명령어를 키보드가 아닌 미리 준비된 문자열로 대체할 수 있는지 실험" },
    { "id": "tfaMtFdoxeE", "title": "24 11 26, p 13859, 3강, 출력을 모니터가 아닌 별도의 문자열로 받을 수 있는지 실험" },
    { "id": "fZnvhshOgso", "title": "24 11 26, p 13859, 4강, TestUtil 을 TDD 방식으로 개발, TestUtil.getScanner" },
    { "id": "PPe85k1vRuk", "title": "24 11 26, p 13859, 5강, TestUtil.setOutToByteArray()" },
    { "id": "MGlI5k2e_h8", "title": "24 11 26, p 13859, 6강, `== 명언 앱 ==` 출력" },
    { "id": "cYL7bbAmfpw", "title": "24 11 26, p 13859, 7강, AppTest.run 도입하여 테스트 마다 반복되는 중복코드 제거" },
    { "id": "1FP-lNLOFew", "title": "24 11 26, p 13859, 8강, 명령을 2번 이상 입력할 수 있습니다, 1 단계 완료" },
    { "id": "w96GqZ4IBgQ", "title": "24 11 26, p 13859, 10강, 등록이 완료되면 명언번호가 출력된다, 3 단계 완료" },
    { "id": "UVRyRjvPTKI", "title": "24 11 26, p 13859, 9강, `등록`을 입력하면 내용과 작가를 입력받는다, 2 단계 완료" },
    { "id": "pGp7wJXV9DQ", "title": "24 11 26, p 13859, 11강, 매번 생성되는 명언번호는 1씩 증가 한다, 4 단계 완료" },
    { "id": "clfY1pSaSLk", "title": "24 11 26, p 13859, 12강, 목록 명령어 : 입력된 명언들을 출력한다., 5 단계 완료" },
    { "id": "8Uyj3TdjqQw", "title": "24 11 27, p 13859, 13강, 서비스 도입하여 이제는 컨트롤러에서 순수하게 고객 응대 관련 작업만 수행" },
    { "id": "xfod-5MmbAE", "title": "24 11 27, p 13859, 14강, 리포지터리 도입하여 이제는 서비스에서 순수하게 비지니스 로직 작업만 수행" },
    { "id": "GERP7dL5utw", "title": "24 11 27, p 13859, 15강, 삭제 명령어 : 입력된 번호의 명언을 삭제, 6 단계 완료" },
    { "id": "H7EpVic5FN8", "title": "24 11 27, p 13859, 17강, 명령어를 쪼개고 분석하는 일을 전문적으로 해줄 Command 클래스 고안" },
    { "id": "Rbwuvyo7Vjg", "title": "24 11 27, p 13859, 20강, Command 객체 적용, Command 객체에서 queryString 초기화 관련 예외처리 추가" },
    { "id": "qORM_JWCzoY", "title": "24 11 27, p 13859, 19강, 테스트모드에서 디버깅 모드 활용하는 방법" },
    { "id": "ubBFLJvfyE0", "title": "24 11 27, p 13859, 21강, Command 객체 생성에 `목록? ` 이런 인자를 넣으면 발생하는 오류 수정, 리팩토링 완료, 영상없음" },
    { "id": "4wDIL6rpTd4", "title": "24 11 27, p 13859, 22강, 수정 명령어 : 입력된 번호의 명언을 수정, 8 단계 완료" },
    { "id": "TBANhnZYOf4", "title": "24 11 27, p 13859, 23강, 파일 CRUD 테스트" },
    { "id": "9EPJD6zwRDU", "title": "24 11 27, p 13859, 24강, @BeforeAll/@AfterAll 에서 temp 폴더 생성/삭제, 파일(폴더)삭제 기능 강화" },
    { "id": "yZYA4H5lnk8", "title": "24 11 27, p 13859, 25강, 파일관련 유틸함수 강화, 파일을 생성할 때 디렉토리가 없다면 디렉토리부터 만든다." },
    { "id": "_6GATpk_meg", "title": "24 11 27, p 13859, 26강, 롬복 라이브러리 추가, 롬복을 테스트환경에서도 사용가능 하도록, WiseSaying 클래스에 롬복적용하여 소스코드 줄임" },
    { "id": "fjVFMJ1BK2Q", "title": "24 11 27, p 13859, 27강, JsonUtilTest, Map을 Json String 으로 변환" },
    { "id": "DqEJGAu_SOM", "title": "24 11 27, p 13859, 28강, JsonUtilTest, Json을 Map으로 변환" },
    { "id": "86OA398v0mo", "title": "24 11 27, p 13859, 29강, WiseSayingMemoryRepository 와 WiseSayingFileRepository 생성" },
    { "id": "N71UbSlFiJ0", "title": "24 11 27, p 13859, 30강, save 메서드 테스트, 객체의 동등성 비교를 equals 메서드 오버라이드로 처리" },
    { "id": "t2SJP4d8D3I", "title": "24 11 28, p 13858, 4강, 테스트케이스 제공해드립니다." },
    { "id": "LO3XavKhT00", "title": "24 11 28, p 13848, 7강, flex 디펜스, 최고의 FLEX 튜토리얼 게임 2탄" },
    { "id": "F27QYGKfjUs", "title": "24 11 28, p 13848, 8강, 테일윈드와 프리텐다드 폰트 적용방법" },
    { "id": "NqWIbOWy8FE", "title": "24 11 28, p 13848, 9강, flex로 간단한 메뉴 구현" },
    { "id": "raPcDG1Zpb4", "title": "24 11 28, p 13859, 32강, findById 메서드 테스트" },
    { "id": "S9-uhdgR0UE", "title": "24 11 28, p 13859, 31강, deleteById 메서드 테스트" },
    { "id": "Dez_008PCZ8", "title": "24 11 28, p 13859, 33강, findAll 메서드 테스트" },
    { "id": "yv5G_1Cgi6A", "title": "24 11 28, p 13859, 34강, lastId.txt 관련 메서드 테스트" },
    { "id": "OU7FdWopGWQ", "title": "24 11 28, p 13859, 35강, 명언 수정 테스트" },
    { "id": "iRTTiX4Jy5k", "title": "24 11 28, p 13859, 36강, 기존 리포지터리 대신 WiseSayingFileRepository 를 사용하도록 하고 테스트, 9 단계 완료" },
    { "id": "I_VUj03kjkQ", "title": "24 11 28, p 13859, 38강, AppConfig 에서 모드(dev, test, prod)를 선택할 수 있도록, 그에 따라 db 폴더가 달라지도록" },
    { "id": "cFbcxi2PbrE", "title": "24 11 28, p 13859, 39강, wiseSayingRepository.archive 메서드는 data.json 파일을 생성한다." },
    { "id": "-8Ss2JH9tQw", "title": "24 11 28, p 13859, 40강, wiseSayingRepository.archive 메서드는 모든 명언들을 하나의 json으로 아카이빙 한다." },
    { "id": "gxTMI4PV4Ao", "title": "24 11 28, p 13859, 41강, 빌드 명령어 : 아카이빙을 수행한다, 10 단계 완료" },
    { "id": "wfJujCB5D7c", "title": "24 11 28, p 13859, 42강, 검색, 13 단계 완료" },
    { "id": "pAP1hzXfTcI", "title": "24 11 28, p 13859, 42강, 샘플 데이터 생성" },
    { "id": "wwwLImcNHGA", "title": "24 11 29, p 13859, 43강, 페이징에는, page, itemsPerPage, totalItems, totalPages, content(List) 가 필요하다." },
    { "id": "w0R9eyhv558", "title": "24 11 29, p 13859, 44강, 전체 게시물 수를 얻을 수 있다." },
    { "id": "nzPhAtiKHA8", "title": "24 11 29, p 13859, 45강, itemsPerPage 와 totalItems 를 이용해서 totalPages 를 계산하는 것을 리포지터리가 해주도록" },
    { "id": "k5GYVD3c86I", "title": "24 11 29, p 13859, 46강, 리포지터리가 특정 페이지에서 보여줄 게시물만 골라서 리턴하도록" },
    { "id": "t9Ciu0nsSCw", "title": "24 11 29, p 13859, 47강, Pageable DTO 를 도입해서 검색결과에 관련된 정보를 전부 담아서 편하게 쓸 수 있다, Pageable에 제너릭 적용" },
    { "id": "_09qciphFFU", "title": "24 11 29, p 13859, 48강, count 에 검색기능 추가" },
    { "id": "1y6OdZtmI8g", "title": "24 11 29, p 13859, 49강, pageable 에 검색기능 추가" },
    { "id": "Id_WQYnFais", "title": "24 11 29, p 13859, 51강, 페이징과 검색을 조합한 테스트케이스를 3개 더 추가" },
    { "id": "41-m1s1yu8o", "title": "24 11 29, p 13859, 50강, WiseSaying 컨트롤러의 actionList 에 find 대신 pageable 적용" },
    { "id": "vVlbmNGezOM", "title": "24 11 28, p 13859, 37강, 더 이상 테스트모드 뿐 아니라 운영모드에서도 앱을 실행할 수 있어야 한다." },
    { "id": "lccHPnENwlQ", "title": "24 11 28, p 13848, 6강, flex 개구리, 최고의 FLEX 튜토리얼 게임 1탄" },
    { "id": "2RYx7tlm_0k", "title": "24 11 27, p 13859, 18강, Command 클래스 구현" },
    { "id": "6dJbNjA2Zm4", "title": "24 11 27, p 13859, 16강, 삭제 명령어 : 입력된 번호의 명언이 존재하지 않는 경우 예외처리, 7 단계 완료" },
    { "id": "L8rIHcB96ZI", "title": "24 11 26, p 13856, 3강, TDD가 생겨난 이유, TDD는 일종의 개발 방법론이다." },
    { "id": "U_gaor5MoOw", "title": "24 11 26, p 13840, 68강, 결합도를 높히면 당장 구현은 쉬워지지만 구조가 점점 복잡해 진다." },
    { "id": "KV2ujS9PJpc", "title": "24 11 29, p 13859, 52강, 검색조건을 리스트 페이지에서 볼 수 있다." },
    { "id": "Yss46kVXp7U", "title": "24 11 29, p 13859, 53강, 페이지 메뉴를 리스트 페이지에서 볼 수 있다." },
    { "id": "DGEqmoF1ZMI", "title": "24 11 29, p 13848, 10강, flex로 2차 메뉴 구현" },
    { "id": "hPePorqWUJg", "title": "24 11 29, p 13867, 1강, 도커가 이미 설치되어 있다고 가정하고 진행합니다, MySQL 도커로 설치, 1부, 수행" },
    { "id": "GLfcJEakurs", "title": "24 11 29, p 13867, 1강, 도커가 이미 설치되어 있다고 가정하고 진행합니다, MySQL 도커로 설치, 2부, 설명" },
    { "id": "MNleOWYHVSY", "title": "24 11 29, p 13867, 2강, 도커의 모든 자원 초기화 명령어" },
    { "id": "yRUZ2zINFtc", "title": "24 11 29, p 13867, 3강, Dbeaver 설치, 단축키 세팅, localhost, mysql 접속" },
    { "id": "nNdttRzyQFs", "title": "24 12 02, p 13870, 1강, MySQL의 핵심만 다룹니다." },
    { "id": "nGbspXi6Ep8", "title": "24 12 02, p 13869, 1강, 자바 23에서 일단은 해당 의존성과 테스트케이스를 변경하지 말고 만족시켜보세요." },
    { "id": "Q8cTkLquQcY", "title": "24 12 02, ken 13870, 4강, MySQL, DBMS, DB, 테이블, 칼럼, 로우 개념" },
    { "id": "0PmaT3omtv0", "title": "24 12 02, ken 13870, 3강, 생활코딩의 데이터모델링은 무조건 보셨어야 합니다, 아주 유익합니다." },
    { "id": "eeXdUkMCoCo", "title": "24 12 02, ken 13870, 5강, 테이블 생성, 수정, 데이터 CRUD, 1부, DB생성, DB선택" },
    { "id": "kJytK5ocoNI", "title": "24 12 02, p 13870, 2강, PC를 재부팅 한 후 mysql-1 도커 컨테이너를 다시 시작해주세요, MySQL을 배우는 이유" },
    { "id": "fGTHOlF2_xc", "title": "24 12 02, ken 13870, 5강, 테이블 생성, 수정, 데이터 CRUD, 2부, 테이블 생성, 테이블에 row INSERT" },
    { "id": "-gRTeE2mwbI", "title": "24 12 02, ken 13870, 5강, 테이블 생성, 수정, 데이터 CRUD, 3부, 테이블 수정, 데이터 수정, 데이터 삭제" },
    { "id": "iU5fwfMt55k", "title": "24 12 02, ken 13870, 5강, 테이블 생성, 수정, 데이터 CRUD, 4부, DATETIME 타입, NOW 함수" },
    { "id": "D0_NgwuORVc", "title": "24 12 02, ken 13870, 7강, 적당한 제약사항은 장기적으로 봤을 때 좋습니다." },
    { "id": "m0HBjylbRrs", "title": "24 12 02, ken 13870, 8강, NOT NULL, auto_increment, LIKE, AND, OR, 칼럼이름, 칼럼순서 변경, 1부, 널금지, 중복금지" },
    { "id": "T8eXBNND-DY", "title": "24 12 02, ken 13870, 8강, NOT NULL, auto_increment, LIKE, AND, OR, 칼럼이름, 칼럼순서 변경, 2부, 나머지" },
    { "id": "w7e5XevV8LQ", "title": "24 12 02, ken 13870, 9강, INNER JOIN, 사원, 부서, 1부, 사장님의 잦은 변심에 힘듦, 부서명 변경이 쉽도록 테이블 구조를 개선 해야함" },
    { "id": "LTzUcbdvkJU", "title": "24 12 02, ken 13870, 9강, INNER JOIN, 사원, 부서, 2부, 부서명이 아니라 변할 가능성이 없는 부서번호로 관계를 맺는다." },
    { "id": "XS2YUNIqg7M", "title": "24 12 02, ken 13870, 9강, INNER JOIN, 사원, 부서, 3부, INNER JOIN 을 이용해서 2개 이상의 테이블에 존재하는 데이터를 함께 가져오기" },
    { "id": "jwibR0VT3YY", "title": "24 12 03, p 153, 30강, 초심자 분들은 불안해 하지마시고 열심히만 해주세요, 과정 끝까지 초심자분들에게 최선의 맞춤교육을 진행하겠습니다." },
    { "id": "MhkxFpJQg0c", "title": "24 12 03, p 153, 31강, MySQL/JDBC 유틸리티 클래스 SimpleDb 구현 후 PR 날려보세요, PR명 : `[BE4] 000`" },
    { "id": "IEWPXnPYS4E", "title": "24 12 03, p 153, 32강, SQL 튜토리얼 - SQL 고득점 Kit 소개" },
    { "id": "zVV6d153OzE", "title": "24 12 03, ken 13870, 10강, 복습, JOIN, JOIN 은 곱하기 이다. ON이 없다면 쓸데없는 데이터가 생긴다." },
    { "id": "mV4J-DFOedg", "title": "24 12 03, ken 13870, 11강, 복습, JOIN이 가능하도록 테이블 설계" },
    { "id": "iBYSKzziAis", "title": "24 12 03, ken 13870, 12강, SUM, MAX, MIN, COUNT, GROUP BY, 1부, UNION 개념, 서브쿼리 개념" },
    { "id": "K8erU7MrYRg", "title": "24 12 03, ken 13870, 12강, SUM, MAX, MIN, COUNT, GROUP BY, 2부, 부서(부서명)와 사원(사원명, 연봉) 샘플데이터 생성" },
    { "id": "EsxRC0wCGes", "title": "24 12 03, ken 13870, 12강, SUM, MAX, MIN, COUNT, GROUP BY, 3부, 그룹함수가 존재하면, 그룹화(2차 연산), 그룹연산(3차 연산) 발생" },
    { "id": "1brRu1iVIYs", "title": "24 12 03, ken 13870, 12강, SUM, MAX, MIN, COUNT, GROUP BY, 4부, IF, CONCAT, GROUP_CONCAT, FORMAT" },
    { "id": "FI0Urakfdds", "title": "24 12 03, ken 13870, 12강, SUM, MAX, MIN, COUNT, GROUP BY, 5부, CASE" },
    { "id": "tKTrhvew5Xk", "title": "24 12 03, ken 13870, 12강, SUM, MAX, MIN, COUNT, GROUP BY, 6부, JOIN" },
    { "id": "dBZT7y3OFmM", "title": "24 12 03, ken 13870, 12강, SUM, MAX, MIN, COUNT, GROUP BY, 8부, 서브쿼리를 이용해서 HAVING 없이 처리" },
    { "id": "akgc4TRZsfk", "title": "24 12 03, ken 13870, 12강, SUM, MAX, MIN, COUNT, GROUP BY, 7부, HAVING" },
    { "id": "KgmSv8hwLA0", "title": "24 12 03, p 13848, 11강, flex로 3차 메뉴 구현" },
    { "id": "wTWMW_-oyUI", "title": "24 12 03, p 13869, 2강, 프로젝트 생성, GITHUB 리포지터리 연결" },
    { "id": "kRc5UwZhLS0", "title": "24 12 03, p 13869, 3강, 의존성 추가" },
    { "id": "2Jw7V_jqVdw", "title": "24 12 03, p 13869, 4강, SimpleDb 클래스 생성" },
    { "id": "KMLh23cGOoI", "title": "24 12 03, p 13869, 5강, DB 연결하여 Connection 객체 얻음, @BeforeAll 에서 article 테이블 재생성" },
    { "id": "Y46YMRWcZC4", "title": "24 12 03, p 13869, 6강, JDBC, Connection, Statement 등의 개념을 전혀 모를 땐 ChatGPT에게 이렇게 물어보세요.(꼬리물기 질문 필수)" },
    { "id": "QFaIEeUnLQk", "title": "24 12 04, p 13848, 12강, 모듈화, 리팩토링" },
    { "id": "9zMOrvHbk48", "title": "24 12 04, p 13848, 13강, 커스텀 훅 (useTodos) 도입하여 UI 로직과 데이터 처리 로직을 깔끔하게 분리" },
    { "id": "OFOgTHLVkqw", "title": "24 12 04, ken 13870, 13강, 각 부서별 최고연봉자를 출력(부서명, 사원명, 입사일, 연봉)해주세요" },
    { "id": "sWdQjSql3Vs", "title": "24 12 04, ken 13870, 14강, 전 사원 리스트 출력, 부서에 소속된 사원이 한명도 없더라도, 보고서에 해당 부서가 포함되게 해주세요, LEFT JOIIN, 1부" },
    { "id": "JQ3zKP-9jC8", "title": "24 12 04, ken 13870, 14강, 전 사원 리스트 출력, 부서에 소속된 사원이 한명도 없더라도, 보고서에 해당 부서가 포함되게 해주세요, LEFT JOIIN, 2부" },
    { "id": "g42ECiA952s", "title": "24 12 04, ken 13870, 16강, 각 부서별 사원수 출력, 사원수가 없으면 0명으로 출력" },
    { "id": "KWEEsxG32IY", "title": "24 12 04, ken 13870, 16강, 각 부서별 사원수 출력, 사원수가 없으면 0명으로 출력" },
    { "id": "t2POv1dYODQ", "title": "24 12 04, ken 13870, 17강, CHAR 는 용량 낭비가 발생하지만 빠르고 VARCHAR 는 용량이 덜 들지만 느리다." },
    { "id": "cWv58pt2oPY", "title": "24 12 04, ken 13870, 18강, DELETE 와 달리 TRUNCATE 는 테이블을 완전히 초기화 시킨다." },
    { "id": "Zts3estEynw", "title": "24 12 04, ken 13870, 19강, 데이터가 정렬되어 있다는 가정하에 순차 탐색보다 이진 탐색이 훨씬 빠릅니다." },
    { "id": "8NXe41fclJI", "title": "24 12 04, ken 13870, 20강, PRIMARY KEY 는 UNIQUE INDEX 이다. `SELECT * FROM 명언 WHERE id = 500;` 처리과정" },
    { "id": "F-QzBvg4Dxg", "title": "24 12 04, ken 13870, 21강, 인덱스를 추가할 수록 검색속도는 빨라지지만 생성/수정/삭제 속도는 느려진다, 문제가 있을 때 INDEX를 걸어주세요." },
    { "id": "xJJ0VzM4SkY", "title": "24 12 04, ken 13870, 22강, 유니크 인덱스는 조건에 일치하는 것을 하나라도 찾는다면 그 즉시 탐색을 종료하기 때문에 일반 인덱스 보다 더 빠르다." },
    { "id": "8FCQuSgcXmA", "title": "24 12 04, ken 13870, 23강, SQL 앞에 EXPLAIN 을 붙이면, 해당 SQL을 실행하기 위한 실행계획을 확인할 수 있다." },
    { "id": "tKcp-2bkoQg", "title": "24 12 04, ken 13870, 24강, 외래키로 사원 테이블의 부서 번호 칼럼에 존재하지 않는 부서번호를 못 넣게 할 수 있다." },
    { "id": "I7CiDYNZ5SY", "title": "24 12 04, ken 13870, 25강, DISTINCT 를 이용해서 SELECT 결과에서 한번 더 연산을 하여 중복된 결과 ROW를 제거할 수 있다." },
    { "id": "RmYBNFGOsgo", "title": "24 12 04, ken 13870, 26강, INDEX, 1부, 회원 데이터 대량생성 후 인덱스 없이 풀스캔 쿼리 실험" },
    { "id": "bGG34PgbEsM", "title": "24 12 04, ken 13870, 26강, INDEX, 2부, UNIQUE 인덱스를 걸어서 2가지 면에서 검색속도를 개선, EXPLAIN" },
    { "id": "eZ8uobC1c7U", "title": "24 12 04, p 13869, 8강, insert 함수 꼼수로 구현" },
    { "id": "-Cqi8yEVj70", "title": "24 12 04, p 13869, 9강, update 함수 꼼수로 구현" },
    { "id": "elZxkH2jQsY", "title": "24 12 04, p 13869, 10강, delete 함수 꼼수로 구현" },
    { "id": "95wSr-XUXwY", "title": "24 12 04, p 13869, 11강, selectRows 함수 꼼수로 구현" },
    { "id": "dBfcjQWifXA", "title": "24 12 04, p 13869, 12강, selectRow 함수 꼼수로 구현" },
    { "id": "1vnaZ4sJe2c", "title": "24 12 04, p 13869, 13강, selectDatetime 함수 꼼수로 구현" },
    { "id": "VaesgAuVbSE", "title": "24 12 04, p 13869, 14강, selectLong 함수 꼼수로 구현" },
    { "id": "1MLBetE3cU8", "title": "24 12 04, p 13869, 15강, selectString 함수 꼼수로 구현" },
    { "id": "e0xnNqWdXfw", "title": "24 12 04, p 13869, 16강, selectBoolean 함수 꼼수로 구현" },
    { "id": "XImkKBC60bU", "title": "24 04 07, p 13449, 25강, 127.0.0.1 은 무조건 도커 호스트를 뜻하지 않습니다. 각 OS(컨테이너 포함)는 127.0.0.1 이 자신을 가리킵니다." },
    { "id": "WmUiV14sC9c", "title": "24 06 03, p 13564, 10강, 글 리스트 기능 구현" },
    { "id": "e8m1zyQ1Dp8", "title": "24 06 03, p 13564, 11강, 프론트, /post 를 /p 로 변경" },
    { "id": "tiTXlX9Qj0E", "title": "24 06 20, p 13589, 6강, 각 모듈에서 공통지식(로직과 설정) 가져다가 쓰는 방법" },
    { "id": "-fcCjq-Wj70", "title": "24 06 20, p 13589, 5강, 각 모듈들에 대해 디버그 모드에서 브레이크 포인트 활용하는 방법, 테스트 하는 방법" },
    { "id": "fjACOLFTgdw", "title": "24 06 20, p 13589, 4강, app 모듈들을 독립적으로 실행 가능한 스프링부트 모듈로 변경" },
    { "id": "we4_BpKyV20", "title": "24 06 20, p 13589, 3강, 각 모듈들의 역할 설명, 프로젝트 구조를 이런식으로 잡은 이유 설명" },
    { "id": "MdbJo3DEE_8", "title": "24 06 20, p 13589, 2강, 인텔리제이 커뮤니티 버전으로 프로젝트 세팅, 하위 모듈 3개 세팅" },
    { "id": "C-nno1r0zGg", "title": "24 06 20, p 13589, 1강, 스프링부트 MSA, 스벨트킷 연동 앱 구현을 시작합니다." },
    { "id": "xwHQVcdw4aU", "title": "24 06 21, p 13589, 7강, 단순 유틸성 로직을 제외한 비지니스 공통로직을 담을 새로운 모듈 추가, initAll 빈 도입하여 샘플 회원이 생성되도록" },
    { "id": "vxMCdRBS69U", "title": "24 06 21, p 13589, 8강, 회원 다건조회, 단건조회 API 엔드포인트 구현" },
    { "id": "WRhgQ1zUpEg", "title": "24 07 03, p 13609, 4강, 2부, 정답, HTTP GET '/api/v1/posts/5' 에 대한 응답 본문에 resultCode, statusCode, msg 추가" },
    { "id": "zjF2R-Fiaec", "title": "24 07 03, p 13609, 4강, 1부, 문제, HTTP GET '/api/v1/posts/5' 에 대한 응답 본문에 resultCode, statusCode, msg 추가" },
    { "id": "SI6ju_rYVxw", "title": "24 07 03, p 13609, 3강, 2부, 정답, HTTP GET '/api/v1/posts/5' 라고 요청을 하면 5번 글의 내용을 JSON 형식으로 응답" },
    { "id": "1mCo18P7TjE", "title": "24 07 03, p 13609, 3강, 1부, 문제, HTTP GET '/api/v1/posts/5' 라고 요청을 하면 5번 글의 내용을 JSON 형식으로 응답" },
    { "id": "BgKjjyPybAM", "title": "24 07 02, p 13609, 2강, 2부, 정답, HTTP GET '/api/v1/posts/5' 라고 요청을 하면 '5번 글 조회' 라고 응답" },
    { "id": "CyC8NIDlI20", "title": "24 07 02, p 13609, 1강, 도전과제 스프링부트 REST API 기초, 시작합니다, 환경 세팅하기" },
    { "id": "Fn_JgEsZCq0", "title": "24 07 04, p 13609, 5강, 2부, 정답, 응답 본문의 resultCode, statusCode, msg, body 구조를 쉽게 만들기 위해 RsData 도입" },
    { "id": "4wZNl1TPvW0", "title": "24 07 04, p 13609, 5강, 1부, 문제, 응답 본문의 resultCode, statusCode, msg, body 구조를 쉽게 만들기 위해 RsData 도입" },
    { "id": "Hh92B3tIK7Y", "title": "24 07 04, p 13609, 6강, 2부, 정답, 게시물 정보를 Map 객체가 아닌 Post 객체로 표현" },
    { "id": "NjehGLZHPZE", "title": "24 07 04, p 13609, 6강, 1부, 문제, 게시물 정보를 Map 객체가 아닌 Post 객체로 표현" },
    { "id": "afIz26_k1l0", "title": "24 07 04, p 13609, 7강, 2부, 정답, body 부분을 더 세분화 하기(item 추가), 이후부터는 영상없음" },
    { "id": "UH822pEybK0", "title": "24 07 04, p 13609, 7강, 1부, 문제, body 부분을 더 세분화 하기(item 추가), 이후부터는 영상없음" },
    { "id": "QANI-N6SYNY", "title": "24 03 03, p 13435, 12강, 2부, 프로젝트에 장고 앱 모듈 설치" },
    { "id": "cOrsiykVG90", "title": "24 03 03, p 13435, 12강, 1부, 프로젝트에 장고 설정 모듈 설치" },
    { "id": "Xt1SxhFntJY", "title": "24 03 03, p 13435, 8강, 파이참에서 기본 터미널을 GIT BASH 로 변경, 조금 더 편함" },
    { "id": "cTGVRTLqkmo", "title": "24 03 03, p 13435, 3강, 점프 투 장고 책 소개, 파이참 커뮤니티 다운로드" },
    { "id": "m_au7GaVZl4", "title": "24 03 03, p 13435, 11강, 수업페이지에서 GIT 보는 방법" },
    { "id": "wTJXtJisyRM", "title": "24 03 03, p 13435, 7강, GIT 설치, 윈도우 터미널(없으면) 설치" },
    { "id": "v_HmG7CEACY", "title": "24 03 03, p 13435, 10강, 프로젝트 생성, 장고 설치, requirements.txt 생성, .gitignore 생성, GIT 사용자 정보 등록, GIT PUSH" },
    { "id": "TtRpCozqMGI", "title": "24 03 03, p 13435, 9강, 파이참은 venv 를 이용해서 프로젝트 별로 파이썬과 라이브러리 들을 독립적으로 설치 할 수 있게 한다, 장고 설치 및 확인" },
    { "id": "hpHMBC_k19o", "title": "24 03 03, p 13435, 2강, 파이썬 설치" },
    { "id": "t4swuXnjhhc", "title": "24 03 03, p 13435, 6강, 뭔가 안될 때 고치는 방법, 프로젝트 끄고 새로 만드는 방법, 실행, 디버그(브레이크 포인트)" },
    { "id": "bzjR98pDWRo", "title": "24 03 03, p 13435, 5강, 코딩용에 최적화된 폰트 D2Coding 설치, 파이참 세팅" },
    { "id": "AyJRC3XEwgU", "title": "24 03 03, p 13435, 4강, 파이참 설치" },
    { "id": "cMWPcdH4Sok", "title": "24 03 03, p 13435, 1강, 프레임워크란 무엇인가?" },
    { "id": "fdedYd8pMY4", "title": "24 03 03, p 13426, 5강, 프로그래머스 파이썬 알고리즘 레벨 0, 1, 2 순으로 전부 다 풀어주세요. 레벨 1, 2 는 코테준비용" },
    { "id": "uP8ZZHrOS4w", "title": "24 03 03, p 13426, 4강, 프로그래머스 파이썬 입문 파트 11까지는 많이 사용하니 반복해서 풀어주세요. 그 이후는 정답 검색해서 풀어도 됩니다." },
    { "id": "-HNjnjn2s9U", "title": "24 03 03, p 13426, 3강, 절대 이론과 이해를 추구하지 마세요. 이해 안되더라도 많이 만들어보면서 감을 잡는 노력을 하세요." },
    { "id": "ef_D3uAGaOo", "title": "24 03 03, p 13426, 2강, 벨로그에 위키에 1차적으로 적고, 정리해서 하나의 글로 만드세요. 단 글은 짧아야 합니다." },
    { "id": "WpCRXp90Rjs", "title": "24 03 03, p 13426, 1강, ChatGPT, 제미나이 등을 최대한 활용해주세요." },
    { "id": "54EgnmmXu-g", "title": "24 03 09, p 13426, 7강, 파이썬 리스트 설명" },
    { "id": "mfmiJKpbk1Q", "title": "24 03 09, p 13426, 6강, 파이참으로 새 프로젝트 만들어서 main.py 추가하고 실행하는 방법" },
    { "id": "0rM2LquFveE", "title": "24 03 09, p 13426, 10강, for, for 와 리스트 조합, enumerate 로 리스트의 특정 인덱스와 값을 한번에 가져옴" },
    { "id": "u7WGKgtWfpY", "title": "24 03 09, p 13435, 14강, 파이보와 관련된 작업은 일은 파이보 모듈안에서 처리되도록 하자, pybo/urls.py 추가 후 연결에 URL 과 뷰 함수 연결" },
    { "id": "l8GgFJQMf9c", "title": "24 03 09, p 13435, 13강, URL 2개(/pybo2/, /pybo3/) 더 뷰 함수와 연결" },
    { "id": "SQtP1f7Xduc", "title": "24 03 09, p 13426, 9강, index 로 값의 위치를 찾기 가능, 파이썬에서 일반값 제외하고 모든 것이 객체, 리스트도 객체이다, 변수에는 오직 리모콘만 들어간다." },
    { "id": "xDZyilxP5iM", "title": "24 03 10, p 13442, 18강, static 메서드(함수)에서는 static 변수만 사용가능하고, static 함수만 호출할 수 있다." },
    { "id": "GG6SbIz0HUM", "title": "24 03 10, p 13442, 17강, 일단은 함수안에는 코드들이 들어간다고만 이해해 주세요, 클래스 안에 함수들이 많아도 프로그램이 시작 되면 오직 main 함수만 시작됩니다" },
    { "id": "Ch_r434yvIw", "title": "24 03 10, p 13442, 12강, 변수이름은 숫자로 시작할 수는 없고, 합성어라면 뒷단어의 첫문자를 대문자로 쓰는게 관례입니다, feat. 카멜케이스 명명법" },
    { "id": "dP1m3msm1-c", "title": "24 03 10, p 13442, 14강, 변수는 본인이 태어난 블록은 물론 그 블록이 감싸는 하위블록들에서도 쓸 수 있다." },
    { "id": "n32zya0sWvw", "title": "24 03 10, p 13442, 13강, 같은 블록안에서는 똑같은 이름을 가진 변수를 정의(선언, 생성, 등록) 할 수 없습니다. 단순한 이유로 금지되었습니다." },
    { "id": "659ULEB4gH8", "title": "24 03 10, p 13442, 16강, 클래스 안에 변수를 선언하고 함수를 선언할 수 있다. 함수의 사용(호출)은 함수의 정의부분(함수 블록)에서만 가능하다." },
    { "id": "i_wEOSMkvp4", "title": "24 03 10, p 13442, 15강, 만약 특정 공간에서 접근할 수 있는 a 변수가 2개 이상이라면, 해당 공간에서 가장 가까운곳에서 선언(생성)된 a 변수가 선택됩니다." },
    { "id": "3SYnhERBVKM", "title": "24 03 10, p 13442, 11강, 중요, 변수는 = 좌측에 있을 때만 변수이고, 그 외에는 전부 그 변수가 품고 있는 값으로 취급해주어야 합니다." },
    { "id": "1QwikO3C0tg", "title": "24 03 10, p 13442, 10강, int a = 10; 이렇게 하면 a 라는 이름의 변수를 선언과 동시에 10으로 초기화 한 것 입니다." },
    { "id": "rG18VrLsqOI", "title": "24 03 10, p 13442, 9강, 변수를 선언(생성) 먼저 하시고, 사용하세요. 그 안에 값을 = 으로 넣으면 값이 변합니다, 그래서 변수 입니다." },
    { "id": "c2phwgGRuFA", "title": "24 03 10, p 13442, 8강, System.out 은 표준출력(모니터)이고 System.out.println 은 입력받은 인자를 모니터에 출력한다." },
    { "id": "YWExHPKUoA8", "title": "24 03 10, p 13442, 6강, 중괄호로 감싸여진 부분을 블록이라고 합니다. 블록안에 1개 이상의 블록이 들어갈 수 있습니다. 그 안에 또 블록들이 들어갈 수 있습니다." },
    { "id": "-LAneVtzlJI", "title": "24 03 10, p 13442, 7강, ChatGPT, 제미나이, 뤼튼AI 등을 최대한 잘 활용하지 못하면 망합니다." },
    { "id": "ZOR3Ubyzy9w", "title": "24 03 10, p 13442, 5강, GITHUB 코파일럿은 무조건 쓰셔야 합니다. 개발자 지망생 이시면 안쓰셔도 됩니다." },
    { "id": "rkRNQDl_2-k", "title": "24 03 10, p 13442, 4강, 프로그램은 위에서 아래로 한줄, 한줄, 순차적으로, 순서를 지키면서 실행된다, 절대로 동시에 실행되지 않는다." },
    { "id": "9YX-pwGgHuk", "title": "24 03 10, p 13442, 3강, public static void main(String[] args) { ... } 함수는 프로그램의 시작점이고 2개 이상 있어도 된다." },
    { "id": "IcgMWm2XPg0", "title": "24 03 10, p 13442, 1강, 자바 기초강의 시작합니다, 인텔리제이 커뮤니티 설치 및 세팅법은 slog.gg/p/13445 에서 확인" },
    { "id": "S0WB3YFbEEA", "title": "24 03 10, p 13442, 2강, 인텔리제이 커뮤니티에서 일반 자바 프로젝트 생성하는 방법" },
    { "id": "YsxqMeTDTPc", "title": "24 03 10, p 13435, 17강, 모델 추가, make 마이그레이션, 마이그레이션 수행하여 테이블 생성" },
    { "id": "laNF_zQvqK8", "title": "24 03 10, p 13435, 16강, 마이그레이트하면 DB(db.sqlite3 파일)가 생기고 기본앱이 실행되는데 필요한 테이블과 데이터가 세팅됨" },
    { "id": "fdoFdTIYSwo", "title": "24 03 10, p 13435, 15강, 새로운 환경에서 기존 파이썬 프로젝트 이어가는 방법" },
    { "id": "UeJNbcGBuco", "title": "24 03 10, p 13426, 15강, 파이참에서 실행버튼 누르면 실행이 안되고 세팅설정 창이 뜨는 경우 해결법, 프로젝트가 파이썬을 인식해야 합니다." },
    { "id": "qFATz14JPPo", "title": "24 03 10, p 13426, 16강, int 함수는 문자열을 숫자형태로 바꿔주고, str 함수는 숫자를 문자열 형태로 바꿔준다." },
    { "id": "sbAjimXN5xA", "title": "24 03 10, p 13426, 17강, 딕셔너리.update(다른_딕셔너리) 를 통해서 두 딕셔너리의 합집합을 만들 수 있다." },
    { "id": "SB448G6QDYI", "title": "24 03 10, p 13426, 18강, if \"1월\" in 할 때 딕셔너리는 키 중심이다. 딕셔너리의 값에서 찾으려면 values() 가 필요하다, items() 함수도 유용" },
    { "id": "6sS14HAVSuY", "title": "24 03 10, p 13426, 14강, 리스트와 for 문 복습" },
    { "id": "HXRFL1DRD5M", "title": "24 03 10, p 13426, 13강, 딕셔너리를 for 로 반복하면 key 가 나열된다. 파이썬 최신버전부터는 나열되는 key 가 데이터 입력순이다." },
    { "id": "PcIBM7rFPLs", "title": "24 03 10, p 13426, 12강, 딕셔너리에 데이터 넣고, 빼고, 수정하는 방법, 딕셔너리에는 순서라는 개념이 없다." },
    { "id": "ZzyY5jCgzNY", "title": "24 03 10, p 13426, 11강, 리스와 달리 딕셔너리는 데이터 넣을 때는 불편하고, 데이터에 접근할 때는 편하다." },
    { "id": "fMOrX0aiFxU", "title": "24 03 16, p 13426, 20강, input, strip, split, map, sum 조합" },
    { "id": "rL6gEgbZ278", "title": "24 03 16, p 13426, 21강, 파이썬 공부의 3단계, 프로그래머스 파이썬 입문, 프로그래머스 파이썬 알고리즘 레벨 0, 점프 투 장고" },
    { "id": "3Rc3NnW5RP8", "title": "24 03 16, p 13426, 19강, 문자열, 반복문, break, continue" },
    { "id": "t_3AR3EQap0", "title": "24 03 17, p 13435, 32강, 폼" },
    { "id": "3ffKVNUiUvQ", "title": "24 03 17, p 13435, 29강, 스태틱" },
    { "id": "6NzSQwLSma4", "title": "24 03 17, p 13435, 30강, 부트스트랩" },
    { "id": "Fi9NH1U9F4s", "title": "24 03 17, p 13435, 28강, 데이터 저장" },
    { "id": "I51JKgCN_rU", "title": "24 03 17, p 13435, 31강, 템플릿 상속" },
    { "id": "2BsQnC_gXLU", "title": "24 03 17, p 13435, 27강, URL 별칭" },
    { "id": "_E4jcIEuZyo", "title": "24 03 17, p 13435, 26강, 조회와 템플릿" },
    { "id": "vQPdwdPrKeM", "title": "24 03 17, p 13435, 21강, models.py 의 변경사항은 DB(db.sqlite3)에도 반영되어야만 한다. 그것이 바로 migrate" },
    { "id": "Z8Y7zULqHLA", "title": "24 03 17, p 13435, 25강, 장고 admin 유저 생성, admin 페이지 활성화" },
    { "id": "5fStA0Lfudw", "title": "24 03 16, p 13435, 19강, 장고 셸을 통해서 모델 다루기" },
    { "id": "EoLDtm_asgk", "title": "24 03 17, p 13435, 22강, DB Browser 에서 데이터베이스 닫기, db.sqlite3 삭제, pybo/migrations 폴더 초기화, 다시 migrate" },
    { "id": "IOaeaaWnzgE", "title": "24 03 16, p 13435, 20강, 새로운 환경에서 19강 내용을 복습하는 방법" },
    { "id": "R4LXOzjnvkA", "title": "24 03 17, p 13435, 24강, 새로운 환경에서 19강 내용을 복습하는 방법, 다시한번 설명" },
    { "id": "RNKoMHs7LPM", "title": "24 03 17, p 13435, 23강, 장고 쉘에서 exit() 입력하면 나갈 수 있다." },
    { "id": "RPbZLTvdf0I", "title": "24 03 16, p 13435, 18강, DB Browser for SQLIte 다운로드 및 실행, DB 열기" },
    { "id": "IqadSN_sOsU", "title": "24 03 28, p 13442, 20강, if ( 소괄호 ) { 중괄호 }, if 소중 으로 외우세요." },
    { "id": "JPgzrmKHPj4", "title": "24 03 28, p 13442, 22강, if 그룹에서 else 를 마지막에 할때 if 를 생략해도 된다." },
    { "id": "Va3UH73Lazo", "title": "24 03 28, p 13442, 21강, else 를 사용하면 여러 if 문들을 하나의 그룹으로 묶을 수 있다." },
    { "id": "caEcnneX2M4", "title": "24 03 28, p 13442, 19강, 함수를 만드는 이유" },
    { "id": "1N0v04hu-L4", "title": "24 03 30, p 13449, 5강, 모든 도커 환경 초기화 하는 방법, 실습을 처음부터 하고 싶으시다면 이렇게 초기화 해주세요." },
    { "id": "4RlmXMzIYW8", "title": "24 03 30, p 13449, 3강, 도커를 안쓰면 이런 문제들이 생깁니다." },
    { "id": "Fcx6j3R_Scg", "title": "24 03 30, p 13449, 1강, 수업소개, 윈도우 사용자는 GIT BASH 가 필요합니다." },
    { "id": "FjY953UDLG0", "title": "24 03 30, p 13449, 4강, 도커는 HOST 운영체제 안에 GUEST 운영체제를 성능저하 없이 운영할 수 있게 해줍니다." },
    { "id": "P_ZiTtw10R8", "title": "24 03 30, p 13449, 7강, 도커 이미지는 설치된 프로그램과 같고, 도커 이미지를 실행하면 도커 컨테이너가 생성됩니다." },
    { "id": "olqGVV5pwSo", "title": "24 03 30, p 13449, 6강, docker pull 을 하면 기본적으로는 docker hub 에서 해당 이미지를 다운로드 합니다." },
    { "id": "lkA1aTdyprM", "title": "24 03 30, p 13449, 2강, 도커 데스크톱 설치" },
    { "id": "W7al_f20ecQ", "title": "24 04 07, p 13449, 17강, 도커 컨테이너의 이름은 중복될 수 없습니다. docker run 할 때 --name 옵션으로 이름 설정가능" },
    { "id": "mmBiPtgmhhY", "title": "24 04 07, p 13449, 16강, 도커 포그라운드에서 바로 실시간으로 볼 수 있었던 로그들을 백그라운드에서 보려면 docker logs" },
    { "id": "a0bHN9_JuA8", "title": "24 04 07, p 13449, 18강, 도커 컨테이너는 OS 입니다. 해당 OS에 명령을 날리고 싶다면 docker exec" },
    { "id": "M4OcKfDau70", "title": "24 04 07, p 13449, 15강, 도커에는 자체적인 데몬화 옵션이 있습니다." },
    { "id": "057_tA3lOf0", "title": "24 04 07, p 13449, 14강, 포그라운드와 백그라운드(데몬)의 차이" },
    { "id": "BA11TF2-PO8", "title": "24 04 07, p 13449, 13강, 백그라운드 프로세스를 강제종료시키려면 kill 명령어를 사용해야 한다." },
    { "id": "UhOukxX2ifo", "title": "24 04 07, p 13449, 12강, nohup 명령어 & 와 같은식으로 수행하면 해당 프로세스는 백그라운드로 수행되고, 부모 프로세스가 종료되도 계속 수행된다." },
    { "id": "dS9ZX1byLnk", "title": "24 04 07, p 13449, 11강, 셸에서 명령을 수행하면 해당 명령 프로세스는 셸 프로세스의 자식으로 생성되는게 보통이다." },
    { "id": "OpUz5y0XJU4", "title": "24 04 07, p 13449, 10강, 도커 컨테이너 정지 후 삭제" },
    { "id": "o3O1UkbJMOo", "title": "24 04 07, p 13449, 9강, 도커 컨테이너 삭제" },
    { "id": "q-25zdHLuD8", "title": "24 04 07, p 13449, 8강, 도커 run을 하면 도커 이미지 안에 있는 엔트리포인트가 수행되고, 그 녀석이 완료되면 도커 컨테이너도 종료된다." },
    { "id": "HmuQdnzQ7LA", "title": "24 04 07, p 13449, 27강, 어떠한 네트워크에 포함되었는지에 상관없이 host.docker.internal 로 도커호스트에 접근가능" },
    { "id": "-OuQki6S5G0", "title": "24 04 07, p 13449, 26강, 커스텀 네트워크에서는 서로를 IP뿐 아니라 컨테이너 이름으로 식별할 수 있다." },
    { "id": "pVhRAES8NVE", "title": "24 04 07, p 13449, 24강, 네트워크 생성, 172.17.0.1 는 디폴트 네트워크가 아닌 다른 네트워크안에 포함된 컨테이너들에게는 의미가 없습니다." },
    { "id": "MhKY2ewssJU", "title": "24 04 07, p 13449, 23강, 172.17.0.1 은 누구의 IP 일까요? 디폴트 네트워크안에 들어있는 컨테이너들에게 그것은 도커 호스트의 IP 라고 보시면 됩니다." },
    { "id": "PnJZvUbnuYo", "title": "24 04 07, p 13449, 22강, 기본 도커 네트워크의 이름은 bridge 이고 그것의 게이트웨이 IP 는 172.17.0.1 이다." },
    { "id": "10bTF-fPgD4", "title": "24 04 07, p 13449, 21강, docker inspect 이미지_이름, docker container inspect 컨테이너_이름 으로 자세한 정보를 볼 수 있음" },
    { "id": "VQubuqC1kg0", "title": "24 04 07, p 13449, 20강, 아예 해당 도커 컨테이너로 접속해서 명령을 날리고 싶다면 docker exec -it 컨테이너_이름 bash" },
    { "id": "vfwg3Ett_Ww", "title": "24 04 07, p 13449, 19강, 복잡한 명령은 docker exec -it 컨테이너_이름 처럼, -it 옵션을 붙여야 합니다." },
    { "id": "ZN1r-rJqZOA", "title": "23 12 03, p 13250, 7강, 날짜 관련 정규식에서 초단위 이후 내용이 없어도 통과 되도록, @RequestBody 도입" },
    { "id": "ndbK2lGfXIk", "title": "23 12 03, p 13250, 6강, RsData 의 statusCode 가 HttpServletResponse 의 응답코드가 되도록" },
    { "id": "kUl_Aj2SE20", "title": "23 12 03, p 13250, 5강, RsData 클래스 도입, 모든 API 응답의 기본양식 역할" },
    { "id": "pxjM9I_7OjQ", "title": "23 12 03, p 13250, 4강, MeResponse 클래스 추가, 테스트케이스에서 jsonPath 사용하여 올바른 json 이 구성되었는지 체크" },
    { "id": "V63jtPvrDJQ", "title": "23 12 03, p 13250, 3강, GET /api/v1/members/me" },
    { "id": "83M3mSfuFE8", "title": "23 12 03, p 13250, 1강, 프로젝트 세팅" },
    { "id": "VTkwmJBiCcM", "title": "23 12 03, p 13250, 2강, 미디엄 클론코딩, 블로그 결제 정산 기능 구현, 스프링부트와 스벨트킷으로 구현" },
    { "id": "RAoJ97hEUas", "title": "23 10 04, ken 13039, 35강, Rq::redirectOrBack 메서드 도입, EmailVerificationController::verify 메서드 리팩토링" },
    { "id": "kd5HGJF_bsM", "title": "23 09 26, ken 13039, 34강, 이메일 발송기록 로깅" },
    { "id": "EnFRWlq86ug", "title": "23 09 26, ken 13039, 33강, 전체적인 리팩토링" },
    { "id": "t4posVYpWX8", "title": "23 10 04, ken 13039, 36강, 이메일인증을 하지 않았다면 그 어떤 페이지로도 이동하지 못하도록 시큐리티 작업" },
    { "id": "CJylWj32Cpc", "title": "23 10 04, ken 13039, 37강, 아이디 찾기" },
    { "id": "HQfQzY45r2s", "title": "23 10 05, ken 13039, 39강, 비밀번호 찾기" },
    { "id": "JCpssU1BLOo", "title": "23 10 05, ken 13039, 38강, 로그인 페이지의 디폴트 로그인 아이디 필드값 파라미터를 lastUsername 으로 변경, 로그인 실패 사유 자세히 알림" },
    { "id": "rLWEkK4GL98", "title": "23 10 06, ken 13039, 45강, 리퍼러 체크는 불완전하기 때문에 별도의 코드를 발행해서 체크, RsData 에 optional() 메서드 추가" },
    { "id": "GYw_COZAuEc", "title": "23 10 06, ken 13039, 44강, 개인정보수정페이지에 무단으로 접근하지 못하도록 리퍼러로 체크" },
    { "id": "GiPTriIWAw8", "title": "23 10 06, ken 13039, 43강, 개인정보수정페이지에 접근하기 전에 비밀번호 체크하는 페이지 경유" },
    { "id": "3nQJfFbfUio", "title": "23 10 06, ken 13039, 42강, 개인정보 수정할 때 기존 패스워드 체크" },
    { "id": "Elum4zhUeiA", "title": "23 10 06, ken 13039, 41강, 개인정보 수정" },
    { "id": "ppbUlV4oAIw", "title": "23 10 06, ken 13039, 40강, 내 정보" },
    { "id": "WTesxT4Cmwg", "title": "23 10 10, ken 13039, 46강, 관리자 페이지 추가, 관리자 페이지에 회원목록기능 구현" },
    { "id": "2tsBZL9dLFk", "title": "23 10 10, ken 13039, 48강, 회원정보수정에서 비밀번호 미입력시 공백으로 작성되는 버그 수정, 검색기능 UI 개선" },
    { "id": "nwfgMOEKDok", "title": "23 10 10, ken 13039, 47강, 회원목록에 검색기능 추가" },
    { "id": "aoHh3NOg5Bw", "title": "23 09 18, ken 13027, 1강, 13008 수업의 소스코드를 가져와서 실행" },
    { "id": "pq9QB-wGsNs", "title": "23 09 19, ken 13029, 13강, @Transactional 이 중첩되어 있다면 가장 바깥의 것만 작동합니다." },
    { "id": "1563qs9bwao", "title": "23 09 19, ken 13029, 14강, 회원 생성" },
    { "id": "WSEvxL4Ajzs", "title": "23 09 19, ken 13029, 15강, 답변 생성" },
    { "id": "YCUGxbuW8PQ", "title": "23 09 19, ken 13029, 16강, 질문 삭제, 수동으로 관련된 답변들을 먼저 제거" },
    { "id": "CbO6NlaSZvQ", "title": "23 09 19, ken 13029, 17강, `answers` 필드 추가, `@Builder.Default`, `@OneToMany(mappedBy = \"question\")`" },
    { "id": "D0dTVHdo8ZI", "title": "23 09 19, ken 13029, 12강, 하나의 객체를 save 후 findById 를 하면 영속성 컨텍스트에 저장된 걸 가져오기에 SELECT 스킵" },
    { "id": "fbtAtwGZ8ig", "title": "23 09 19, ken 13029, 11강, 영속성 컨텍스트는 트랜잭션 당 1개씩 존재한다." },
    { "id": "LzwADyDmyS8", "title": "23 09 19, ken 13029, 10강, 히카리CP라는 DB 커넥션 풀 매니저는 여러개의 DB 커넥션을 미리 만들어 둔다." },
    { "id": "BBmrxs5VLCU", "title": "23 09 19, ken 13029, 9강, this 는 real, self 는 프록시를 가리킨다. 프록시를 통해야 @Transactional 이 작동한다." },
    { "id": "uFE8DR0DMsU", "title": "23 09 19, ken 13029, 8강, @Transactional 메서드를 가진 클래스의 객체는 프록시 객체를 통해서 호출되어야 한다." },
    { "id": "y7HhVbrP6dM", "title": "23 09 19, ken 13029, 7강, 트랜잭션은 All or Nothing 이다. RuntimeException 혹은 그의 하위 Exception 발생 시 Rollback" },
    { "id": "puDt5tf2FR0", "title": "23 09 19, ken 13029, 6강, 트랜잭션 안에 트랜잭션은 없다. 가장 바깥쪽 트랜잭션만 반영된다." },
    { "id": "551wnAHm-cU", "title": "23 09 19, ken 13029, 5강, MySQL general_log 설정을 켜서 실제로 실행되는 SQL을 확인" },
    { "id": "6YDL-4Lu7os", "title": "23 09 19, ken 13029, 4강, 인텔리제이 콘솔에서 SQL의 실행을 최대한 자세하고 편하게 볼 수 있도록 설정" },
    { "id": "VMANcWprJXE", "title": "23 09 19, ken 13029, 2강, @Builder, @CreatedDate, @LastModifiedDate, 엔티티 상속" },
    { "id": "EPm-CspR0kg", "title": "23 09 19, ken 13029, 3강, 인자없는 생성자를 직접 생성시에는 protected 로, @SuperBuilder는 부모와 자식에게 모두 적용해야 한다." },
    { "id": "2dygjseecLY", "title": "23 09 20, ken 13029, 29강, default_batch_fetch_size 를 설정하시고 마음편히 Lazy를 남발하세요." },
    { "id": "4_NlTeUEI4k", "title": "23 09 20, ken 13029, 28강, @ManyToOne 필드에는 @ToString.Exclude 를 붙여서 순환참조 오류 예방" },
    { "id": "nLs_mFKXM0I", "title": "23 09 20, ken 13029, 27강, @OrderBy 를 통해서 OneToMany 데이터를 정렬할 수 있다." },
    { "id": "XEyo8gmBAgY", "title": "23 09 20, ken 13029, 26강, 강한 관계성을 가진 엔티티 사이만 OneToMany 사용해야한다." },
    { "id": "PMVCe8EFDgw", "title": "23 09 20, ken 13029, 25강, 쿼리를 여러번 날리는건 문제가 안된다. ManyToOne 도 Lazy 로 바꾸자" },
    { "id": "2NG4mdh9SKU", "title": "23 09 20, ken 13029, 24강, 여태까지의 내용 총정리" },
    { "id": "GQlOOPT2NiA", "title": "23 09 21, ken 13029, 32강, QueryDSL 도입" },
    { "id": "1jno_nOgfOk", "title": "23 09 21, ken 13029, 31강, @Query 로 복잡한 SQL" },
    { "id": "fQ67gbuNql8", "title": "23 09 21, ken 13029, 30강, JPA 기본함수만으로 복잡한 SQL" },
    { "id": "uPpSkD7Lusw", "title": "23 09 22, ken 13036, 4강, 코드 하이라이터 플러그인 적용" },
    { "id": "T57jZJ-bZnY", "title": "23 09 22, ken 13036, 3강, 차트 플러그인 적용" },
    { "id": "JrXURnAzFTo", "title": "23 09 22, ken 13036, 2강, 기본 사용법" },
    { "id": "XWcakU7ibFE", "title": "23 09 22, ken 13036, 1강, 개요" },
    { "id": "sDiu7RNTlqk", "title": "23 09 22, ken 13039, 18강, 중복체크 결과를 toastr 로 보여주지 않고 하단 텍스트로" },
    { "id": "uvKqf-XZOTI", "title": "23 09 22, ken 13039, 17강, debounce 를 적용하여 중복체크함수에 대한 민감도를 낮춘다" },
    { "id": "ddgwFy3tZrw", "title": "23 09 22, ken 13039, 16강, 중복체크버튼 제거, 자동으로 중복체크가 되도록" },
    { "id": "HWc7asUm6lU", "title": "23 09 22, ken 13039, 15강, 회원가입 폼에서 username 중복체크를 ajax 로 구현" },
    { "id": "eFgoC0vkNUM", "title": "23 09 22, ken 13039, 14강, historyBack 메세지를 로컬스토리지와 pageshow 윈도우 이벤트를 이용해서 우아하게 표시" },
    { "id": "3aNp67R9RUI", "title": "23 09 22, ken 13039, 13강, Rq 도입하여 결과 화면으로 이동하는 로직을 깔끔하게" },
    { "id": "Dw1VvYMT8IE", "title": "23 09 22, ken 13039, 12강, js.html 의 메세지를 컨트롤러에서 동적으로 설정할 수 있도록" },
    { "id": "9np9l9Q1eNc", "title": "23 09 22, ken 13039, 11강, 실패시 js.html 에서 history.back(); 실행" },
    { "id": "bcL_DleeJGw", "title": "23 09 22, ken 13039, 10강, layout.html 에서 URL로 부터 msg 파라미터를 읽어서 toastr 로 출력" },
    { "id": "rnnlJsGsdhs", "title": "23 09 22, ken 13039, 9강, NotProd 로 회원 자동생성, 성공/실패 메세지를 URL 파라미터에 넣기" },
    { "id": "llVP8Uir5cM", "title": "23 09 22, ken 13039, 8강, alert 를 toastr 로 변경" },
    { "id": "2Tbvs5fRuRQ", "title": "23 09 22, ken 13039, 7강, RsData 를 사용하는 이유" },
    { "id": "9sst_X4HnOU", "title": "23 09 22, ken 13039, 6강, 결과를 조금 더 자세히 알려주고 싶을 때 RsData 사용" },
    { "id": "mtj-QOb5MCU", "title": "23 09 22, ken 13039, 5강, 회원가입 처리" },
    { "id": "kX29viILQWM", "title": "23 09 22, ken 13039, 4강, 회원가입 폼" },
    { "id": "nUmfw-uvNqw", "title": "23 09 22, ken 13039, 3강, 레이아웃 디자인" },
    { "id": "V0HB2Daot3Y", "title": "23 09 22, ken 13039, 2강, 제이쿼리, 토스틀, 데이지UI 로딩, 레이아웃 생성" },
    { "id": "DqGoLF1QdJk", "title": "23 09 22, ken 13039, 1강, 프로젝트 세팅" },
    { "id": "iOqEQgUFr8o", "title": "23 09 22, ken 13036, 5강, 다크테마에서는 prism default 가 아닌 아니라 prism-okaidia 를 사용" },
    { "id": "IgRrEQeP1H4", "title": "23 09 25, ken 13039, 32강, attr 도입, email 인증기능 구현" },
    { "id": "qQIsrqG7r-Q", "title": "23 09 25, ken 13039, 31강, 먼 훗날 이메일 발송이 완료될 때 할일을 비동기 콜백함수를 사용해서 정의" },
    { "id": "fDKHwA0wEWo", "title": "23 09 25, ken 13039, 30강, async 로 메일이 다 발송될 때까지 기다리지 않고 빠르게 넘어가도록" },
    { "id": "FIKvgvY3YNo", "title": "23 09 25, ken 13039, 29강, 가입 축하메일 발송, 원활한 테스트를 위해 test@com 으로 끝나는 메일로는 발송하지 않음" },
    { "id": "5wXfkHjU3Wo", "title": "23 09 25, ken 13039, 28강, 이메일 라이브러리 추가, 지메일 앱 비밀번호 생성" },
    { "id": "BUfZz4kbR1U", "title": "23 09 25, ken 13039, 26강, 회원가입 시 email 필드 추가" },
    { "id": "daw_RpP2y4w", "title": "23 09 25, ken 13039, 27강, 회원가입시 username 과 email 의 중복체크 로직이 특정 상황에 작동하지 않는 오류 해결" },
    { "id": "H3_B5oJR1zU", "title": "23 09 25, ken 13039, 23강, 로그인, 로그아웃, 성공 혹은 실패시 메세지, 메세지에 ttl 부여" },
    { "id": "b9ofbtesmVE", "title": "23 09 25, ken 13039, 25강, memberService.findProfileImgUrl 메서드 구현하여, 현재 로그인한 회원의 프로필 이미지 노출" },
    { "id": "kpiAXUNzg00", "title": "23 09 25, ken 13039, 24강, 레이아웃 메뉴내용을 로그인 여부에 따라 분기" },
    { "id": "ZtyF78VnSVY", "title": "23 09 25, ken 13039, 22강, msg 파라미터 추가시 기존에 존재하는 파라미터를 고려하여 작업" },
    { "id": "QdTYh2gwQcI", "title": "23 09 25, ken 13039, 21강, 스프링부트 앱 외부폴더에 업로드된 파일이 저장되도록" },
    { "id": "D38BTJJCkLo", "title": "23 09 25, ken 13039, 20강, GenFile 에 업로드된 파일의 메타정보가 저장되도록" },
    { "id": "Ar9BNt_PEGI", "title": "23 09 25, ken 13039, 19강, 회원가입 폼에 프로필 이미지 업로드, GenFile 엔티티 추가" },
    { "id": "L0nKXyDlZCk", "title": "23 09 18, ken 13027, 9강, Collectors.groupingBy 를 사용하여 forCalendarArticles 생성, 달력에 할일들 표시" },
    { "id": "v4OkPzTDBKA", "title": "23 09 18, ken 13027, 8강, grid 형태의 달력을 적용" },
    { "id": "s6lxYuce7uE", "title": "23 09 18, ken 13027, 7강, grid 형태로 달력구현, 성공" },
    { "id": "CdY-jxpExDc", "title": "23 09 18, ken 13027, 6강, table 형태로 달력구현, 실패" },
    { "id": "4iRzschCHjE", "title": "23 09 18, ken 13027, 5강, 이전달, 다음달 버튼" },
    { "id": "ut5XPS7ZgFo", "title": "23 09 18, ken 13027, 4강, eventDate가 특정월에 속하는 게시물만 추려서 가져오기" },
    { "id": "ineVF3WhFqw", "title": "23 09 18, ken 13027, 3강, 엔티티에 eventDate 추가, 테스트 데이터 생성시에 eventDate 가 고르게 분포되도록" },
    { "id": "i4fVLa8vE-s", "title": "23 09 18, ken 13027, 2강, 엔티티에 createDate, modifyDate 의 값이 자동으로 저장되도록" },
    { "id": "2LpxjF7BErg", "title": "23 09 18, ken 13021, 13강, 회원정보수정" },
    { "id": "94s_t1WxkjE", "title": "23 09 18, ken 13021, 16강, 로그인 성공시 성공 메세지 보여주기" },
    { "id": "ikSrrcoTnr4", "title": "23 09 18, ken 13021, 15강, 회원정보수정 후 성공 메세지" },
    { "id": "mRan9Oik6x0", "title": "23 09 18, ken 13021, 14강, 로그인 실패시 에러 메세지 커스터마이징" },
    { "id": "6gQpvplc-90", "title": "23 09 14, ken 13008, 2강, 무한 스크롤 적용" },
    { "id": "R6wiQmWv7gg", "title": "23 09 18, ken 13029, 1강, 프로젝트 세팅" },
    { "id": "aoHh3NOg5Bw", "title": "23 09 18, ken 13027, 1강, 13008 수업의 소스코드를 가져와서 실행" }
  ]
}