{
  "channel": {
    "id": "SeleniumExpress",
    "name": "Selenium Express",
    "profile": "https://yt3.googleusercontent.com/ytc/AGIKgqNaNtE_wkcQnSzu_ux7Htxm4h8oxOdzJehijy0UaQ=s176-c-k-c0x00ffffff-no-rj",
    "banner": "https://yt3.googleusercontent.com/lOB0YSLGhIh7DdbmkvL2nsevjVGo9pSgwhriNSjajZuqSklUgVH1NsA5xPYe6JGDUKQ6SSS7xw=w1060-fcrop64=1,00005a57ffffa5a8-k-c0xffffffff-no-nd-rj"
  },
  "videos": [
    { "id": "yohGxGYg3t4", "title": "Spring Boot project #1 - Let's code a Game Using Java + Spring |  spring boot tutorial for beginners" },
    { "id": "ot-5L3pE8ro", "title": "Spring Boot Project Challenge #2 -  Logic Building & Debugging | spring boot for beginners" },
    { "id": "14OjZL7Dk1I", "title": "Spring Security Master class - Setting Up User Registration | spring security tutorial | Ep #5" },
    { "id": "_yhuyrtvv18", "title": "Spring Boot Project Challenge #3 - Handling Optional Request Parameters in Spring MVC / REST API" },
    { "id": "XX8zq-Qg9uk", "title": "WHAT JdbcUserDetailsManager is all about ? MUST-KNOW Spring Security database authentication example" },
    { "id": "jmlXMhS8zjc", "title": "Spring Boot Project Challenge #4 : Solve this array puzzle using Java  & Spring  Boot" },
    { "id": "3MoJlyPmycA", "title": "Coding Game Over feature using Spring boot + Java + Javascript | Spring boot project challenge 5 & 6" },
    { "id": "-HU8whhAWBM", "title": "Spring Security LOGIN with custom Database table (MySQL) | UserDetailsService #7" },
    { "id": "z65J3JPbs9A", "title": "Spring Data JPA [PRO] - How to connect Multiple Databases using Spring Boot | Multiple Datasources" },
    { "id": "n9LB2U4h3OY", "title": "spring bean scopes implementation in real-time | Reload button | Game development challenge #6" },
    { "id": "ZTv6uQ2AlA8", "title": "Spring Framework 6 - project setup | Spring Core | Spring MVC | Spring Boot -  STS / Eclipse" },
    { "id": "v_ABLktEwRU", "title": "Microservices in 60 mins | Learning Path & Interview Preparation" },
    { "id": "0RbL5Ps2V-w", "title": "Spring Security Master Class - Configure HttpSecurity | User Authentication & Authorization #4" },
    { "id": "lRyIUCzrSew", "title": "[NEW] Spring Security Basics -  User | UserDetails | UserDetailsManager #springsecurity | Ep - 2" },
    { "id": "tHfUhfDvBmY", "title": "Master Spring Security Basics - II | Step by Step tutorial for beginners | Episode - 3" },
    { "id": "f0Qsst3hwpQ", "title": "[NEW] Spring Security - Securing Web apps | Episode 1" },
    { "id": "4iIn5VQqyZw", "title": "How Spring JDBC Auto configuration works internally ?ðŸ¤” Spring Boot Foundation tutorial | MySQL" },
    { "id": "9grEmpRfK0Y", "title": "Java Interview Prep -  Spring boot and Microservices interview questions for experienced | Live Mock" },
    { "id": "B1uKqtZLes0", "title": "How Spring Boot Auto Configuration works ? | Create Custom Auto configuration  | `@Conditional`" },
    { "id": "KB765AJ8uBU", "title": ".YAML vs .Properties - What will you choose ? Spring Boot properties configuration | Spring boot #4" },
    { "id": "acLWc5Nz-g0", "title": "How Spring Boot works ? Jackson REST API support | Version Management |  Bean Lifecycle Annotations" },
    { "id": "uIGPX6fVDdw", "title": "This is how MICROSERVICES works in real-time ! Spring Cloud Load Balancer + Eureka in action #8" }, 
    { "id": "SEPmPXoCIXk", "title": "Introducing Load Balancer in Microservices architecture | OpenFeign | Spring Boot | Spring Cloud #4" }, 
    { "id": "a2EZxkwMrjU", "title": "How Microservices communicate? API BEST practices | Java | Spring Boot | REST API #3" }, 
    { "id": "RDUc4vVCWjI", "title": "#5 Setting UP JDBC Authentication with Spring Security | Security Database Default Schema" }, 
    { "id": "6jpHNlpqAKY", "title": "#14 Spring MVC :Add CSS / JS / Images to your app | Static Resources |Java + spring Live project|P-1" }, 
    { "id": "KUu7fPowotg", "title": "#7 UI: Save Student | Spring crud example with MySQL | Java + spring Live project" }, 
    { "id": "vmog6-p4PVs", "title": "#5 Java Spring MySQL: Letâ€™s Pull them together! Populate Data On UI | Java + spring Live project" }, 
    { "id": "oJK_egOYA4s", "title": "Spring Jdbc Batch update | Transaction management in spring [Basics] | `@transactional`" }, 
    { "id": "b1hABx2Yoms", "title": "Discover how a ResultSetExtractor works? RowMapper Vs ResultSetExtractor || Spring JDBC  | #4" }, 
    { "id": "8IglnYEzVNM", "title": "Develop your first Spring Jdbc app | Configure JdbcTemplate in 2 simple steps | Spring CRUD - Insert" }, 
    { "id": "Suxp_fSMse4", "title": "Spring MVC - Exception Handling | Top 3 Uses of `@ControllerAdvice` | `@ExceptionHandler`, `@ModelAttribute`" }, 
    { "id": "cpFfzE9eGT0", "title": "How exactly the Sessions and Cookies work? || Session Management || Spring MVC || `@SessionAttributes`" }, 
    { "id": "ms4ywje7EYI", "title": "[Spring MVC Advanced] Init Binder | Property Editor | Converter | Validator with Real-Time Scenario." }, 
    { "id": "LxjxWE1StBk", "title": "Spring MVC Java Based Configuration || Game plan || Understanding the wired part || Part 1" }, 
    { "id": "Y26LegLMvpw", "title": "Model View Controller: Spring MVC - Full-stack tech walkthrough || Model || Data Flow" }, 
    { "id": "5_G1jIiK2hI", "title": "Spring MVC  `ViewResolver` - Tech walkthrough || Create your first View using Spring Framework" }, 
    { "id": "hMfAg5WO-mo", "title": "UML basics - Every JAVA Developer Should know this ! | UML Relationship Diagram" }, 
    { "id": "NgwDtAtE9AE", "title": "Spring Boot Security Advanced  - Lockout Users [ EP - 1 ] |  Spring Security Successful login Events" }, 
    { "id": "gD_slsA_VQc", "title": "Java new features -  Static method inside interface ?  java 8 | java interview questions and answers" }, 
    { "id": "bhDfsNA8SdA", "title": "Spring framework 6 Foundation -  Spring Profiles and beyond | Spring Core concepts" }
  ]
}

