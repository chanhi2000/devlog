{
  "channel": {
    "id": "cppweekly",
    "name": "C++ Weekly With Jason Turner",
    "profile": "https://yt3.googleusercontent.com/Hb_hQpJGonrMd9kihI-5gj8PBwVZvasJpdpWn9qxmhXo8UjZeJ9sCWN31FShYUUAGGLFofDLjg=s176-c-k-c0x00ffffff-no-rj",
    "banner": "https://yt3.googleusercontent.com/hGuK35xxMUot29sl0pBB6v-59COh6a5L518qI2G74tzqtq13OYO5s4uMkgEANqQQ6zVz0A6R=w1707-fcrop64=1,00005a57ffffa5a8-k-c0xffffffff-no-nd-rj"
  },
  "videos": [
    { "id": "Zkm1ZaNn3ko", "title": "C++ Weekly - Ep 484 - Infinite Loops, UB, and C++23" },
    { "id": "qIDFyhtUMnQ", "title": "C++ Weekly - Ep 485 - Variadic Structured Bindings in C++26" },
    { "id": "MvjBJmsbM4g", "title": "C++ Weekly - Ep 486 - Captureless Lambdas with Captures" },
    { "id": "acD9F8dzjik", "title": "C++ Weekly - Ep 487 - AI: Not Just Autocomplete" },
    { "id": "DU1SmsjUxWg", "title": "C++ Weekly - Ep 489 - C++11's User Defined Literals" },
    { "id": "iUcS0LCj2Ko", "title": "C++ Weekly - Ep 490 - std::ignore vs _ vs [[maybe_unused]]" },
    { "id": "Ac7cdsIbjE0", "title": "C++ Weekly - Ep 474 - What Can LEA Do For You?" },
    { "id": "W4G2xJX9Gnw", "title": "C++ Weekly - Ep 475 - Lambdas On The Heap?" },
    { "id": "s8UInkalVgs", "title": "C++ Weekly - Ep 476 - C++23's Fold Algorithms" },
    { "id": "KU-Ahb86izo", "title": "C++ Weekly - Ep 477 - What is Empty Base Optimization? (EBO)?" },
    { "id": "qMGi_tdKrrk", "title": "C++ Weekly - Ep 478 - Lambdas on the Heap (2)" },
    { "id": "NoFQnqUZLdA", "title": "C++ Weekly - Ep 479 - final (and when to use it)" },
    { "id": "0kciYs-sK6M", "title": "C++ Weekly - Ep 480 - cmath vs math.h vs abs vs std::abs, fight!" },
    { "id": "cjiraPsZQIs", "title": "C++ Weekly - Ep 481 - What is Tail Call Elimination (Optimization)?" },
    { "id": "RtxZaKUtU-c", "title": "C++ Weekly - Ep 482 - Safely Wrapping C APIs" },
    { "id": "kjogmOXkipw", "title": "C++ Weekly - Ep 483 - Stop Using rand, Start Using Random" },
    { "id": "hWw_P6FUN_E", "title": "C++26's std::span Over initializer_list - C++ Weekly Ep 465" },
    { "id": "GyAZg1LfPZo", "title": "C++ Weekly Ep 466 - invoke_r Should Not Exist" },
    { "id": "1CjVTCiY4fc", "title": "C++ Weekly Ep 467 - enum struct vs enum class" },
    { "id": "vtz8S10hGuc", "title": "C++ Weekly - Ep 468 - Use -fvisibility=hidden!" },
    { "id": "s6CZmNOCoQU", "title": "C++ Weekly - Ep 469 - How to Print in C++23" },
    { "id": "k1I4ZoB50_I", "title": "C++ Weekly - Ep 470 - requires Clause vs requires Expression?" },
    { "id": "9iFJRCHwSok", "title": "C++ Weekly - Ep 471 - C++26's =delete With a Reason" },
    { "id": "M_AUMiSbAwQ", "title": "C++ Weekly - Ep 472 - C++23's static lambdas?!" },
    { "id": "CiB1ex0hi3w", "title": "C++ Weekly - Ep 473 - continue and break Statements" },
    { "id": "5ELoDcqqyX4", "title": "C++ Weekly - Ep 447 - What Are Reference Qualified Members?" },
    { "id": "AFcfRf5KWe0", "title": "C++ Weekly - Ep 448 - C++23's forward_like" },
    { "id": "reWnel5uLS4", "title": "C++ Weekly - Ep 449 - More constexpr Math!" },
    { "id": "jf_OxE3j4AQ", "title": "C++ Weekly - Ep 450 - C++ is a Functional Programming Language" },
    { "id": "-f5HmDR0GGY", "title": "C++ Weekly - Ep 451 - Debunking bad_alloc Memory Errors (They're actually useful!)" },
    { "id": "DzUAqXMUjtc", "title": "C++ Weekly - Ep 456 - RVO + Trivial Types = Faster Code" },
    { "id": "TnsPaEmUSL0", "title": "C++ Weekly - Ep 457 - I Read C++ Magazines (So you don't have to!)" },
    { "id": "E3sfXAaR1E4", "title": "C++ Weekly - Ep 458 - array of bool? No! constexpr std::bitset!" },
    { "id": "XNMnQOFrEIY", "title": "C++ Weekly - Ep 459 - C++26's Saturating Math Operations" },
    { "id": "4P32EFClwuo", "title": "C++ Weekly - Ep 460 - Why is GCC Better Than Clang?" },
    { "id": "QeWdhHyBBv0", "title": "C++ Weekly - Ep 461 - C++26's std::views::concat" },
    { "id": "G6hhZGUE9S4", "title": "C++ Weekly - Ep 462 - C++23's Amazing New Range Formatters" },
    { "id": "T4g92jtGkXM", "title": "C++ Weekly - Ep 463 - C++26's Safer Returns" },
    { "id": "-oSuITjrzgU", "title": "Easily Printing std::variant - C++ Weekly - Ep 464" },
    { "id": "CHc39_qCgMU", "title": "C++ Weekly - Ep 444 - GCC's Implicit constexpr" },
    { "id": "q9_vljSaBDg", "title": "C++ Weekly - Ep 445 - C++11's thread_local" },
    { "id": "zJZhyTvL8UM", "title": "C++ Weekly - Ep 446 - ImHex: An Awesome Hex Editor" },
    { "id": "CagZYOdxYcA", "title": "C++ Weekly - Ep 439 - mutable (And Why To Avoid It)" },
    { "id": "zoXisXdwjZI", "title": "C++ Travel: The Strand / Marvin Braude Bike Trail & Torrance, California" },
    { "id": "et1fjd8X1ho", "title": "C++ Weekly - Ep 440 - Revisiting Visitors for std::visit" },
    { "id": "l2VemFmfkG4", "title": "C++ Weekly - Ep 441 - What is Multiple Dispatch (and how does it apply to C++?)" },
    { "id": "mr3sOT-Delg", "title": "C++ Weekly - Ep 442 - Stop Using .h For C++ Header Files!" },
    { "id": "HNn-PmrL5X8", "title": "C++ Weekly - Ep 443 - Stupid constexpr Tricks" },
    { "id": "ImM7f5IQOaw", "title": "C++ Weekly - Ep 435 - Easy GPU Programming With AdaptiveCpp (68x Faster!)" },
    { "id": "t6hFPKiOS-Q", "title": "C++ Weekly - Ep 436 - Transforming Lambda Captures" },
    { "id": "NMWv2vQQjXE", "title": "C++ Weekly - Ep 437 - Pointers To Overloaded Functions" },
    { "id": "G6FTtZCtFXU", "title": "C++ Weekly - Ep 438 - C++23's ranged-for Fixes" },
    { "id": "CIB_khrNPSU", "title": "C++ Weekly - Ep 430 - How Short String Optimizations Work" },
    { "id": "yPB_btV8epo", "title": "C++ Weekly - Ep 431 - CTAD for NTTP" },
    { "id": "8BEIU2JCoCI", "title": "Travel Vancouver, BC, Canada: C++ Training Travelog" },
    { "id": "QZxfyGmpanM", "title": "C++ Weekly - Ep 432 - Why constexpr Matters" },
    { "id": "YM1nbexgGYw", "title": "C++ Weekly - Ep 433 - C++'s First New Floating Point Types in 40 Years!" },
    { "id": "PTCFddZfnXc", "title": "C++ Weekly - Ep 434 - GCC's Amazing NEW (2024) -Wnrvo" },
    { "id": "F37h3FuA8kM", "title": "C++ Weekly - Ep 427 - Simple Generators Without Coroutines" },
    { "id": "7ZazVQB-RKc", "title": "C++ Weekly - Ep 428 - C++23's Coroutine Support: std::generator" },
    { "id": "s2XWAxbxk9M", "title": "C++ Weekly - Ep 420 - Moving From C++17 to C++20 (More constexpr!)" },
    { "id": "0yJk5yfdih0", "title": "C++ Weekly - Ep 421 - You're Using optional, variant, pair, tuple, any, and expected Wrong!" },
    { "id": "dvxj39gZ22I", "title": "C++ Weekly - Ep 422 - Moving from C++20 to C++23" },
    { "id": "BpulWncdn9Y", "title": "C++ Weekly - Ep 423 - Complete Guide to Attributes Through C++23" },
    { "id": "HgPfbYfV9eE", "title": "C++ Weekly - Ep 424 - .reset vs â†’reset()" },
    { "id": "cUvdtLTJeec", "title": "C++ Weekly - Ep 425 - Using string_view, span, and Pointers Safely!" },
    { "id": "y8Aw6AnQMws", "title": "CS101++ - What Are Nibbles, Bits, Bytes and Words" },
    { "id": "KhF0INTcs5o", "title": "CS101++ - Exploring Circuit Simulation Tools: Online & Offline" },
    { "id": "84Zy1D8MWaI", "title": "C++ Weekly - Ep 415 - Moving From C++98 to C++11" },
    { "id": "0numLoDeTXw", "title": "CS101++ - What Are Computability and the Halting Problem?" },
    { "id": "_Rq8gWimRcA", "title": "C++ Weekly - Ep 416 - Moving From C++11 to C++14" },
    { "id": "gOBbu2dL_R8", "title": "C++ Weekly - Ep 417 - Turbocharge Your Build With Mold?" },
    { "id": "VkkfybyE5GI", "title": "CS101++ - What is a `do` Loop?" },
    { "id": "yL0DWa2LxNU", "title": "C++ Weekly - Ep 418 - Moving From C++14 to C++17" },
    { "id": "E0QhZ6tNoRg", "title": "C++ Weekly - Ep 410 -  What Are Padding and Alignment? (And Why You Might Care)" },
    { "id": "uE0h79vB-rw", "title": "C++ Weekly - Ep 411 - Intro to C++ Exceptions" },
    { "id": "3cgDMAVHdoc", "title": "CS101++ - What are Functions and Procedures?" },
    { "id": "Frl8XKhvA4Q", "title": "C++ Weekly - Ep 412 - Possible Uses of C++23's [[assume]] Attribute" },
    { "id": "A5haG_UCbRI", "title": "C++ Weekly - Ep 407 - C++98 Code Restoration" },
    { "id": "h3F0Fw0R7ME", "title": "C++ Weekly - Ep 405 - Dogbolt: The Decompiler Explorer" },
    { "id": "6SaUwqw4ueE", "title": "C++ Weekly - Ep 404 - How (and Why) To Write Code That Avoids `std::move`" },
    { "id": "tQiOOU9ze9g", "title": "Building a 3d Raycasting Game Engine - Testing and Refinements" }
  ]
}
