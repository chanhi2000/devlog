{
  "channel": {
    "id": "JavaGuides",
    "name": "Java Guides",
    "profile": "https://yt3.googleusercontent.com/RR2DVq45b5FeqMg5xMgI8ar1cZJ65p1tAyS1SKDVGp1Vblf-cDyP3xrZXjIi6ue7Z8OcuDW0=s176-c-k-c0x00ffffff-no-rj",
    "banner": "https://yt3.googleusercontent.com/-uXe4fUjwNo2i-VAS2e59CwYReSd2vt1WOm142CLOiTZpUyVWpb46xkdE1HLH_HFhYRLvRqA9w=w1707-fcrop64=1,00005a57ffffa5a8-k-c0xffffffff-no-nd-rj"
  },
  "videos": [
    { "id": "pXNsSrQSSBU", "title": "25 Java Programs for Beginners for Interview | Last-Minute Brush-up Before Your Interview" },
    { "id": "lPqQaP-BvCY", "title": "Java Coding Program 26 | Polymorphism | Java OOPs Concepts #java #interview #coding" },
    { "id": "yWVyGEUS5lQ", "title": "Build Java REST API using Spring Boot in 1 Minute | Power of Java and Spring Boot #java #restfulapi" },
    { "id": "aYh0QE63rio", "title": "Java Coding Program 27 | OOPs Concepts in Java #java #interview #coding" },
    { "id": "U--4jkn5gtA", "title": "What are Microservices | Explained with an Example #microservices #microservicesarchitecture" },
    { "id": "wkFcfgnmPkw", "title": "How to Become a Full Stack Java Developer in 2024 | Step-by-Step Roadmap #fullstackwebdevelopment" },
    { "id": "GWILSQGGeaU", "title": "Java 8 Program 4 - Find the Age of a Person if the Birthday Date has Given #java #interview #coding" },
    { "id": "h4gE1UfOR-A", "title": "Java Program to Reverse String without using in-built reverse() Method #java #interview #coding" },
    { "id": "twDt-USkzoA", "title": "Difference Between HashMap and ConcurrentHashMap in #java #interview HashMap vs ConcurrentHashMap" },
    { "id": "zOR7tdmeomk", "title": "Java 8 Program 9 - How to Reverse Each Word of String using Java 8 Streams #java #interview #coding" },
    { "id": "oVgq-K2cuV4", "title": "Java 8 Program 10 - How to Sort List of Strings Alphabetically using Java 8 Streams #java #interview" },
    { "id": "dvBG8Hb7hVI", "title": "Generate Amazing REST API Documentation in 1 Step in Spring Boot Projects #springboot #java" },
    { "id": "uDfgPKVH91w", "title": "Quiz: Spring Boot #quiz #springboot #javaguides #java" },
    { "id": "a93_OVO875c", "title": "Quiz: Spring #spring #springboot #quiz #java" },
    { "id": "PFz7cDJwdTQ", "title": "Java Program to Generate Reverse Number Pattern | Java Pattern Programs #java #interview #coding" },
    { "id": "xqEA1QeU9OI", "title": "Using Java Records with Spring Boot 3 | Spring Boot Banking Application" },
    { "id": "-95_IrFM29Y", "title": "Java program to print character pyramid | Java pattern programs #java #interview #coding" },
    { "id": "jSuPBJWwpy0", "title": "Java Program to Generate Hallow Pyramid Pattern | Java Pattern Programs #java #interview" },
    { "id": "zV424o2p2xU", "title": "Top 10 Java 8 Programs with Output for the Interviews | Java 8 Programs for Beginners with Output" },
    { "id": "ib4LCyF50qU", "title": "Java Program to Find the Largest Among Three Numbers #java #interview #javacodinginterviewquestions" },
    { "id": "ebPC6Dzgms8", "title": "Java Program to Find the Largest Among Three Numbers using In-built Function #java #interview" },
    { "id": "rGhKjx62qYs", "title": "Java Program to Check Whether a Number is Even or Odd #java #interview #javacodinginterviewquestions" },
    { "id": "p_tTEVDagLw", "title": "What are Microservices in 1 Minute | Microservices Architecture #microservicesarchitecture" },
    { "id": "Cv4HlPCf3tg", "title": "Learn Spring Core Fundamentals before Jumping into Spring Boot #springboot" },
    { "id": "5MK49R8poZw", "title": "Why Java is not a pure object oriented programming language?" },
    { "id": "Qq0455NVsu4", "title": "Can we declare `main()` method as private, protected, and default access modifier?" },
    { "id": "fl-Dp2aGW3Y", "title": "Can we overload `main()` method in Java ?" },
    { "id": "EpXOb35mGkA", "title": "Event driven microservices architecture #javaguides #microservices" },
    { "id": "mMJDLbc3teM", "title": "Spring @PutMapping Annotation #springboot" },
    { "id": "SkWLMEv35Z0", "title": "Spring @PostMapping Annotation" },
    { "id": "9hQtwOqNBuo", "title": "How event driven microservices architecture works #javaguides #microservicesarchitecture" },
    { "id": "23FaI_EWH4w", "title": "Spring Boot @ConfigurationProperties Annotation Tutorial" },
    { "id": "52TiGF9sm1s", "title": "Spring @PathVariable Annotation #springboot #javaguides" },
    { "id": "PlW0zy_YaIM", "title": "What is ORM ? | Object Relational Mapping" },
    { "id": "Pk1XjQ1oGv8", "title": "Java Coding Program 3  | Coding Program on OOPs Concept #java #coding #interview" },
    { "id": "VVvlFZ6H4kY", "title": "Java Coding Program 10 | String Handling #java #coding #interview" },
    { "id": "5i379k0Xh_s", "title": "Spring Boot Project | Banking Application using Spring Boot 3, Spring Data JPA (Hibernate), & MySQL" },
    { "id": "FoiX_omoB-c", "title": "Java Coding Program 12 | Instance Initializer Block #java #coding #interview" },
    { "id": "nwvUC9KJPZg", "title": "Java Coding Program 14 | Java 8 Features #java #coding #interview" },
    { "id": "5NHZwg54mxk", "title": "Java Coding Program 13 | Java 8 Features #java #javaguides #coding" },
    { "id": "jpGAkF5lc1M", "title": "Java Coding Program 16 | Method Overloading #java #coding #interview" },
    { "id": "v1IFQWzuSrw", "title": "Java, Spring Boot, PostgreSQL, Spring Data JPA, Hibernate CRUD RESTFul API Tutorial [2024]" },
    { "id": "9KkwmKfeyAU", "title": "Java Coding Program 17 | Control Statements and Loops #java #coding #interview" },
    { "id": "mzo_1RLsW3g", "title": "Java Coding Program 18 | Polymorphism | Method Overloading #java #coding #interview" },
    { "id": "KuM6OtuaYRs", "title": "Spring Boot React JS Project | Spring Boot React Crash Course [2024] ðŸ”¥ðŸ”¥ðŸ”¥" },
    { "id": "JhHQVLQSYxU", "title": "Java Coding Program 23 | Exception Handling #java #interview #coding" },
    { "id": "7Fn8ZThZn-s", "title": "Java Coding Program 22 | Exception Handling #java #interview #coding" },
    { "id": "KlA4fAtWSgU", "title": "Java Coding Program 24 | Exception Handling #java #interview #coding" },
    { "id": "AX29BjYMqOQ", "title": "Java Coding Program 25 | Exception Handling #java #interview #coding" },
    { "id": "MMmK9fBHEv0", "title": "[NEW] React + Spring Boot CRUD Full Stack App - 24 - Connect React App to Get Employee REST API" },
    { "id": "54tUcy3kIwA", "title": "[NEW] React + Spring Boot CRUD Full Stack App - 23 - Adding Update Button, Title and Route" },
    { "id": "FrJs9rcTsTo", "title": "[NEW] React + Spring Boot CRUD Full Stack App - 22 - Add Employee Form Validation in React App" },
    { "id": "mqF_Zmlk-_w", "title": "[NEW] React + Spring Boot CRUD Full Stack App - 20 - Add Employee Form Handling in React App" },
    { "id": "HPBdqz_sPXA", "title": "[NEW] React + Spring Boot CRUD Full Stack App - 21 - Connect React App to Add Employee REST API" },
    { "id": "wSoI0_WVfUs", "title": "[NEW] React + Spring Boot CRUD Full Stack App - 19 - Create React EmployeeComponent & Add Route" },
    { "id": "P3V3nWzJk0g", "title": "[NEW] React + Spring Boot CRUD Full Stack App - 17 - Adding Header and Footer to React App" },
    { "id": "EPOd-AH6iuw", "title": "[NEW] React + Spring Boot CRUD Full Stack App - 18 - Configure Routing in a React App" },
    { "id": "9_UqvMkyIuI", "title": "[NEW] React + Spring Boot CRUD Full Stack App - 16 - Connect React App to Get All Employees REST API" },
    { "id": "N0RxiwsuQnA", "title": "[NEW] React + Spring Boot CRUD Full Stack App - 15 - Create React Component to Display Employee Data" },
    { "id": "JuT3ktsyYkw", "title": "[NEW] React + Spring Boot CRUD Full Stack App - 26 - Implement Delete Employee Feature in React App" },
    { "id": "k8whvEtAphE", "title": "[NEW] React + Spring Boot CRUD Full Stack App - 25 - Connect React App to Update Employee REST API" },
    { "id": "w7XYmWw9FDA", "title": "[NEW] React + Spring Boot CRUD Full Stack App - 10 - Build Update Employee REST API (PUT REST API)" },
    { "id": "kPToNQC0Fz8", "title": "[NEW] React + Spring Boot CRUD Full Stack App - 11 - Build Delete Employee  REST API" },
    { "id": "SauEhnjTqV4", "title": "[NEW] React + Spring Boot CRUD Full Stack App - 12 - Create and Set up  React App" },
    { "id": "RD2GJD16otE", "title": "[NEW] React + Spring Boot CRUD Full Stack App - 13 - Understanding  React App Project Structure" },
    { "id": "6d61V56kG_k", "title": "[NEW] React + Spring Boot CRUD Full Stack App - 14 - Adding Bootstrap in React Using NPM" },
    { "id": "dP4goCkKxlw", "title": "[NEW] ReactJS + Spring Boot 3 CRUD Full Stack App - 1 - Project Overview and Architecture" },
    { "id": "jzX-qqfVq1M", "title": "[NEW] React + Spring Boot CRUD Full Stack App - 2 - Create & Setup Spring Boot App in IntelliJ IDEA" },
    { "id": "s0D1AvtvN4w", "title": "[NEW] React + Spring Boot CRUD Full Stack App - 5 - Create EmployeeRepository" },
    { "id": "wWijyhuNPww", "title": "[NEW] React + Spring Boot CRUD Full Stack App - 4 - Create Employee JPA Entity" },
    { "id": "UQYX6qLpXZM", "title": "[NEW] React + Spring Boot CRUD Full Stack App - 3 - Configure MySQL Database in Spring Boot App" },
    { "id": "uNC8v-BVLRU", "title": "[NEW] React + Spring Boot CRUD Full Stack App - 6 - Create EmployeeDto and EmployeeMapper" },
    { "id": "s_SQzKRzI9o", "title": "[NEW] React + Spring Boot CRUD Full Stack App - 7 - Build Add Employee REST API (POST REST API)" },
    { "id": "QJ05OnuK5Qc", "title": "[NEW] React + Spring Boot CRUD Full Stack App - 8 - Build Get Employee  REST API (GET REST API)" },
    { "id": "VTkzzSobnDY", "title": "[NEW] React + Spring Boot CRUD Full Stack App - 9 - Build Get All Employees REST API" },
    { "id": "PAU5edXr2Xo", "title": "Spring Boot RabbitMQ Tutorial - #9 - Configure RabbitMQ in Spring Boot Application" }, 
    { "id": "1PzD85OONTA", "title": "Spring Boot RabbitMQ Tutorial - #6 - Explore RabbitMQ using RabbitMQ Management UI" }, 
    { "id": "2Re6eS2hzwE", "title": "Spring Boot RabbitMQ Tutorial - #5 - Install and Setup RabbitMQ using Docker" }, 
    { "id": "aWnT_BxUtU4", "title": "Spring Boot RabbitMQ Tutorial - #3 - RabbitMQ Core Concepts | Explained with Diagrams" }, 
    { "id": "th3uIP7D8nk", "title": "Spring Boot Restful Web Services Tutorial | Full Course âœ… | REST API | Spring Boot for Beginners" }, 
    { "id": "XkVpb_8IPUM", "title": "Spring Boot React Full Stack | Full Course âœ…" }, 
    { "id": "3RoMHb-LaUA", "title": "React Hooks + Spring Boot CRUD Full Stack App - 19 - Build Delete Employee REST API" }, 
    { "id": "gYrAvZCPJLQ", "title": "React Hooks + Spring Boot CRUD Full Stack App - 9 - Adding Header and Footer to React App" }, 
    { "id": "VR1zoNomG3w", "title": "5 Spring Boot Projects in 10 Hours - Line by Line Coding ðŸ”¥" }, 
    { "id": "djRh94IWYYo", "title": "Take Benefits of My Java Guides Blog and GitHub | My Blog Walkthrough" }, 
    { "id": "DzYyzmP4m5c", "title": "Registration Form using JSP + Servlet + JDBC + MySQL Database Example" }, 
    { "id": "hxZuLn_DHoM", "title": "Spring Boot RabbitMQ Tutorial - #13 - Configure RabbitMQ for JSON Message Communication" }, 
    { "id": "fUsKNjGO4Is", "title": "Spring Core: Why Constructor Based Dependency Injection is Recommended?" }, 
    { "id": "hxZuLn_DHoM", "title": "Spring Boot RabbitMQ Tutorial - #13 - Configure RabbitMQ for JSON Message Communication" }, 
    { "id": "JrkHCGDZB3w", "title": "Spring & Spring Boot Annotations Series - #10  - `@PropertySource` and `@PropertySources` Annotations" }
  ],
  "playlists": [
    {
      "title": "Spring & Spring Boot Annotations",
      "videos": [
        { "id": "ewI4Coe9vJ0", "title": "Spring & Spring Boot Annotations Series - #1 - `@Component` Annotation" },
        { "id": "g9yRS9hL4Rw", "title": "Spring & Spring Boot Annotations Series - #2 - `@Autowired` Annotation" },
        { "id": "-3XtYZJZnxs", "title": "Spring & Spring Boot Annotations Series - #3 - `@Qualifier` Annotation" },
        { "id": "ocecnF10d-k", "title": "Spring & Spring Boot Annotations Series - #4 - `@Primary` Annotation" },
        { "id": "hYky8HEaTCk", "title": "Spring & Spring Boot Annotations Series - #5 - `@Bean` Annotation |` @Configuration` | Java Config" },
        { "id": "MsNLjPKfNh8", "title": "Spring & Spring Boot Annotations Series - #6 - `@Controller`, `@Service` and` @Repository` Annotations" },
        { "id": "ODCzp948cgo", "title": "Spring & Spring Boot Annotations Series - #7 - `@Lazy` Annotation" },
        { "id": "N_pEHBIoBsc", "title": "Spring & Spring Boot Annotations Series - #8 - `@Scope` Annotation | Singleton and Prototype Scopes" },
        { "id": "dtMWOnl_Dl4", "title": "Spring & Spring Boot Annotations Series - #9 - `@Value` Annotation" },
        { "id": "JrkHCGDZB3w", "title": "Spring & Spring Boot Annotations Series - #10  - `@PropertySource` and `@PropertySources` Annotations" },
        { "id": "gUZIzSLIbS8", "title": "Spring Core Annotations Tutorial in 1 Hour | Frequently Asked Spring Core Annotations in Interviews" },
        { "id": "_SzpggQZNlQ", "title": "Spring & Spring Boot Annotations Series - #11 - `@Controller` and @ResponseBody Annotations" },
        { "id": "aAOUolUYj4A", "title": "Spring & Spring Boot Annotations Series - #12 - `@RestController` Annotation" },
        { "id": "2j-LZw9o464", "title": "Spring & Spring Boot Annotations Series - #13 - `@RequestMapping` Annotation" },
        { "id": "Q2gbGOBsBpU", "title": "Spring & Spring Boot Annotations Series - #14 - `@GetMapping` Annotation" },
        { "id": "ZBCSF3Uik0g", "title": "Spring & Spring Boot Annotations Series - #15 - `@PostMapping` and @RequestBody Annotations" },
        { "id": "xJN3qmLkUew", "title": "Spring & Spring Boot Annotations Series - #16 - `@PutMapping` Annotation" },
        { "id": "pCxPb9WVdA8", "title": "Spring & Spring Boot Annotations Series - #17 - `@DeleteMapping` Annotation" },
        { "id": "PoBIwtRhwHo", "title": "Spring & Spring Boot Annotations Series - #18 - `@PathVariable` Annotation" },
        { "id": "nf87YZ4mCQs", "title": "Spring & Spring Boot Annotations Series - #19 - `@RequestParam` Annotation" },
        { "id": "kZKZHiksACM", "title": "Spring Boot Tutorial for Beginners #9 - @SpringBootApplication Annotation" }
      ]
    }
  ]
}



